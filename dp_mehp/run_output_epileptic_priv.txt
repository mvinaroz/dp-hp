


{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.4} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63422222 0.36577778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63138854 0.36861146]
before perturbation, mean and variance of data mean embedding are 0.042669 and 0.144292 
after perturbation, mean and variance of data mean embedding are 0.042954 and 0.211689 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.517
PRC on test generated data is 0.399

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.392

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.535
PRC on test generated data is 0.410

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.394

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.413

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.585
PRC on test generated data is 0.442

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.556
PRC on test generated data is 0.433

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.548
PRC on test generated data is 0.424

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.513
PRC on test generated data is 0.400

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.629
PRC on test generated data is 0.499

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.618
PRC on test generated data is 0.469
----------------------------------------
roc mean across methods is 0.545
prc mean across methods is 0.422


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63377778 0.36622222] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63497615 0.36502385]
before perturbation, mean and variance of data mean embedding are 0.042149 and 0.143683 
after perturbation, mean and variance of data mean embedding are 0.040791 and 0.210656 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.617
PRC on test generated data is 0.473

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.611
PRC on test generated data is 0.463

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.486
PRC on test generated data is 0.388

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.597
PRC on test generated data is 0.451

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.390
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.408


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.616 0.384] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61597147 0.38402853]
before perturbation, mean and variance of data mean embedding are 0.042381 and 0.142236 
after perturbation, mean and variance of data mean embedding are 0.037913 and 0.208994 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.573
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.364

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.528
PRC on test generated data is 0.372

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.570
PRC on test generated data is 0.385

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.576
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.538
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.596
PRC on test generated data is 0.423

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.554
PRC on test generated data is 0.377

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.514
PRC on test generated data is 0.359

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.544
PRC on test generated data is 0.372
----------------------------------------
roc mean across methods is 0.542
prc mean across methods is 0.375


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.61822222 0.38177778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62134407 0.37865593]
before perturbation, mean and variance of data mean embedding are 0.042399 and 0.143016 
after perturbation, mean and variance of data mean embedding are 0.041355 and 0.207488 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.535
PRC on test generated data is 0.371

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.364

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.458
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.531
PRC on test generated data is 0.369

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.353
----------------------------------------
roc mean across methods is 0.505
prc mean across methods is 0.356


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63022222 0.36977778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62967907 0.37032093]
before perturbation, mean and variance of data mean embedding are 0.042431 and 0.143129 
after perturbation, mean and variance of data mean embedding are 0.043790 and 0.209868 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.610
PRC on test generated data is 0.462

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.646
PRC on test generated data is 0.490

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.602
PRC on test generated data is 0.457

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.610
PRC on test generated data is 0.448

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.381
----------------------------------------
roc mean across methods is 0.539
prc mean across methods is 0.409


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.57044036 0.5        0.55653173 0.52177147 0.51542588 0.52666508
 0.52445493 0.51153194 0.52927482 0.51337738 0.57611619 0.53252945]
Average PRC each method:  [0.41924529 0.37264249 0.4146718  0.392416   0.38074954 0.38728657
 0.3867568  0.38116996 0.39449762 0.38025501 0.42533406 0.39300831]
Std ROC each method:  [0.03965672 0.         0.05980131 0.04920161 0.02758173 0.02810304
 0.03340932 0.02242708 0.03823346 0.02075641 0.0452785  0.04623405]
Std PRC each method:  [0.04066755 0.01821713 0.05219846 0.04046249 0.01431969 0.01563093
 0.03014384 0.0301002  0.02669061 0.01557673 0.05318704 0.03965547]
Average over repetitions across all methods
Average ROC:  0.5315099359599719
Average PRC:  0.39400278787850657
Std ROC:  0.014864311265701738
Variance PRC:  0.02442699783898312 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.425} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6471343 0.3528657] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.652208 0.347792]
before perturbation, mean and variance of data mean embedding are 0.042068 and 0.144208 
after perturbation, mean and variance of data mean embedding are 0.042342 and 0.207390 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.604
PRC on test generated data is 0.447

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.634
PRC on test generated data is 0.480

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.566
PRC on test generated data is 0.412

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.386

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.557
PRC on test generated data is 0.417

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.630
PRC on test generated data is 0.450

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.374
----------------------------------------
roc mean across methods is 0.543
prc mean across methods is 0.403


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64927288 0.35072712] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64932821 0.35067179]
before perturbation, mean and variance of data mean embedding are 0.042609 and 0.145476 
after perturbation, mean and variance of data mean embedding are 0.041302 and 0.207842 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.631
PRC on test generated data is 0.477

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.592
PRC on test generated data is 0.436

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.435
PRC on test generated data is 0.369

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.627
PRC on test generated data is 0.462

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.517
PRC on test generated data is 0.389

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.379
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.399


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63088109 0.36911891] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62811238 0.37188762]
before perturbation, mean and variance of data mean embedding are 0.042188 and 0.143366 
after perturbation, mean and variance of data mean embedding are 0.037889 and 0.205522 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.336

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.554
PRC on test generated data is 0.362

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.341

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.339

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.616
PRC on test generated data is 0.423

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.521
PRC on test generated data is 0.353

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.595
PRC on test generated data is 0.426

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.429
PRC on test generated data is 0.316
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.354


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63473054 0.36526946] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63399105 0.36600895]
before perturbation, mean and variance of data mean embedding are 0.042577 and 0.144330 
after perturbation, mean and variance of data mean embedding are 0.041572 and 0.204234 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.513
PRC on test generated data is 0.352

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.347

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.358

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.575
PRC on test generated data is 0.389

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.552
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.524
PRC on test generated data is 0.362

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.350
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.358


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64499572 0.35500428] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64977703 0.35022297]
before perturbation, mean and variance of data mean embedding are 0.042657 and 0.145119 
after perturbation, mean and variance of data mean embedding are 0.043966 and 0.206998 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.591
PRC on test generated data is 0.425

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.549
PRC on test generated data is 0.423

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.631
PRC on test generated data is 0.460

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.384

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.523
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.558
PRC on test generated data is 0.402

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.371

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.369

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.587
PRC on test generated data is 0.448

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.550
PRC on test generated data is 0.398
----------------------------------------
roc mean across methods is 0.544
prc mean across methods is 0.400


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.56787401 0.5        0.54533993 0.51371867 0.55203965 0.53747431
 0.5068499  0.52135752 0.54590213 0.50378617 0.57067999 0.49763598]
Average PRC each method:  [0.407396   0.36051844 0.39337234 0.3796211  0.39291016 0.38392222
 0.3639491  0.37297889 0.39544202 0.36393536 0.41495419 0.36335918]
Std ROC each method:  [0.05191548 0.         0.05653239 0.04576949 0.04941271 0.04607642
 0.00886172 0.02014381 0.04231743 0.00846013 0.04325527 0.03880995]
Std PRC each method:  [0.0545336  0.01690335 0.05524602 0.03273869 0.03470845 0.04161767
 0.01715403 0.02197469 0.02048995 0.01284659 0.03429432 0.02814111]
Average over repetitions across all methods
Average ROC:  0.530221520927102
Average PRC:  0.3826965827056299
Std ROC:  0.01075575912805197
Variance PRC:  0.02187590730482145 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.45} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66075845 0.33924155] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66120311 0.33879689]
before perturbation, mean and variance of data mean embedding are 0.042308 and 0.145860 
after perturbation, mean and variance of data mean embedding are 0.042572 and 0.204681 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.590
PRC on test generated data is 0.415

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.600
PRC on test generated data is 0.443

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.527
PRC on test generated data is 0.376

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.542
PRC on test generated data is 0.387

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.539
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.548
PRC on test generated data is 0.388

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.362
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.381


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66158285 0.33841715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66112155 0.33887845]
before perturbation, mean and variance of data mean embedding are 0.042225 and 0.145551 
after perturbation, mean and variance of data mean embedding are 0.040966 and 0.204064 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.567
PRC on test generated data is 0.401

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.610
PRC on test generated data is 0.440

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.483
PRC on test generated data is 0.363

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.364

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.364
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.373


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65127782 0.34872218] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64547734 0.35452266]
before perturbation, mean and variance of data mean embedding are 0.042524 and 0.145404 
after perturbation, mean and variance of data mean embedding are 0.038381 and 0.203303 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.557
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.633
PRC on test generated data is 0.415

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.545
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.542
PRC on test generated data is 0.360

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.531
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.512
PRC on test generated data is 0.346

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.341

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.546
PRC on test generated data is 0.365
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.357


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64715581 0.35284419] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64534797 0.35465203]
before perturbation, mean and variance of data mean embedding are 0.042473 and 0.144519 
after perturbation, mean and variance of data mean embedding are 0.041504 and 0.200664 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.546
PRC on test generated data is 0.356

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.341

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.539
PRC on test generated data is 0.352

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.487
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.525
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.338

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.336

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.338
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.338


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65787304 0.34212696] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66210128 0.33789872]
before perturbation, mean and variance of data mean embedding are 0.042511 and 0.146423 
after perturbation, mean and variance of data mean embedding are 0.043772 and 0.204214 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.602
PRC on test generated data is 0.420

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.363

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.357

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.632
PRC on test generated data is 0.442

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.519
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.538
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.524
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.355

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.593
PRC on test generated data is 0.419

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.383
----------------------------------------
roc mean across methods is 0.539
prc mean across methods is 0.381


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.57254321 0.5        0.54197703 0.50659585 0.5352081  0.54381309
 0.50953707 0.5124228  0.52038054 0.50215156 0.52990126 0.52178928]
Average PRC each method:  [0.39213837 0.35043228 0.38169939 0.35671845 0.37001714 0.37728063
 0.35593959 0.35846499 0.36712513 0.35164035 0.36950237 0.36246643]
Std ROC each method:  [0.02052144 0.         0.05152227 0.01467878 0.05100374 0.04812215
 0.01897195 0.01602403 0.01415051 0.0046846  0.03622423 0.02145673]
Std PRC each method:  [0.02536652 0.01307848 0.04930223 0.01388997 0.02271355 0.0368156
 0.01438355 0.01537556 0.01753531 0.01232143 0.03082217 0.01434667]
Average over repetitions across all methods
Average ROC:  0.5246933171798325
Average PRC:  0.36611875931824467
Std ROC:  0.010435428600567521
Variance PRC:  0.016606518858474372 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.475} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67157058 0.32842942] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66818036 0.33181964]
before perturbation, mean and variance of data mean embedding are 0.042665 and 0.147485 
after perturbation, mean and variance of data mean embedding are 0.042920 and 0.202291 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.569
PRC on test generated data is 0.394

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.518
PRC on test generated data is 0.357

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.494
PRC on test generated data is 0.344

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.578
PRC on test generated data is 0.388

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.347
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.357


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67673956 0.32326044] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67484885 0.32515115]
before perturbation, mean and variance of data mean embedding are 0.042552 and 0.147586 
after perturbation, mean and variance of data mean embedding are 0.041337 and 0.202005 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.564
PRC on test generated data is 0.403

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.371

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.522
PRC on test generated data is 0.370

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.578
PRC on test generated data is 0.401

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.518
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.554
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.519
PRC on test generated data is 0.377

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.543
PRC on test generated data is 0.396

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.582
PRC on test generated data is 0.408
----------------------------------------
roc mean across methods is 0.534
prc mean across methods is 0.381


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66202783 0.33797217] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65963381 0.34036619]
before perturbation, mean and variance of data mean embedding are 0.042628 and 0.146735 
after perturbation, mean and variance of data mean embedding are 0.038631 and 0.200780 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.617
PRC on test generated data is 0.411

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.486
PRC on test generated data is 0.324

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.341

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.556
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.517
PRC on test generated data is 0.338

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.331

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.545
PRC on test generated data is 0.349
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.340


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66043738 0.33956262] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66185196 0.33814804]
before perturbation, mean and variance of data mean embedding are 0.042563 and 0.146744 
after perturbation, mean and variance of data mean embedding are 0.041629 and 0.198844 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.539
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.533
PRC on test generated data is 0.337

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.338

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.570
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.531
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.521
PRC on test generated data is 0.336

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.325

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.323
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.334


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66878728 0.33121272] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66657935 0.33342065]
before perturbation, mean and variance of data mean embedding are 0.042361 and 0.146493 
after perturbation, mean and variance of data mean embedding are 0.043577 and 0.200718 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.542
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.581
PRC on test generated data is 0.389

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.536
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.345

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.553
PRC on test generated data is 0.371
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.352


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54287109 0.5        0.50360127 0.50131367 0.55053829 0.52885905
 0.52184918 0.51481005 0.53005545 0.51148543 0.52852325 0.53704747]
Average PRC each method:  [0.36698805 0.33840445 0.34040248 0.34035025 0.3707801  0.35411044
 0.35054615 0.3469468  0.35893065 0.34773644 0.35702274 0.35965948]
Std ROC each method:  [0.02449204 0.         0.00720254 0.00609708 0.0422498  0.02883109
 0.02925264 0.00972122 0.02288744 0.00950592 0.02832587 0.03067371]
Std PRC each method:  [0.02875473 0.01409774 0.01577399 0.01774449 0.02719183 0.02712407
 0.0150263  0.01172527 0.01695855 0.01521822 0.02925191 0.02856056]
Average over repetitions across all methods
Average ROC:  0.5225795166391767
Average PRC:  0.35265650341374416
Std ROC:  0.005899698455652856
Variance PRC:  0.01615044536641342 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.5} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68461398 0.31538602]
before perturbation, mean and variance of data mean embedding are 0.042450 and 0.148599 
after perturbation, mean and variance of data mean embedding are 0.042696 and 0.199928 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.595
PRC on test generated data is 0.395

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.633
PRC on test generated data is 0.427

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.544
PRC on test generated data is 0.357

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.580
PRC on test generated data is 0.385

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.566
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.565
PRC on test generated data is 0.370

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335
----------------------------------------
roc mean across methods is 0.540
prc mean across methods is 0.359


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68843642 0.31156358] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69332902 0.30667098]
before perturbation, mean and variance of data mean embedding are 0.042533 and 0.148725 
after perturbation, mean and variance of data mean embedding are 0.041360 and 0.199700 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.549
PRC on test generated data is 0.384

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.615
PRC on test generated data is 0.425

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.349

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.349

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.575
PRC on test generated data is 0.396

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.349
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.362


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67652708 0.32347292] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67192715 0.32807285]
before perturbation, mean and variance of data mean embedding are 0.042393 and 0.147791 
after perturbation, mean and variance of data mean embedding are 0.038531 and 0.198486 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.509
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.541
PRC on test generated data is 0.342

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.598
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.574
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.535
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.523
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.324

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.418
PRC on test generated data is 0.299
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.334


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6749904 0.3250096] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67694175 0.32305825]
before perturbation, mean and variance of data mean embedding are 0.042486 and 0.147707 
after perturbation, mean and variance of data mean embedding are 0.041583 and 0.196442 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.499
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.316

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.563
PRC on test generated data is 0.351

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.479
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.578
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.586
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.328

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.325
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.329


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67829641 0.32170359]
before perturbation, mean and variance of data mean embedding are 0.042539 and 0.148634 
after perturbation, mean and variance of data mean embedding are 0.043714 and 0.199225 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.591
PRC on test generated data is 0.394

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.609
PRC on test generated data is 0.409

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.584
PRC on test generated data is 0.385

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.523
PRC on test generated data is 0.346

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.579
PRC on test generated data is 0.383

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335
----------------------------------------
roc mean across methods is 0.534
prc mean across methods is 0.356


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54869048 0.5        0.571512   0.52437924 0.53688122 0.53259772
 0.51060856 0.52151887 0.52637973 0.51082123 0.54525848 0.4865912 ]
Average PRC each method:  [0.36295138 0.33136201 0.37976752 0.34556835 0.3523852  0.3486126
 0.33750218 0.34608174 0.34807193 0.33936269 0.35802852 0.3285389 ]
Std ROC each method:  [0.03978708 0.         0.05893084 0.03472144 0.03252777 0.0417033
 0.03279992 0.02894619 0.03262044 0.01049868 0.03460353 0.03460918]
Std PRC each method:  [0.03435106 0.01128321 0.05001951 0.02505599 0.01731313 0.02094737
 0.01670395 0.0128213  0.01276759 0.00730564 0.03179807 0.01650451]
Average over repetitions across all methods
Average ROC:  0.5262698941276461
Average PRC:  0.3481860841694697
Std ROC:  0.0090926107510661
Variance PRC:  0.013687250186716389 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.525} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6936803 0.3063197] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6930293 0.3069707]
before perturbation, mean and variance of data mean embedding are 0.042621 and 0.150043 
after perturbation, mean and variance of data mean embedding are 0.042859 and 0.198053 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.578
PRC on test generated data is 0.380

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.550
PRC on test generated data is 0.351

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.340

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.326
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.335


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69628253 0.30371747] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69918924 0.30081076]
before perturbation, mean and variance of data mean embedding are 0.042625 and 0.150362 
after perturbation, mean and variance of data mean embedding are 0.041489 and 0.198175 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.332

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.564
PRC on test generated data is 0.382

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.519
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.571
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.335

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.568
PRC on test generated data is 0.370
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.344


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68736059 0.31263941] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69044808 0.30955192]
before perturbation, mean and variance of data mean embedding are 0.042396 and 0.148612 
after perturbation, mean and variance of data mean embedding are 0.038659 and 0.196287 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.311
----------------------------------------
roc mean across methods is 0.500
prc mean across methods is 0.311


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6866171 0.3133829] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68421302 0.31578698]
before perturbation, mean and variance of data mean embedding are 0.042609 and 0.148693 
after perturbation, mean and variance of data mean embedding are 0.041735 and 0.194362 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.310

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.567
PRC on test generated data is 0.356

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.422
PRC on test generated data is 0.281

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.311

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.555
PRC on test generated data is 0.356

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.311

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.309
----------------------------------------
roc mean across methods is 0.505
prc mean across methods is 0.316


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69107807 0.30892193] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69374536 0.30625464]
before perturbation, mean and variance of data mean embedding are 0.042292 and 0.149017 
after perturbation, mean and variance of data mean embedding are 0.043429 and 0.196611 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.586
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.597
PRC on test generated data is 0.381

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.593
PRC on test generated data is 0.368

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.589
PRC on test generated data is 0.365

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.624
PRC on test generated data is 0.400

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.320
----------------------------------------
roc mean across methods is 0.541
prc mean across methods is 0.344


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.5174812  0.5        0.53279616 0.50265574 0.52860823 0.52950296
 0.50373663 0.50504208 0.51446474 0.51231531 0.52850149 0.51350218]
Average PRC each method:  [0.33184751 0.31958406 0.34116091 0.3237444  0.3408013  0.33432596
 0.32154332 0.32279215 0.32723564 0.33079549 0.33943809 0.32720807]
Std ROC each method:  [0.03438082 0.         0.04123189 0.05429865 0.03477665 0.03516673
 0.00747326 0.00767161 0.02826927 0.02146121 0.0477442  0.02700437]
Std PRC each method:  [0.02579006 0.00856791 0.02466549 0.02836139 0.03292448 0.02097339
 0.01170391 0.01274744 0.0215731  0.01539746 0.03235219 0.02221572]
Average over repetitions across all methods
Average ROC:  0.5157172260652317
Average PRC:  0.3300397407809613
Std ROC:  0.014264652407410799
Variance PRC:  0.014177279859822428 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.55} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69953221 0.30046779] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69998499 0.30001501]
before perturbation, mean and variance of data mean embedding are 0.042701 and 0.150758 
after perturbation, mean and variance of data mean embedding are 0.042932 and 0.196025 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.569
PRC on test generated data is 0.342

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.306

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.554
PRC on test generated data is 0.336

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.577
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.577
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.310

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.681
PRC on test generated data is 0.414

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.613
PRC on test generated data is 0.375
----------------------------------------
roc mean across methods is 0.549
prc mean across methods is 0.334


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70349046 0.29650954] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7068525 0.2931475]
before perturbation, mean and variance of data mean embedding are 0.042783 and 0.151041 
after perturbation, mean and variance of data mean embedding are 0.041684 and 0.196023 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.585
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.316
----------------------------------------
roc mean across methods is 0.507
prc mean across methods is 0.319


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69701331 0.30298669] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7010729 0.2989271]
before perturbation, mean and variance of data mean embedding are 0.042598 and 0.150118 
after perturbation, mean and variance of data mean embedding are 0.038981 and 0.194748 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.541
PRC on test generated data is 0.320

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.573
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.423
PRC on test generated data is 0.282
----------------------------------------
roc mean across methods is 0.506
prc mean across methods is 0.308


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69629363 0.30370637] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69709765 0.30290235]
before perturbation, mean and variance of data mean embedding are 0.042556 and 0.149788 
after perturbation, mean and variance of data mean embedding are 0.041711 and 0.192517 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.524
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.564
PRC on test generated data is 0.334

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.621
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.548
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.545
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.522
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.299

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.302

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.302
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.314


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.697733 0.302267] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6985315 0.3014685]
before perturbation, mean and variance of data mean embedding are 0.042369 and 0.150170 
after perturbation, mean and variance of data mean embedding are 0.043469 and 0.194882 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.561
PRC on test generated data is 0.334

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.302
----------------------------------------
roc mean across methods is 0.505
prc mean across methods is 0.305


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.5319478  0.5        0.5        0.49959203 0.53179831 0.55722522
 0.53950287 0.5142401  0.50776608 0.50082952 0.5372608  0.50858958]
Average PRC each method:  [0.32101747 0.30478589 0.30478589 0.3046287  0.32164421 0.33456266
 0.32465619 0.31674596 0.31082972 0.30540037 0.32693935 0.31550921]
Std ROC each method:  [0.02830271 0.         0.         0.00081595 0.02700126 0.04785311
 0.03373921 0.01677977 0.0084255  0.00197213 0.07202623 0.06075179]
Std PRC each method:  [0.01484444 0.00600791 0.00600791 0.00597209 0.01251418 0.02740143
 0.01519439 0.0096639  0.0047272  0.00629833 0.04379446 0.03172202]
Average over repetitions across all methods
Average ROC:  0.5190626933439837
Average PRC:  0.315958801550268
Std ROC:  0.017120454467878212
Variance PRC:  0.010256424247105817 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.575} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71154517 0.28845483] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71427232 0.28572768]
before perturbation, mean and variance of data mean embedding are 0.042394 and 0.151079 
after perturbation, mean and variance of data mean embedding are 0.042617 and 0.193745 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.306

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.597
PRC on test generated data is 0.352

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.537
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.306

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.615
PRC on test generated data is 0.375
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.315


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71294036 0.28705964] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7121293 0.2878707]
before perturbation, mean and variance of data mean embedding are 0.042369 and 0.151292 
after perturbation, mean and variance of data mean embedding are 0.041304 and 0.193867 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.542
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.307

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.588
PRC on test generated data is 0.358

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.599
PRC on test generated data is 0.377

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.535
PRC on test generated data is 0.324

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.428
PRC on test generated data is 0.284
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.318


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70735961 0.29264039] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70218658 0.29781342]
before perturbation, mean and variance of data mean embedding are 0.042489 and 0.151033 
after perturbation, mean and variance of data mean embedding are 0.038983 and 0.193141 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.514
PRC on test generated data is 0.300

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.635
PRC on test generated data is 0.396

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.547
PRC on test generated data is 0.319

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.551
PRC on test generated data is 0.329

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.541
PRC on test generated data is 0.314
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.312


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70561563 0.29438437] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70780909 0.29219091]
before perturbation, mean and variance of data mean embedding are 0.042535 and 0.151232 
after perturbation, mean and variance of data mean embedding are 0.041716 and 0.191407 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.503
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.555
PRC on test generated data is 0.316

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.575
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.530
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.580
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.294
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.301


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70666202 0.29333798] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70234765 0.29765235]
before perturbation, mean and variance of data mean embedding are 0.042270 and 0.150600 
after perturbation, mean and variance of data mean embedding are 0.043337 and 0.192809 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.591
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.498
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.541
PRC on test generated data is 0.314
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.299


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52994878 0.5        0.5        0.50048773 0.57513807 0.51212847
 0.55263353 0.51668542 0.5245694  0.49942261 0.50182481 0.52663175]
Average PRC each method:  [0.31106146 0.29715216 0.29715216 0.29757361 0.34333769 0.30393442
 0.32817738 0.30900327 0.31192867 0.29715216 0.29869174 0.31592545]
Std ROC each method:  [0.03406351 0.         0.         0.00128907 0.04472471 0.01508282
 0.03206173 0.02068705 0.03065696 0.00063103 0.00186914 0.06043572]
Std PRC each method:  [0.01677849 0.00671758 0.00671758 0.00715444 0.0355228  0.00846051
 0.02674669 0.01188854 0.01595929 0.00671758 0.00647073 0.031532  ]
Average over repetitions across all methods
Average ROC:  0.5199558800406863
Average PRC:  0.3092575127121233
Std ROC:  0.00468622429216189
Variance PRC:  0.0076524760263897125 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.6} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72284264 0.27715736] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7257328 0.2742672]
before perturbation, mean and variance of data mean embedding are 0.042501 and 0.152796 
after perturbation, mean and variance of data mean embedding are 0.042717 and 0.192833 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.538
PRC on test generated data is 0.324

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.530
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.549
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.304

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.304

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301
----------------------------------------
roc mean across methods is 0.510
prc mean across methods is 0.307


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71844332 0.28155668] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71834081 0.28165919]
before perturbation, mean and variance of data mean embedding are 0.042716 and 0.152989 
after perturbation, mean and variance of data mean embedding are 0.041682 and 0.192948 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.592
PRC on test generated data is 0.344

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.487
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.550
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.551
PRC on test generated data is 0.314

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.496
PRC on test generated data is 0.290

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.299


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71878173 0.28121827] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71689865 0.28310135]
before perturbation, mean and variance of data mean embedding are 0.042586 and 0.152600 
after perturbation, mean and variance of data mean embedding are 0.039184 and 0.192163 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.495
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.562
PRC on test generated data is 0.324

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.604
PRC on test generated data is 0.370

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.296

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.291

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.518
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.525
PRC on test generated data is 0.303
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.303


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71404399 0.28595601] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71351205 0.28648795]
before perturbation, mean and variance of data mean embedding are 0.042603 and 0.152080 
after perturbation, mean and variance of data mean embedding are 0.041808 and 0.189959 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.587
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.541
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.280
----------------------------------------
roc mean across methods is 0.511
prc mean across methods is 0.285


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.7143824 0.2856176] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71672073 0.28327927]
before perturbation, mean and variance of data mean embedding are 0.042250 and 0.151402 
after perturbation, mean and variance of data mean embedding are 0.043285 and 0.191168 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.541
PRC on test generated data is 0.322

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.623
PRC on test generated data is 0.346

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.517
PRC on test generated data is 0.288

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.579
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.297

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.544
PRC on test generated data is 0.303
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.298


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52566639 0.5        0.5183631  0.49643937 0.53231724 0.5216962
 0.53392372 0.52384468 0.51513037 0.51096936 0.50367247 0.51371585]
Average PRC each method:  [0.30502243 0.2887135  0.29938284 0.2887135  0.30640734 0.29929127
 0.30734986 0.30776501 0.29735464 0.2940953  0.29126716 0.29537698]
Std ROC each method:  [0.03470172 0.         0.03672619 0.00500712 0.04785455 0.02305366
 0.03050668 0.04060964 0.0186092  0.02005599 0.00753062 0.01779626]
Std PRC each method:  [0.01382656 0.00756049 0.02344255 0.00756049 0.02477385 0.01665586
 0.01622551 0.03175129 0.01084495 0.01321915 0.0097952  0.00886147]
Average over repetitions across all methods
Average ROC:  0.5163115624335529
Average PRC:  0.2983949867902753
Std ROC:  0.006449756481422788
Variance PRC:  0.0071723505306405325 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.625} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.73085771 0.26914229] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73439524 0.26560476]
before perturbation, mean and variance of data mean embedding are 0.042438 and 0.153903 
after perturbation, mean and variance of data mean embedding are 0.042648 and 0.191657 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292
----------------------------------------
roc mean across methods is 0.503
prc mean across methods is 0.293


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72724285 0.27275715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72911619 0.27088381]
before perturbation, mean and variance of data mean embedding are 0.042466 and 0.153326 
after perturbation, mean and variance of data mean embedding are 0.041462 and 0.191244 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.544
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.284
----------------------------------------
roc mean across methods is 0.504
prc mean across methods is 0.286


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72954321 0.27045679] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73536398 0.26463602]
before perturbation, mean and variance of data mean embedding are 0.042518 and 0.153989 
after perturbation, mean and variance of data mean embedding are 0.039215 and 0.191248 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.289
----------------------------------------
roc mean across methods is 0.500
prc mean across methods is 0.289


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72855734 0.27144266] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73188986 0.26811014]
before perturbation, mean and variance of data mean embedding are 0.042506 and 0.153273 
after perturbation, mean and variance of data mean embedding are 0.041734 and 0.188796 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.510
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.597
PRC on test generated data is 0.334

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.632
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.512
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.629
PRC on test generated data is 0.392

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.288

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.287
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.306


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72034177 0.27965823] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72175907 0.27824093]
before perturbation, mean and variance of data mean embedding are 0.042643 and 0.152882 
after perturbation, mean and variance of data mean embedding are 0.043648 and 0.190267 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.525
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.267

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.527
PRC on test generated data is 0.281

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.268

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.279
----------------------------------------
roc mean across methods is 0.507
prc mean across methods is 0.271


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.50704333 0.5        0.5        0.49979079 0.52483412 0.54220529
 0.5024337  0.52583502 0.5        0.5        0.50057669 0.50520606]
Average PRC each method:  [0.2878519  0.28367816 0.28367816 0.28367816 0.29582115 0.30532877
 0.28492668 0.30478582 0.28367816 0.28367816 0.28421072 0.28605848]
Std ROC each method:  [0.00982146 0.         0.         0.00041841 0.03765953 0.04850883
 0.0048674  0.05167005 0.         0.         0.0007094  0.0104071 ]
Std PRC each method:  [0.00346228 0.00857964 0.00857964 0.00857964 0.01936669 0.02916142
 0.00933362 0.04448223 0.00857964 0.00857964 0.00845471 0.00435295]
Average over repetitions across all methods
Average ROC:  0.5089937506190446
Average PRC:  0.2889478606617039
Std ROC:  0.011627921402026675
Variance PRC:  0.011373376343561453 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.4} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63422222 0.36577778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63418059 0.36581941]
before perturbation, mean and variance of data mean embedding are 0.024331 and 0.111104 
after perturbation, mean and variance of data mean embedding are 0.023415 and 0.189149 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.586
PRC on test generated data is 0.449

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.583
PRC on test generated data is 0.457

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.399

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.611
PRC on test generated data is 0.461

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.563
PRC on test generated data is 0.423

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.414

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.533
PRC on test generated data is 0.422

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.560
PRC on test generated data is 0.439

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.599
PRC on test generated data is 0.466

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.488
PRC on test generated data is 0.386
----------------------------------------
roc mean across methods is 0.548
prc mean across methods is 0.425


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63377778 0.36622222] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63504515 0.36495485]
before perturbation, mean and variance of data mean embedding are 0.024097 and 0.110282 
after perturbation, mean and variance of data mean embedding are 0.022829 and 0.187690 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.590
PRC on test generated data is 0.455

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.391

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.397

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.557
PRC on test generated data is 0.423

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.408

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.607
PRC on test generated data is 0.462

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.546
PRC on test generated data is 0.423

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.561
PRC on test generated data is 0.443

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.529
PRC on test generated data is 0.409

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.398

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.525
PRC on test generated data is 0.402
----------------------------------------
roc mean across methods is 0.539
prc mean across methods is 0.417


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.616 0.384] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61781542 0.38218458]
before perturbation, mean and variance of data mean embedding are 0.024040 and 0.109329 
after perturbation, mean and variance of data mean embedding are 0.020293 and 0.187013 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.543
PRC on test generated data is 0.377

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.352

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.658
PRC on test generated data is 0.452

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.587
PRC on test generated data is 0.418

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.535
PRC on test generated data is 0.380

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.350

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.599
PRC on test generated data is 0.441

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.436
PRC on test generated data is 0.323
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.374


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.61822222 0.38177778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61306777 0.38693223]
before perturbation, mean and variance of data mean embedding are 0.024348 and 0.110379 
after perturbation, mean and variance of data mean embedding are 0.023331 and 0.187177 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.550
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.617
PRC on test generated data is 0.450

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.371

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.642
PRC on test generated data is 0.438

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.612
PRC on test generated data is 0.422

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.576
PRC on test generated data is 0.416

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.533
PRC on test generated data is 0.383

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.356

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.621
PRC on test generated data is 0.461

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.489
PRC on test generated data is 0.349
----------------------------------------
roc mean across methods is 0.557
prc mean across methods is 0.394


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63022222 0.36977778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63121001 0.36878999]
before perturbation, mean and variance of data mean embedding are 0.024286 and 0.110710 
after perturbation, mean and variance of data mean embedding are 0.024163 and 0.190051 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.576
PRC on test generated data is 0.435

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.395

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.540
PRC on test generated data is 0.402

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.384

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.557
PRC on test generated data is 0.413

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.539
PRC on test generated data is 0.405

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.545
PRC on test generated data is 0.410

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.381

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.659
PRC on test generated data is 0.484

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.593
PRC on test generated data is 0.439
----------------------------------------
roc mean across methods is 0.544
prc mean across methods is 0.409


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.56914952 0.5        0.50026596 0.54454607 0.53106971 0.56065774
 0.59964855 0.55656901 0.54148489 0.51860501 0.59754213 0.50644065]
Average PRC each method:  [0.41949787 0.37264249 0.37296715 0.40940119 0.38939623 0.40910062
 0.43450007 0.41523699 0.40762335 0.3870999  0.45013616 0.37960363]
Std ROC each method:  [0.01892037 0.         0.00053191 0.04668441 0.01763776 0.05550776
 0.03687747 0.02098115 0.01052701 0.02338408 0.04868483 0.05162913]
Std PRC each method:  [0.03354124 0.01821713 0.01852891 0.04007235 0.02504989 0.03776953
 0.01899512 0.00610526 0.02378739 0.03321131 0.02937187 0.04069451]
Average over repetitions across all methods
Average ROC:  0.5438316029820689
Average PRC:  0.4039338040199737
Std ROC:  0.008290170548153971
Variance PRC:  0.017857176587624004 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.425} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6471343 0.3528657] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65046153 0.34953847]
before perturbation, mean and variance of data mean embedding are 0.024069 and 0.111264 
after perturbation, mean and variance of data mean embedding are 0.023188 and 0.184580 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.622
PRC on test generated data is 0.455

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.377

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.473
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.573
PRC on test generated data is 0.418

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.377

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.512
PRC on test generated data is 0.386

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.383

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.482
PRC on test generated data is 0.367
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.386


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64927288 0.35072712] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6509606 0.3490394]
before perturbation, mean and variance of data mean embedding are 0.024301 and 0.111970 
after perturbation, mean and variance of data mean embedding are 0.023081 and 0.184098 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.526
PRC on test generated data is 0.392

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.386

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.568
PRC on test generated data is 0.415

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.387

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.557
PRC on test generated data is 0.418

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.593
PRC on test generated data is 0.436

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.550
PRC on test generated data is 0.409

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.493
PRC on test generated data is 0.379

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.547
PRC on test generated data is 0.414

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.571
PRC on test generated data is 0.417
----------------------------------------
roc mean across methods is 0.536
prc mean across methods is 0.401


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63088109 0.36911891] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62786075 0.37213925]
before perturbation, mean and variance of data mean embedding are 0.024055 and 0.110092 
after perturbation, mean and variance of data mean embedding are 0.020449 and 0.182875 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.342

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.533
PRC on test generated data is 0.352

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.528
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.605
PRC on test generated data is 0.404

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.537
PRC on test generated data is 0.363

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.538
PRC on test generated data is 0.354
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.349


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63473054 0.36526946] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62997651 0.37002349]
before perturbation, mean and variance of data mean embedding are 0.024248 and 0.110955 
after perturbation, mean and variance of data mean embedding are 0.023270 and 0.182938 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.542
PRC on test generated data is 0.370

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.347

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.346

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.546
PRC on test generated data is 0.369

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.351

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.571
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.565
PRC on test generated data is 0.386

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.538
PRC on test generated data is 0.378

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.347

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.582
PRC on test generated data is 0.400

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.477
PRC on test generated data is 0.336
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.363


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64499572 0.35500428] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64448577 0.35551423]
before perturbation, mean and variance of data mean embedding are 0.024184 and 0.111071 
after perturbation, mean and variance of data mean embedding are 0.024066 and 0.185569 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.587
PRC on test generated data is 0.418

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.544
PRC on test generated data is 0.405

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.528
PRC on test generated data is 0.384

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.552
PRC on test generated data is 0.399

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.540
PRC on test generated data is 0.402

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.608
PRC on test generated data is 0.432

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.577
PRC on test generated data is 0.415
----------------------------------------
roc mean across methods is 0.537
prc mean across methods is 0.392


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53082986 0.5        0.50028902 0.51253364 0.5590913  0.50710799
 0.53632883 0.54861873 0.54120372 0.50942496 0.55686956 0.52907166]
Average PRC each method:  [0.37804507 0.36051844 0.36089708 0.37056127 0.39461595 0.36485173
 0.38518216 0.39044288 0.38857929 0.36987551 0.3981693  0.37754611]
Std ROC each method:  [0.03205633 0.         0.00057803 0.01637129 0.03421537 0.00516867
 0.03452269 0.03610233 0.03609687 0.01648372 0.03456155 0.04256101]
Std PRC each method:  [0.02699407 0.01690335 0.0165686  0.02416319 0.03650381 0.01866811
 0.02237209 0.03330163 0.0147629  0.0246339  0.02394413 0.03256451]
Average over repetitions across all methods
Average ROC:  0.5276141055608309
Average PRC:  0.3782737314433582
Std ROC:  0.00838481435646168
Variance PRC:  0.019224051147771936 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.45} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66075845 0.33924155] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66393501 0.33606499]
before perturbation, mean and variance of data mean embedding are 0.024257 and 0.112428 
after perturbation, mean and variance of data mean embedding are 0.023407 and 0.181093 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.536
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.375

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.566
PRC on test generated data is 0.397

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.598
PRC on test generated data is 0.414

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.532
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.498
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.522
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.366

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.536
PRC on test generated data is 0.385

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.487
PRC on test generated data is 0.357
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.377


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66158285 0.33841715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66048457 0.33951543]
before perturbation, mean and variance of data mean embedding are 0.024156 and 0.112137 
after perturbation, mean and variance of data mean embedding are 0.022980 and 0.179962 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.551
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.565
PRC on test generated data is 0.398

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.377

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.549
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.537
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.383

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.515
PRC on test generated data is 0.382

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.565
PRC on test generated data is 0.398
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.380


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65127782 0.34872218] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65148973 0.34851027]
before perturbation, mean and variance of data mean embedding are 0.024374 and 0.112267 
after perturbation, mean and variance of data mean embedding are 0.020899 and 0.179981 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.541
PRC on test generated data is 0.360

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.346

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.571
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.514
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.602
PRC on test generated data is 0.414

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.579
PRC on test generated data is 0.404

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.347
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.360


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64715581 0.35284419] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64217852 0.35782148]
before perturbation, mean and variance of data mean embedding are 0.024344 and 0.111913 
after perturbation, mean and variance of data mean embedding are 0.023401 and 0.179381 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.530
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.496
PRC on test generated data is 0.329

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.611
PRC on test generated data is 0.388

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.548
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.608
PRC on test generated data is 0.417

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.574
PRC on test generated data is 0.380

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.336

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.583
PRC on test generated data is 0.389

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.492
PRC on test generated data is 0.327
----------------------------------------
roc mean across methods is 0.538
prc mean across methods is 0.355


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65787304 0.34212696] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65900833 0.34099167]
before perturbation, mean and variance of data mean embedding are 0.024194 and 0.112042 
after perturbation, mean and variance of data mean embedding are 0.024081 and 0.181867 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.525
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.368

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.543
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.525
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.491
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.368

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.578
PRC on test generated data is 0.401
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.365


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53640155 0.5        0.5        0.50468091 0.55060245 0.54754505
 0.53359541 0.52890279 0.54378587 0.50229721 0.54450516 0.5274637 ]
Average PRC each method:  [0.3698947  0.35043228 0.35043228 0.35514304 0.3769117  0.37707975
 0.36802313 0.37436977 0.38348711 0.35229194 0.38556846 0.36612429]
Std ROC each method:  [0.00899337 0.         0.         0.00842329 0.04040839 0.03408297
 0.01356634 0.04270599 0.03757748 0.00342582 0.03102429 0.03730692]
Std PRC each method:  [0.01455715 0.01307848 0.01307848 0.01748888 0.02200072 0.02710888
 0.01598139 0.02516773 0.01769349 0.01206096 0.011754   0.02909809]
Average over repetitions across all methods
Average ROC:  0.5266483423435082
Average PRC:  0.36747987008369837
Std ROC:  0.007117558845614434
Variance PRC:  0.009644404358510453 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.475} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67157058 0.32842942] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67304081 0.32695919]
before perturbation, mean and variance of data mean embedding are 0.024327 and 0.113475 
after perturbation, mean and variance of data mean embedding are 0.023507 and 0.177832 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.622
PRC on test generated data is 0.436

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.351

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.618
PRC on test generated data is 0.418

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.521
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.568
PRC on test generated data is 0.396

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.355

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.495
PRC on test generated data is 0.345
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.367


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67673956 0.32326044] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6789655 0.3210345]
before perturbation, mean and variance of data mean embedding are 0.024343 and 0.113802 
after perturbation, mean and variance of data mean embedding are 0.023208 and 0.177015 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.599
PRC on test generated data is 0.419

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.360

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.590
PRC on test generated data is 0.412

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.559
PRC on test generated data is 0.398

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.563
PRC on test generated data is 0.417

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.360

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.513
PRC on test generated data is 0.373

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.559
PRC on test generated data is 0.390
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.380


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66202783 0.33797217] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66024696 0.33975304]
before perturbation, mean and variance of data mean embedding are 0.024185 and 0.112366 
after perturbation, mean and variance of data mean embedding are 0.020833 and 0.176162 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.550
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.526
PRC on test generated data is 0.337

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.621
PRC on test generated data is 0.416

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.546
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.327

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.329

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.333
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.340


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66043738 0.33956262] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6575193 0.3424807]
before perturbation, mean and variance of data mean embedding are 0.024175 and 0.112277 
after perturbation, mean and variance of data mean embedding are 0.023266 and 0.175704 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.609
PRC on test generated data is 0.383

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.324

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.518
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.526
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.560
PRC on test generated data is 0.364

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.493
PRC on test generated data is 0.318
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.333


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66878728 0.33121272] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66915256 0.33084744]
before perturbation, mean and variance of data mean embedding are 0.024195 and 0.113008 
after perturbation, mean and variance of data mean embedding are 0.024086 and 0.178495 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.531
PRC on test generated data is 0.371

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.351

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.342

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.514
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.365

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.346

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.583
PRC on test generated data is 0.390
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.351


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.56048305 0.5        0.5        0.50312929 0.56922021 0.50176903
 0.54679486 0.5335561  0.52287769 0.50068606 0.51857319 0.52974119]
Average PRC each method:  [0.37916757 0.33840445 0.33840445 0.34140875 0.37847917 0.33972437
 0.36985211 0.36343844 0.35584289 0.33901103 0.35339154 0.35505253]
Std ROC each method:  [0.04455399 0.         0.         0.0055363  0.04574491 0.00279065
 0.04038851 0.02268153 0.02186486 0.00115808 0.02110887 0.03589781]
Std PRC each method:  [0.04289299 0.01409774 0.01409774 0.01556538 0.03371196 0.01354119
 0.03213514 0.01819098 0.03121578 0.01405448 0.01497245 0.02946216]
Average over repetitions across all methods
Average ROC:  0.5239025565985933
Average PRC:  0.35434810934907046
Std ROC:  0.00611326585788564
Variance PRC:  0.017237296666893956 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.5} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67871277 0.32128723]
before perturbation, mean and variance of data mean embedding are 0.024392 and 0.114617 
after perturbation, mean and variance of data mean embedding are 0.023600 and 0.175035 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.545
PRC on test generated data is 0.356

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.528
PRC on test generated data is 0.353

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.590
PRC on test generated data is 0.384

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.621
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.570
PRC on test generated data is 0.378

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.585
PRC on test generated data is 0.380

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.496
PRC on test generated data is 0.333
----------------------------------------
roc mean across methods is 0.541
prc mean across methods is 0.359


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68843642 0.31156358] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68673865 0.31326135]
before perturbation, mean and variance of data mean embedding are 0.024234 and 0.114575 
after perturbation, mean and variance of data mean embedding are 0.023138 and 0.173976 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.540
PRC on test generated data is 0.370

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.601
PRC on test generated data is 0.406

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.542
PRC on test generated data is 0.377

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.622
PRC on test generated data is 0.428

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.355

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.548
PRC on test generated data is 0.373
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.367


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67652708 0.32347292] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67784656 0.32215344]
before perturbation, mean and variance of data mean embedding are 0.024303 and 0.113719 
after perturbation, mean and variance of data mean embedding are 0.021065 and 0.173487 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.572
PRC on test generated data is 0.361

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.518
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.323

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.323
----------------------------------------
roc mean across methods is 0.510
prc mean across methods is 0.327


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6749904 0.3250096] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67567809 0.32432191]
before perturbation, mean and variance of data mean embedding are 0.024393 and 0.114121 
after perturbation, mean and variance of data mean embedding are 0.023514 and 0.173473 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.618
PRC on test generated data is 0.390

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.622
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.329

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.323

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.489
PRC on test generated data is 0.313
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.332


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6885341 0.3114659]
before perturbation, mean and variance of data mean embedding are 0.024281 and 0.114533 
after perturbation, mean and variance of data mean embedding are 0.024175 and 0.175916 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.522
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.522
PRC on test generated data is 0.349

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.351

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.516
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.339

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.577
PRC on test generated data is 0.379
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.344


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.5213759  0.5        0.5        0.50556524 0.5807567  0.53945801
 0.56577107 0.5159498  0.50943252 0.50049557 0.51887969 0.5230412 ]
Average PRC each method:  [0.34335897 0.33136201 0.33136201 0.33497997 0.37796323 0.35311929
 0.37168096 0.34245102 0.34289189 0.33265619 0.34255523 0.34423343]
Std ROC each method:  [0.01904082 0.         0.         0.01113049 0.03274034 0.0444163
 0.05136414 0.01849833 0.00552693 0.00243272 0.03326798 0.03387244]
Std PRC each method:  [0.02074799 0.01128321 0.01128321 0.01438407 0.020409   0.03187497
 0.03737859 0.01393876 0.00783712 0.01343038 0.02124929 0.02679276]
Average over repetitions across all methods
Average ROC:  0.5233938078310619
Average PRC:  0.34571785037612773
Std ROC:  0.011204829472008272
Variance PRC:  0.01528980830430798 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.525} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6936803 0.3063197] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6917349 0.3082651]
before perturbation, mean and variance of data mean embedding are 0.024222 and 0.115023 
after perturbation, mean and variance of data mean embedding are 0.023456 and 0.172140 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.604
PRC on test generated data is 0.396

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.605
PRC on test generated data is 0.399

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.563
PRC on test generated data is 0.360

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.621
PRC on test generated data is 0.429

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.552
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.550
PRC on test generated data is 0.360

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.520
PRC on test generated data is 0.348

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.617
PRC on test generated data is 0.399

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.488
PRC on test generated data is 0.321
----------------------------------------
roc mean across methods is 0.552
prc mean across methods is 0.363


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69628253 0.30371747] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69657459 0.30342541]
before perturbation, mean and variance of data mean embedding are 0.024317 and 0.115143 
after perturbation, mean and variance of data mean embedding are 0.023256 and 0.171106 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.639
PRC on test generated data is 0.459

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.560
PRC on test generated data is 0.362
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.347


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68736059 0.31263941] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68927252 0.31072748]
before perturbation, mean and variance of data mean embedding are 0.024277 and 0.114745 
after perturbation, mean and variance of data mean embedding are 0.021144 and 0.171000 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.522
PRC on test generated data is 0.323

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.313

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.486
PRC on test generated data is 0.306

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.608
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.516
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.516
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.320

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.313

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.311
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.321


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6866171 0.3133829] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68730168 0.31269832]
before perturbation, mean and variance of data mean embedding are 0.024314 and 0.114492 
after perturbation, mean and variance of data mean embedding are 0.023464 and 0.170537 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.309

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.583
PRC on test generated data is 0.360

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.513
PRC on test generated data is 0.315

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.556
PRC on test generated data is 0.368

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.316
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.321


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69107807 0.30892193] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6958517 0.3041483]
before perturbation, mean and variance of data mean embedding are 0.024326 and 0.115209 
after perturbation, mean and variance of data mean embedding are 0.024224 and 0.173080 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.511
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.322

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.565
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.551
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.497
PRC on test generated data is 0.320

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.323

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.588
PRC on test generated data is 0.372
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.330


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52744785 0.5        0.5        0.5209733  0.52742258 0.53218526
 0.57553173 0.5167604  0.51716633 0.50555376 0.5352939  0.52992278]
Average PRC each method:  [0.33694845 0.31958406 0.31958406 0.33454446 0.33594813 0.34376705
 0.37357571 0.33025643 0.33092188 0.3257965  0.34714971 0.33650268]
Std ROC each method:  [0.03903887 0.         0.         0.04188595 0.03804939 0.04622529
 0.0440161  0.01782911 0.01754038 0.00867812 0.04582919 0.03818051]
Std PRC each method:  [0.03030322 0.00856791 0.00856791 0.03298627 0.02140616 0.04447365
 0.04736089 0.01052488 0.01522835 0.01306608 0.03196225 0.02537023]
Average over repetitions across all methods
Average ROC:  0.5240214898618604
Average PRC:  0.33621492558262767
Std ROC:  0.014322891569315016
Variance PRC:  0.01625525272583174 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.55} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69953221 0.30046779] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69941655 0.30058345]
before perturbation, mean and variance of data mean embedding are 0.024403 and 0.115519 
after perturbation, mean and variance of data mean embedding are 0.023661 and 0.169453 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.609
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.560
PRC on test generated data is 0.359

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.589
PRC on test generated data is 0.359

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.563
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.680
PRC on test generated data is 0.410

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.315

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.497
PRC on test generated data is 0.306

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.579
PRC on test generated data is 0.365

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.482
PRC on test generated data is 0.300
----------------------------------------
roc mean across methods is 0.548
prc mean across methods is 0.339


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70349046 0.29650954] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70286595 0.29713405]
before perturbation, mean and variance of data mean embedding are 0.024385 and 0.116368 
after perturbation, mean and variance of data mean embedding are 0.023358 and 0.169016 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.486
PRC on test generated data is 0.316

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.533
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.318

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.564
PRC on test generated data is 0.348
----------------------------------------
roc mean across methods is 0.510
prc mean across methods is 0.322


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69701331 0.30298669] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69760238 0.30239762]
before perturbation, mean and variance of data mean embedding are 0.024445 and 0.115910 
after perturbation, mean and variance of data mean embedding are 0.021411 and 0.168772 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.532
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.577
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.566
PRC on test generated data is 0.338
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.310


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69629363 0.30370637] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69222036 0.30777964]
before perturbation, mean and variance of data mean embedding are 0.024347 and 0.115351 
after perturbation, mean and variance of data mean embedding are 0.023524 and 0.168197 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.511
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.627
PRC on test generated data is 0.374

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.618
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.299

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.517
PRC on test generated data is 0.316

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.301
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.315


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.697733 0.302267] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69362282 0.30637718]
before perturbation, mean and variance of data mean embedding are 0.024195 and 0.115522 
after perturbation, mean and variance of data mean embedding are 0.024096 and 0.170225 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.526
PRC on test generated data is 0.315

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.306

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.564
PRC on test generated data is 0.332

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.571
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.599
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.496
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.302

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.304

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.572
PRC on test generated data is 0.341
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.317


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.5293676  0.5        0.5        0.51260372 0.55326736 0.53227028
 0.59242343 0.50270374 0.51850495 0.49901058 0.52036034 0.53742636]
Average PRC each method:  [0.32206909 0.30478589 0.30478589 0.31616316 0.33630043 0.32489213
 0.36133539 0.30708323 0.31861154 0.30463437 0.32071479 0.3253995 ]
Std ROC each method:  [0.04117647 0.         0.         0.02384283 0.05331291 0.03013305
 0.05550982 0.00418161 0.02950661 0.001019   0.02975048 0.03711277]
Std PRC each method:  [0.02430797 0.00600791 0.00600791 0.02243596 0.02704716 0.02231051
 0.03369208 0.00484353 0.01956439 0.0059731  0.02319765 0.0208027 ]
Average over repetitions across all methods
Average ROC:  0.5248281957053609
Average PRC:  0.32056461884184745
Std ROC:  0.013132697751099992
Variance PRC:  0.009782266828311794 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.575} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71154517 0.28845483] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7103431 0.2896569]
before perturbation, mean and variance of data mean embedding are 0.024329 and 0.116437 
after perturbation, mean and variance of data mean embedding are 0.023610 and 0.167310 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.554
PRC on test generated data is 0.328

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.583
PRC on test generated data is 0.349

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.540
PRC on test generated data is 0.325

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.308

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.529
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.589
PRC on test generated data is 0.351

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.492
PRC on test generated data is 0.300
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.317


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71294036 0.28705964] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71214655 0.28785345]
before perturbation, mean and variance of data mean embedding are 0.024250 and 0.116370 
after perturbation, mean and variance of data mean embedding are 0.023255 and 0.166220 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.621
PRC on test generated data is 0.389

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.307

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.638
PRC on test generated data is 0.380

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.615
PRC on test generated data is 0.370

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.312

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.538
PRC on test generated data is 0.337

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.565
PRC on test generated data is 0.339
----------------------------------------
roc mean across methods is 0.541
prc mean across methods is 0.331


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70735961 0.29264039] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70637207 0.29362793]
before perturbation, mean and variance of data mean embedding are 0.024186 and 0.115782 
after perturbation, mean and variance of data mean embedding are 0.021246 and 0.165995 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.587
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.294

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.560
PRC on test generated data is 0.326

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.297

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.538
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.525
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.323
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.307


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70561563 0.29438437] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70781531 0.29218469]
before perturbation, mean and variance of data mean embedding are 0.024250 and 0.115909 
after perturbation, mean and variance of data mean embedding are 0.023452 and 0.165807 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.631
PRC on test generated data is 0.364

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.558
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.614
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.539
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.514
PRC on test generated data is 0.299

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.322
----------------------------------------
roc mean across methods is 0.535
prc mean across methods is 0.309


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70666202 0.29333798] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71083112 0.28916888]
before perturbation, mean and variance of data mean embedding are 0.024331 and 0.116210 
after perturbation, mean and variance of data mean embedding are 0.024234 and 0.167924 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.514
PRC on test generated data is 0.298

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.529
PRC on test generated data is 0.309

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.585
PRC on test generated data is 0.340
----------------------------------------
roc mean across methods is 0.511
prc mean across methods is 0.298


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.55541365 0.5        0.5        0.51620814 0.57964183 0.51556428
 0.55887132 0.50919399 0.51698803 0.50275363 0.52619156 0.54813191]
Average PRC each method:  [0.32907323 0.29715216 0.29715216 0.3062153  0.34081083 0.30416957
 0.3272468  0.30196596 0.30818287 0.29900473 0.31291851 0.32492077]
Std ROC each method:  [0.04496291 0.         0.         0.03329399 0.04619642 0.02153247
 0.04742795 0.00857262 0.0172387  0.00579957 0.03470756 0.03102386]
Std PRC each method:  [0.03521316 0.00671758 0.00671758 0.02210721 0.02666056 0.00847972
 0.02739284 0.00789185 0.00771538 0.00557837 0.02559944 0.0143509 ]
Average over repetitions across all methods
Average ROC:  0.5274131954239701
Average PRC:  0.31240107413710977
Std ROC:  0.010218987161622256
Variance PRC:  0.01105733143245021 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.6} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72284264 0.27715736] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72364187 0.27635813]
before perturbation, mean and variance of data mean embedding are 0.024212 and 0.117266 
after perturbation, mean and variance of data mean embedding are 0.023515 and 0.165386 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.504
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.302

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.317

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.595
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.525
PRC on test generated data is 0.315

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.302

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.484
PRC on test generated data is 0.295
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.307


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71844332 0.28155668] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71661492 0.28338508]
before perturbation, mean and variance of data mean embedding are 0.024369 and 0.117288 
after perturbation, mean and variance of data mean embedding are 0.023404 and 0.164325 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.526
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.550
PRC on test generated data is 0.314

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.526
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.565
PRC on test generated data is 0.322
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.297


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71878173 0.28121827] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71776932 0.28223068]
before perturbation, mean and variance of data mean embedding are 0.024419 and 0.117639 
after perturbation, mean and variance of data mean embedding are 0.021566 and 0.164758 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.543
PRC on test generated data is 0.313

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.628
PRC on test generated data is 0.399

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.319

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.300

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.516
PRC on test generated data is 0.298
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.307


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71404399 0.28595601] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71558379 0.28441621]
before perturbation, mean and variance of data mean embedding are 0.024315 and 0.116687 
after perturbation, mean and variance of data mean embedding are 0.023541 and 0.163958 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.281

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.559
PRC on test generated data is 0.309

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.516
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.280

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.538
PRC on test generated data is 0.320

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.314
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.291


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.7143824 0.2856176] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71491908 0.28508092]
before perturbation, mean and variance of data mean embedding are 0.024358 and 0.117427 
after perturbation, mean and variance of data mean embedding are 0.024265 and 0.166196 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.540
PRC on test generated data is 0.300

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.496
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.563
PRC on test generated data is 0.319

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.496
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.633
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.281

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.282

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.587
PRC on test generated data is 0.328
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.296


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51630806 0.5        0.5        0.49988561 0.55053942 0.52292287
 0.55813274 0.51077235 0.51301171 0.49978058 0.50816863 0.54016918]
Average PRC each method:  [0.29611472 0.2887135  0.2887135  0.28880704 0.31430984 0.30004202
 0.32710215 0.29686877 0.29721129 0.2887135  0.29710586 0.31145882]
Std ROC each method:  [0.01448974 0.         0.         0.00219459 0.00975157 0.03712061
 0.05984557 0.01365468 0.00774195 0.00026873 0.01517189 0.03634646]
Std PRC each method:  [0.00692828 0.00756049 0.00756049 0.0080601  0.00374639 0.02525583
 0.04283    0.01254684 0.00967008 0.00756049 0.01332503 0.01309411]
Average over repetitions across all methods
Average ROC:  0.5183075946808425
Average PRC:  0.29959675069463243
Std ROC:  0.005312315237107075
Variance PRC:  0.006275188293340669 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.625} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.73085771 0.26914229] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73016908 0.26983092]
before perturbation, mean and variance of data mean embedding are 0.024221 and 0.117993 
after perturbation, mean and variance of data mean embedding are 0.023544 and 0.163505 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.525
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.294

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.591
PRC on test generated data is 0.347

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.514
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.481
PRC on test generated data is 0.285
----------------------------------------
roc mean across methods is 0.511
prc mean across methods is 0.299


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72724285 0.27275715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72715612 0.27284388]
before perturbation, mean and variance of data mean embedding are 0.024256 and 0.117834 
after perturbation, mean and variance of data mean embedding are 0.023318 and 0.162338 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.509
PRC on test generated data is 0.288

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.547
PRC on test generated data is 0.311

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.286

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.565
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.552
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.285

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.563
PRC on test generated data is 0.334

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.637
PRC on test generated data is 0.401
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.307


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72954321 0.27045679] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72583199 0.27416801]
before perturbation, mean and variance of data mean embedding are 0.024394 and 0.118182 
after perturbation, mean and variance of data mean embedding are 0.021624 and 0.162840 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.295

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.569
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.289

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.295
----------------------------------------
roc mean across methods is 0.509
prc mean across methods is 0.294


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72855734 0.27144266] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72910687 0.27089313]
before perturbation, mean and variance of data mean embedding are 0.024262 and 0.117889 
after perturbation, mean and variance of data mean embedding are 0.023511 and 0.162499 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.595
PRC on test generated data is 0.335

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.581
PRC on test generated data is 0.324

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.515
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.288

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.289
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.295


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72034177 0.27965823] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72247401 0.27752599]
before perturbation, mean and variance of data mean embedding are 0.024185 and 0.116910 
after perturbation, mean and variance of data mean embedding are 0.024094 and 0.163418 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.639
PRC on test generated data is 0.343

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.267

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.274

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.594
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.543
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.523
PRC on test generated data is 0.279

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.649
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.541
PRC on test generated data is 0.286

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.572
PRC on test generated data is 0.305
----------------------------------------
roc mean across methods is 0.548
prc mean across methods is 0.293


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.5349754  0.5        0.5        0.50048764 0.55238167 0.53720228
 0.54105976 0.50886436 0.54159197 0.50021123 0.52112317 0.54182527]
Average PRC each method:  [0.30238877 0.28367816 0.28367816 0.28398253 0.31230573 0.30086113
 0.30718635 0.29007495 0.30919624 0.28404288 0.2979426  0.31483886]
Std ROC each method:  [0.05284112 0.         0.         0.00140733 0.03483932 0.04118641
 0.0236473  0.00801064 0.05727909 0.00058142 0.02596185 0.05618076]
Std PRC each method:  [0.02128964 0.00857964 0.00857964 0.00904127 0.02640421 0.01453533
 0.01639203 0.00569857 0.02425365 0.00865125 0.01831615 0.04338073]
Average over repetitions across all methods
Average ROC:  0.5233102284077706
Average PRC:  0.29751469622605653
Std ROC:  0.014958470902060829
Variance PRC:  0.005300634703545799 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.4} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63422222 0.36577778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63217936 0.36782064]
before perturbation, mean and variance of data mean embedding are 0.012398 and 0.082499 
after perturbation, mean and variance of data mean embedding are 0.010958 and 0.173184 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.606
PRC on test generated data is 0.472

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.532
PRC on test generated data is 0.415

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.621
PRC on test generated data is 0.466

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.619
PRC on test generated data is 0.485

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.560
PRC on test generated data is 0.428

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.539
PRC on test generated data is 0.423

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.396

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.528
PRC on test generated data is 0.415

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.471
PRC on test generated data is 0.379
----------------------------------------
roc mean across methods is 0.540
prc mean across methods is 0.421


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63377778 0.36622222] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63793223 0.36206777]
before perturbation, mean and variance of data mean embedding are 0.012330 and 0.082346 
after perturbation, mean and variance of data mean embedding are 0.011696 and 0.174098 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.539
PRC on test generated data is 0.412

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.393

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.409

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.579
PRC on test generated data is 0.434

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.528
PRC on test generated data is 0.406

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.541
PRC on test generated data is 0.414

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.526
PRC on test generated data is 0.411

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.563
PRC on test generated data is 0.431

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.496
PRC on test generated data is 0.388
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.406


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.616 0.384] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61895523 0.38104477]
before perturbation, mean and variance of data mean embedding are 0.012269 and 0.081375 
after perturbation, mean and variance of data mean embedding are 0.009123 and 0.172471 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.514
PRC on test generated data is 0.356

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.357

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.353

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.588
PRC on test generated data is 0.419

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.559
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.619
PRC on test generated data is 0.447

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.588
PRC on test generated data is 0.398
----------------------------------------
roc mean across methods is 0.536
prc mean across methods is 0.375


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.61822222 0.38177778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.614263 0.385737]
before perturbation, mean and variance of data mean embedding are 0.012377 and 0.081994 
after perturbation, mean and variance of data mean embedding are 0.012702 and 0.172805 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.585
PRC on test generated data is 0.414

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.355

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.556
PRC on test generated data is 0.396

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.353

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.613
PRC on test generated data is 0.426

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.632
PRC on test generated data is 0.438

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.588
PRC on test generated data is 0.413

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.360

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.359

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.571
PRC on test generated data is 0.408

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.486
PRC on test generated data is 0.347
----------------------------------------
roc mean across methods is 0.545
prc mean across methods is 0.385


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63022222 0.36977778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62983435 0.37016565]
before perturbation, mean and variance of data mean embedding are 0.012303 and 0.082188 
after perturbation, mean and variance of data mean embedding are 0.013883 and 0.174841 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.390

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.644
PRC on test generated data is 0.480

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.386

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.565
PRC on test generated data is 0.431

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.575
PRC on test generated data is 0.441

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.581
PRC on test generated data is 0.440

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.525
PRC on test generated data is 0.400

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.382
----------------------------------------
roc mean across methods is 0.534
prc mean across methods is 0.406


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54862756 0.5        0.50375889 0.52000432 0.57028578 0.55890125
 0.56776055 0.54444036 0.52932734 0.52241232 0.56113502 0.50852983]
Average PRC each method:  [0.40705402 0.37264249 0.37665967 0.38757427 0.42169854 0.41516191
 0.41572594 0.40475552 0.39382011 0.38959207 0.42027162 0.37894243]
Std ROC each method:  [0.04042684 0.         0.00405461 0.02123447 0.06105815 0.04778088
 0.04001789 0.02991483 0.02590396 0.03071376 0.03438694 0.04089506]
Std PRC each method:  [0.03882691 0.01821713 0.01666413 0.0205187  0.04709002 0.0398757
 0.02196136 0.02863038 0.0316748  0.0336099  0.01680297 0.01709569]
Average over repetitions across all methods
Average ROC:  0.5362652673808718
Average PRC:  0.3986582155101778
Std ROC:  0.006587947222674461
Variance PRC:  0.01634271723431985 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.425} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6471343 0.3528657] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64648763 0.35351237]
before perturbation, mean and variance of data mean embedding are 0.012352 and 0.082938 
after perturbation, mean and variance of data mean embedding are 0.010967 and 0.168341 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.618
PRC on test generated data is 0.463

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.624
PRC on test generated data is 0.470

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.563
PRC on test generated data is 0.408

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.581
PRC on test generated data is 0.421

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.549
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.587
PRC on test generated data is 0.447

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.528
PRC on test generated data is 0.398

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.374

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.614
PRC on test generated data is 0.464

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.484
PRC on test generated data is 0.367
----------------------------------------
roc mean across methods is 0.554
prc mean across methods is 0.413


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64927288 0.35072712] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64911232 0.35088768]
before perturbation, mean and variance of data mean embedding are 0.012420 and 0.083411 
after perturbation, mean and variance of data mean embedding are 0.011809 and 0.169559 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.555
PRC on test generated data is 0.421

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.529
PRC on test generated data is 0.403

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.384

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.581
PRC on test generated data is 0.438

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.556
PRC on test generated data is 0.409

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.380

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.379

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.559
PRC on test generated data is 0.425

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.378
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.397


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63088109 0.36911891] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63255305 0.36744695]
before perturbation, mean and variance of data mean embedding are 0.012300 and 0.082041 
after perturbation, mean and variance of data mean embedding are 0.009271 and 0.167773 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.529
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.338

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.339

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.558
PRC on test generated data is 0.371

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.524
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.535
PRC on test generated data is 0.373

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.571
PRC on test generated data is 0.375
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.350


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63473054 0.36526946] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63311506 0.36688494]
before perturbation, mean and variance of data mean embedding are 0.012310 and 0.082294 
after perturbation, mean and variance of data mean embedding are 0.012622 and 0.167941 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.527
PRC on test generated data is 0.358

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.350

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.551
PRC on test generated data is 0.371

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.592
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.532
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.567
PRC on test generated data is 0.402

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.431
PRC on test generated data is 0.318
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.358


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64499572 0.35500428] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64175544 0.35824456]
before perturbation, mean and variance of data mean embedding are 0.012368 and 0.083025 
after perturbation, mean and variance of data mean embedding are 0.013888 and 0.170203 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.371

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.597
PRC on test generated data is 0.425

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.578
PRC on test generated data is 0.421

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.404

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.368

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.377

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.528
PRC on test generated data is 0.386
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.385


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54580842 0.5        0.50056701 0.53305224 0.55590916 0.5422266
 0.55469    0.53316029 0.51838233 0.4994023  0.5564921  0.50260978]
Average PRC each method:  [0.39199275 0.36051844 0.36125365 0.38616728 0.39181305 0.38845585
 0.39161155 0.38714775 0.37668355 0.36039518 0.40811288 0.36500235]
Std ROC each method:  [0.04024204 0.         0.0006957  0.04649345 0.02771109 0.03301847
 0.03196606 0.02760744 0.01430985 0.00053352 0.03543252 0.04636969]
Std PRC each method:  [0.04346218 0.01690335 0.01652043 0.04734902 0.02155845 0.03416867
 0.02970647 0.03401997 0.02298601 0.01684397 0.03369846 0.02429207]
Average over repetitions across all methods
Average ROC:  0.5285250178702474
Average PRC:  0.3807628577319159
Std ROC:  0.01283660827171646
Variance PRC:  0.023488371986252303 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.45} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66075845 0.33924155] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65928486 0.34071514]
before perturbation, mean and variance of data mean embedding are 0.012285 and 0.083155 
after perturbation, mean and variance of data mean embedding are 0.010950 and 0.163825 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.504
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.586
PRC on test generated data is 0.424

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.523
PRC on test generated data is 0.377

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.620
PRC on test generated data is 0.434

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.552
PRC on test generated data is 0.403

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.363

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.495
PRC on test generated data is 0.360
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.378


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66158285 0.33841715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66106186 0.33893814]
before perturbation, mean and variance of data mean embedding are 0.012334 and 0.083472 
after perturbation, mean and variance of data mean embedding are 0.011746 and 0.164963 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.533
PRC on test generated data is 0.380

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.549
PRC on test generated data is 0.393

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.588
PRC on test generated data is 0.420

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.517
PRC on test generated data is 0.376

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.561
PRC on test generated data is 0.399
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.377


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65127782 0.34872218] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65212668 0.34787332]
before perturbation, mean and variance of data mean embedding are 0.012383 and 0.083154 
after perturbation, mean and variance of data mean embedding are 0.009465 and 0.163696 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.565
PRC on test generated data is 0.386

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.349

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.606
PRC on test generated data is 0.402

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.496
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.583
PRC on test generated data is 0.399

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.583
PRC on test generated data is 0.410

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.365
----------------------------------------
roc mean across methods is 0.534
prc mean across methods is 0.363


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64715581 0.35284419] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64696489 0.35303511]
before perturbation, mean and variance of data mean embedding are 0.012369 and 0.082976 
after perturbation, mean and variance of data mean embedding are 0.012670 and 0.163677 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.524
PRC on test generated data is 0.346

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.333

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.347

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.583
PRC on test generated data is 0.395

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.535
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.351

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.528
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.336

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.526
PRC on test generated data is 0.352

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.445
PRC on test generated data is 0.309
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.344


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65787304 0.34212696] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65384565 0.34615435]
before perturbation, mean and variance of data mean embedding are 0.012323 and 0.083401 
after perturbation, mean and variance of data mean embedding are 0.013788 and 0.165668 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.534
PRC on test generated data is 0.371

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.359

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.377

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.551
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.569
PRC on test generated data is 0.405

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.541
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.357

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.495
PRC on test generated data is 0.353
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.369


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53209988 0.50120232 0.50054054 0.50380775 0.56236479 0.53176269
 0.54807719 0.53726498 0.52717348 0.5010207  0.52549117 0.50845936]
Average PRC each method:  [0.36954215 0.35172391 0.35112911 0.35285486 0.38845136 0.37258976
 0.37972336 0.37821182 0.37189957 0.35166994 0.37139478 0.35721467]
Std ROC each method:  [0.01985682 0.00240464 0.00108108 0.0053721  0.02840602 0.03171816
 0.04893444 0.0329942  0.01812372 0.0016945  0.03039677 0.04166406]
Std PRC each method:  [0.01389817 0.01380666 0.01341457 0.0110926  0.02568445 0.01844637
 0.03903726 0.02062435 0.02239707 0.01145982 0.0209419  0.02885998]
Average over repetitions across all methods
Average ROC:  0.5232720718897979
Average PRC:  0.3663671069561563
Std ROC:  0.005606613469227717
Variance PRC:  0.012491614890612325 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.475} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67157058 0.32842942] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66672055 0.33327945]
before perturbation, mean and variance of data mean embedding are 0.012403 and 0.084274 
after perturbation, mean and variance of data mean embedding are 0.011115 and 0.160084 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.568
PRC on test generated data is 0.400

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.558
PRC on test generated data is 0.400

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.555
PRC on test generated data is 0.381

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.628
PRC on test generated data is 0.441

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.543
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.515
PRC on test generated data is 0.365

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.637
PRC on test generated data is 0.450

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.485
PRC on test generated data is 0.341
----------------------------------------
roc mean across methods is 0.541
prc mean across methods is 0.379


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67673956 0.32326044] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68013288 0.31986712]
before perturbation, mean and variance of data mean embedding are 0.012444 and 0.084700 
after perturbation, mean and variance of data mean embedding are 0.011877 and 0.161279 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.542
PRC on test generated data is 0.384

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.589
PRC on test generated data is 0.416

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.359

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.360

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.498
PRC on test generated data is 0.358
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.367


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66202783 0.33797217] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66117414 0.33882586]
before perturbation, mean and variance of data mean embedding are 0.012371 and 0.083743 
after perturbation, mean and variance of data mean embedding are 0.009556 and 0.159720 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.480
PRC on test generated data is 0.325

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.592
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.329

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.329

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.578
PRC on test generated data is 0.369
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.335


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66043738 0.33956262] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66144727 0.33855273]
before perturbation, mean and variance of data mean embedding are 0.012375 and 0.083847 
after perturbation, mean and variance of data mean embedding are 0.012665 and 0.159865 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.557
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.320

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.527
PRC on test generated data is 0.334

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.546
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.612
PRC on test generated data is 0.403

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.521
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.523
PRC on test generated data is 0.337

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.539
PRC on test generated data is 0.346
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.339


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66878728 0.33121272] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67382105 0.32617895]
before perturbation, mean and variance of data mean embedding are 0.012349 and 0.084113 
after perturbation, mean and variance of data mean embedding are 0.013762 and 0.161695 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.341

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.342

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.353

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.598
PRC on test generated data is 0.414

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.572
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.346

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.340
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.354


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52560451 0.5        0.5        0.51164691 0.52471236 0.55442693
 0.57297895 0.51435154 0.51617532 0.50236724 0.53428956 0.51989367]
Average PRC each method:  [0.35479235 0.33840445 0.33840445 0.3492547  0.35530567 0.37625081
 0.38626497 0.35000135 0.35187604 0.3421016  0.36444699 0.35072125]
Std ROC each method:  [0.03035659 0.         0.         0.02341879 0.02548705 0.05158284
 0.03869131 0.00714186 0.01509731 0.0065324  0.05205833 0.03436177]
Std PRC each method:  [0.02502128 0.01409774 0.01409774 0.02884107 0.02416447 0.04407434
 0.02332478 0.01566755 0.01883876 0.01779121 0.04423773 0.01124356]
Average over repetitions across all methods
Average ROC:  0.5230372487968933
Average PRC:  0.35481872019481503
Std ROC:  0.010629664803059817
Variance PRC:  0.016813174332625483 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.5} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.680779 0.319221]
before perturbation, mean and variance of data mean embedding are 0.012411 and 0.084917 
after perturbation, mean and variance of data mean embedding are 0.011166 and 0.156497 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.534
PRC on test generated data is 0.356

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.344

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.343

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.545
PRC on test generated data is 0.371

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.624
PRC on test generated data is 0.408

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.337

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.525
PRC on test generated data is 0.353

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.488
PRC on test generated data is 0.330
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.350


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68843642 0.31156358] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69461614 0.30538386]
before perturbation, mean and variance of data mean embedding are 0.012362 and 0.084955 
after perturbation, mean and variance of data mean embedding are 0.011813 and 0.157496 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.354

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.612
PRC on test generated data is 0.421

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.360

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.351

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.387

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.354

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.575
PRC on test generated data is 0.389
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.363


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67652708 0.32347292] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67539197 0.32460803]
before perturbation, mean and variance of data mean embedding are 0.012343 and 0.084152 
after perturbation, mean and variance of data mean embedding are 0.009624 and 0.156006 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.570
PRC on test generated data is 0.359

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.570
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.570
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.556
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.570
PRC on test generated data is 0.359
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.336


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6749904 0.3250096] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67330398 0.32669602]
before perturbation, mean and variance of data mean embedding are 0.012391 and 0.084732 
after perturbation, mean and variance of data mean embedding are 0.012672 and 0.156469 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.497
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.496
PRC on test generated data is 0.317

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.595
PRC on test generated data is 0.379

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.544
PRC on test generated data is 0.341

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.317

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.444
PRC on test generated data is 0.296
----------------------------------------
roc mean across methods is 0.510
prc mean across methods is 0.325


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68006121 0.31993879]
before perturbation, mean and variance of data mean embedding are 0.012335 and 0.084420 
after perturbation, mean and variance of data mean embedding are 0.013701 and 0.157880 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.544
PRC on test generated data is 0.363

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.615
PRC on test generated data is 0.416

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.539
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.527
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.337

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.334
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.349


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.50747442 0.5        0.5        0.50160388 0.56749431 0.55530759
 0.55672591 0.5201121  0.50971167 0.50119195 0.50608558 0.51479444]
Average PRC each method:  [0.33666134 0.33136201 0.33136201 0.3330579  0.37295225 0.36657952
 0.36332784 0.34535131 0.34335669 0.33255871 0.33622629 0.3416406 ]
Std ROC each method:  [0.01345853 0.         0.         0.00539618 0.03440819 0.03498708
 0.03923554 0.02610667 0.01007757 0.00154268 0.00970139 0.05041366]
Std PRC each method:  [0.01622382 0.01128321 0.01128321 0.01231178 0.02649877 0.02750687
 0.02303641 0.02385151 0.01700103 0.01052431 0.0153092  0.03098888]
Average over repetitions across all methods
Average ROC:  0.5200418210056597
Average PRC:  0.3445363720123889
Std ROC:  0.005857787871226513
Variance PRC:  0.013059108179956135 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.525} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6936803 0.3063197] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69384393 0.30615607]
before perturbation, mean and variance of data mean embedding are 0.012331 and 0.085563 
after perturbation, mean and variance of data mean embedding are 0.011127 and 0.153237 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.535
PRC on test generated data is 0.354

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.331

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.608
PRC on test generated data is 0.390

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.608
PRC on test generated data is 0.387

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.569
PRC on test generated data is 0.370

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.328

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.530
PRC on test generated data is 0.354

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.485
PRC on test generated data is 0.320
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.347


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69628253 0.30371747] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69830985 0.30169015]
before perturbation, mean and variance of data mean embedding are 0.012511 and 0.086325 
after perturbation, mean and variance of data mean embedding are 0.011981 and 0.154692 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.525
PRC on test generated data is 0.344

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.332

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.586
PRC on test generated data is 0.385

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.621
PRC on test generated data is 0.433

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.558
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.512
PRC on test generated data is 0.341

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.338
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.352


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68736059 0.31263941] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68377111 0.31622889]
before perturbation, mean and variance of data mean embedding are 0.012431 and 0.085109 
after perturbation, mean and variance of data mean embedding are 0.009799 and 0.152992 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.592
PRC on test generated data is 0.373

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.562
PRC on test generated data is 0.345

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.583
PRC on test generated data is 0.363

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.556
PRC on test generated data is 0.339
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.326


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6866171 0.3133829] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68757949 0.31242051]
before perturbation, mean and variance of data mean embedding are 0.012326 and 0.084777 
after perturbation, mean and variance of data mean embedding are 0.012597 and 0.152959 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.584
PRC on test generated data is 0.352

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.318

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.535
PRC on test generated data is 0.330

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.591
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.535
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.312

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.319

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.546
PRC on test generated data is 0.341
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.325


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69107807 0.30892193] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68702072 0.31297928]
before perturbation, mean and variance of data mean embedding are 0.012350 and 0.085236 
after perturbation, mean and variance of data mean embedding are 0.013671 and 0.154698 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.527
PRC on test generated data is 0.333

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.550
PRC on test generated data is 0.358
----------------------------------------
roc mean across methods is 0.507
prc mean across methods is 0.325


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54709168 0.5        0.5        0.50327325 0.56347908 0.52237016
 0.5692485  0.52808972 0.50401288 0.5005425  0.51041049 0.52998524]
Average PRC each method:  [0.34848401 0.31958406 0.31958406 0.32231216 0.35660661 0.33283079
 0.36661469 0.34160765 0.32283353 0.32002233 0.32888419 0.33932576]
Std ROC each method:  [0.03530685 0.         0.         0.00391007 0.03028087 0.03509397
 0.04544257 0.02915188 0.00399108 0.00108076 0.01105239 0.02691621]
Std PRC each method:  [0.01714906 0.00856791 0.00856791 0.00802969 0.02583738 0.01611192
 0.04099467 0.0315341  0.01048569 0.0089248  0.01602335 0.01200157]
Average over repetitions across all methods
Average ROC:  0.5232086240930418
Average PRC:  0.3348908192096193
Std ROC:  0.008295185561500926
Variance PRC:  0.01214163261393133 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.55} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69953221 0.30046779] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69577768 0.30422232]
before perturbation, mean and variance of data mean embedding are 0.012419 and 0.085698 
after perturbation, mean and variance of data mean embedding are 0.011254 and 0.149953 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.513
PRC on test generated data is 0.312

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.618
PRC on test generated data is 0.375

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.609
PRC on test generated data is 0.384

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.550
PRC on test generated data is 0.346

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.485
PRC on test generated data is 0.301
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.322


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70349046 0.29650954] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70149086 0.29850914]
before perturbation, mean and variance of data mean embedding are 0.012355 and 0.085942 
after perturbation, mean and variance of data mean embedding are 0.011842 and 0.151072 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.521
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.529
PRC on test generated data is 0.330

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.621
PRC on test generated data is 0.415

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.546
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.319

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.555
PRC on test generated data is 0.362

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.590
PRC on test generated data is 0.365
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.339


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69701331 0.30298669] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69828624 0.30171376]
before perturbation, mean and variance of data mean embedding are 0.012338 and 0.085330 
after perturbation, mean and variance of data mean embedding are 0.009790 and 0.149711 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.652
PRC on test generated data is 0.398

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.541
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.534
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.569
PRC on test generated data is 0.338
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.315


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69629363 0.30370637] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69795206 0.30204794]
before perturbation, mean and variance of data mean embedding are 0.012348 and 0.085330 
after perturbation, mean and variance of data mean embedding are 0.012611 and 0.149905 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.615
PRC on test generated data is 0.371

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.576
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.540
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.527
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.558
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.512
PRC on test generated data is 0.311

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.604
PRC on test generated data is 0.372
----------------------------------------
roc mean across methods is 0.536
prc mean across methods is 0.322


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.697733 0.302267] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69584527 0.30415473]
before perturbation, mean and variance of data mean embedding are 0.012356 and 0.085653 
after perturbation, mean and variance of data mean embedding are 0.013635 and 0.151527 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.523
PRC on test generated data is 0.314

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.609
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.621
PRC on test generated data is 0.384

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.308

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.544
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.495
PRC on test generated data is 0.301
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.318


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.50690394 0.5        0.5        0.50048342 0.58753761 0.54650792
 0.58496869 0.51582095 0.52415716 0.50053191 0.52350375 0.54887247]
Average PRC each method:  [0.30794761 0.30478589 0.30478589 0.30512481 0.35743482 0.33048358
 0.36369311 0.3187838  0.32348325 0.30551387 0.32422032 0.33516174]
Std ROC each method:  [0.00886012 0.         0.         0.00096683 0.05192109 0.04120455
 0.03946241 0.0182394  0.02256753 0.00106383 0.02419012 0.04908538]
Std PRC each method:  [0.01004122 0.00600791 0.00600791 0.00570706 0.03102922 0.02081333
 0.03897043 0.01903671 0.01503686 0.00735573 0.02480975 0.03028356]
Average over repetitions across all methods
Average ROC:  0.5282739852026038
Average PRC:  0.3234515601633799
Std ROC:  0.0050426548664191705
Variance PRC:  0.008274260668267449 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.575} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71154517 0.28845483] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71628878 0.28371122]
before perturbation, mean and variance of data mean embedding are 0.012388 and 0.086664 
after perturbation, mean and variance of data mean embedding are 0.011258 and 0.147384 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.303

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.541
PRC on test generated data is 0.323

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.554
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.494
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.492
PRC on test generated data is 0.300
----------------------------------------
roc mean across methods is 0.508
prc mean across methods is 0.308


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71294036 0.28705964] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71467315 0.28532685]
before perturbation, mean and variance of data mean embedding are 0.012393 and 0.086459 
after perturbation, mean and variance of data mean embedding are 0.011896 and 0.148292 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.532
PRC on test generated data is 0.324

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.313

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.589
PRC on test generated data is 0.354

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.555
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.536
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.558
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.310

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.528
PRC on test generated data is 0.325

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.589
PRC on test generated data is 0.354
----------------------------------------
roc mean across methods is 0.535
prc mean across methods is 0.327


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70735961 0.29264039] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70567815 0.29432185]
before perturbation, mean and variance of data mean embedding are 0.012329 and 0.085939 
after perturbation, mean and variance of data mean embedding are 0.009860 and 0.146987 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.546
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.294

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.602
PRC on test generated data is 0.366

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.530
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.605
PRC on test generated data is 0.365

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.296

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.518
PRC on test generated data is 0.314

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.581
PRC on test generated data is 0.339
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.315


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70561563 0.29438437] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70396621 0.29603379]
before perturbation, mean and variance of data mean embedding are 0.012391 and 0.086063 
after perturbation, mean and variance of data mean embedding are 0.012646 and 0.147259 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.558
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.598
PRC on test generated data is 0.342

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.498
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.600
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.297

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.297

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.598
PRC on test generated data is 0.342
----------------------------------------
roc mean across methods is 0.535
prc mean across methods is 0.310


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70666202 0.29333798] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70468934 0.29531066]
before perturbation, mean and variance of data mean embedding are 0.012361 and 0.086181 
after perturbation, mean and variance of data mean embedding are 0.013600 and 0.148702 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.610
PRC on test generated data is 0.355

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.540
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.494
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.296

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.495
PRC on test generated data is 0.290
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.301


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52713212 0.5        0.5        0.50139338 0.58806896 0.52753924
 0.5576263  0.5223919  0.50773784 0.50182446 0.51213938 0.55113411]
Average PRC each method:  [0.31232552 0.29715216 0.29715216 0.29828365 0.34789172 0.31340114
 0.33463273 0.31112542 0.30362888 0.29866584 0.30727697 0.32507456]
Std ROC each method:  [0.02369922 0.         0.         0.0039853  0.0247537  0.01973804
 0.04124736 0.02622984 0.0059336  0.00210708 0.00981831 0.04734018]
Std PRC each method:  [0.01275584 0.00671758 0.00671758 0.0086036  0.01453462 0.01879663
 0.02566283 0.0168581  0.00815677 0.00683437 0.01111439 0.02503757]
Average over repetitions across all methods
Average ROC:  0.5247489738888925
Average PRC:  0.3122175611138677
Std ROC:  0.011563659362454229
Variance PRC:  0.00878626451152152 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.6} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72284264 0.27715736] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72346607 0.27653393]
before perturbation, mean and variance of data mean embedding are 0.012336 and 0.086870 
after perturbation, mean and variance of data mean embedding are 0.011239 and 0.144643 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.550
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.532
PRC on test generated data is 0.326

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.318

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.597
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.563
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.545
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.551
PRC on test generated data is 0.340

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.475
PRC on test generated data is 0.292
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.321


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71844332 0.28155668] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7174308 0.2825692]
before perturbation, mean and variance of data mean embedding are 0.012447 and 0.086987 
after perturbation, mean and variance of data mean embedding are 0.011964 and 0.145703 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.623
PRC on test generated data is 0.368

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.578
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.297
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.302


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71878173 0.28121827] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72087149 0.27912851]
before perturbation, mean and variance of data mean embedding are 0.012408 and 0.087127 
after perturbation, mean and variance of data mean embedding are 0.010012 and 0.144782 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.589
PRC on test generated data is 0.341

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.603
PRC on test generated data is 0.348

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.632
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.296

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.570
PRC on test generated data is 0.330
----------------------------------------
roc mean across methods is 0.534
prc mean across methods is 0.310


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71404399 0.28595601] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71725013 0.28274987]
before perturbation, mean and variance of data mean embedding are 0.012355 and 0.086354 
after perturbation, mean and variance of data mean embedding are 0.012602 and 0.144572 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.556
PRC on test generated data is 0.305

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.283

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.565
PRC on test generated data is 0.319

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.512
PRC on test generated data is 0.286

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.575
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.536
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.601
PRC on test generated data is 0.334
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.299


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.7143824 0.2856176] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71514428 0.28485572]
before perturbation, mean and variance of data mean embedding are 0.012339 and 0.086589 
after perturbation, mean and variance of data mean embedding are 0.013542 and 0.146024 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.283

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.553
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.289
----------------------------------------
roc mean across methods is 0.506
prc mean across methods is 0.284


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53902566 0.5        0.5        0.50744288 0.56576095 0.52797549
 0.56769364 0.52447885 0.50287316 0.49988877 0.5174717  0.53500607]
Average PRC each method:  [0.31130307 0.2887135  0.2887135  0.2941925  0.32682225 0.30878308
 0.32713504 0.30487573 0.29071504 0.2887135  0.30107951 0.30840322]
Std ROC each method:  [0.03443316 0.         0.         0.01260592 0.04449599 0.03681382
 0.03892688 0.03060086 0.00326529 0.00022247 0.02190536 0.04487867]
Std PRC each method:  [0.02473104 0.00756049 0.00756049 0.01624763 0.02941573 0.03395026
 0.02909365 0.02025065 0.00874801 0.00756049 0.02066125 0.01951332]
Average over repetitions across all methods
Average ROC:  0.5239680971941769
Average PRC:  0.30328749313169434
Std ROC:  0.010370300506533866
Variance PRC:  0.012299757110474489 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.625} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.73085771 0.26914229] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73299197 0.26700803]
before perturbation, mean and variance of data mean embedding are 0.012315 and 0.087290 
after perturbation, mean and variance of data mean embedding are 0.011250 and 0.142162 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.557
PRC on test generated data is 0.318

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.293

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.605
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.538
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.479
PRC on test generated data is 0.285
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.301


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72724285 0.27275715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72802903 0.27197097]
before perturbation, mean and variance of data mean embedding are 0.012319 and 0.087295 
after perturbation, mean and variance of data mean embedding are 0.011850 and 0.143197 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.286

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.287

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.288
----------------------------------------
roc mean across methods is 0.503
prc mean across methods is 0.285


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72954321 0.27045679] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73204274 0.26795726]
before perturbation, mean and variance of data mean embedding are 0.012420 and 0.087926 
after perturbation, mean and variance of data mean embedding are 0.010093 and 0.142608 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.569
PRC on test generated data is 0.341

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.490
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.313
----------------------------------------
roc mean across methods is 0.509
prc mean across methods is 0.295


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72855734 0.27144266] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72767529 0.27232471]
before perturbation, mean and variance of data mean embedding are 0.012437 and 0.087688 
after perturbation, mean and variance of data mean embedding are 0.012677 and 0.142681 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.520
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.286

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.560
PRC on test generated data is 0.318

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.581
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.609
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.296

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.534
PRC on test generated data is 0.313

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.545
PRC on test generated data is 0.315
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.306


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72034177 0.27965823] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72616104 0.27383896]
before perturbation, mean and variance of data mean embedding are 0.012408 and 0.087204 
after perturbation, mean and variance of data mean embedding are 0.013576 and 0.143671 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.502
PRC on test generated data is 0.268

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.601
PRC on test generated data is 0.329

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.543
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.654
PRC on test generated data is 0.399

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.268

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.268
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.286


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51591051 0.5        0.5        0.49989029 0.54820785 0.54736275
 0.55836799 0.50140129 0.50127679 0.5        0.50800576 0.51690377]
Average PRC each method:  [0.29197276 0.28367816 0.28367816 0.28363903 0.31347202 0.30805552
 0.33183491 0.28568716 0.28517043 0.28367816 0.29056476 0.2937351 ]
Std ROC each method:  [0.02193679 0.         0.         0.00021942 0.03782893 0.04085297
 0.06348151 0.00269667 0.00150224 0.         0.01336617 0.02649683]
Std PRC each method:  [0.01682322 0.00857964 0.00857964 0.0085667  0.02068143 0.02446434
 0.04466444 0.00990448 0.00910277 0.00857964 0.01450436 0.01781289]
Average over repetitions across all methods
Average ROC:  0.5164439164690917
Average PRC:  0.2945971804028427
Std ROC:  0.009939543994322557
Variance PRC:  0.008127350432383725 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.4} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63422222 0.36577778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63126636 0.36873364]
before perturbation, mean and variance of data mean embedding are 0.006232 and 0.059738 
after perturbation, mean and variance of data mean embedding are 0.006069 and 0.164000 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.559
PRC on test generated data is 0.426

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.493
PRC on test generated data is 0.391

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.539
PRC on test generated data is 0.411

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.546
PRC on test generated data is 0.414

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.628
PRC on test generated data is 0.479

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.497
PRC on test generated data is 0.390

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.497
PRC on test generated data is 0.391

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.483
PRC on test generated data is 0.383
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.404


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63377778 0.36622222] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63226495 0.36773505]
before perturbation, mean and variance of data mean embedding are 0.006244 and 0.059872 
after perturbation, mean and variance of data mean embedding are 0.006676 and 0.164417 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.541
PRC on test generated data is 0.418

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.393

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.392

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.557
PRC on test generated data is 0.420

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.586
PRC on test generated data is 0.447

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.574
PRC on test generated data is 0.436

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.523
PRC on test generated data is 0.406

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.533
PRC on test generated data is 0.422

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.390

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.542
PRC on test generated data is 0.420

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.579
PRC on test generated data is 0.436
----------------------------------------
roc mean across methods is 0.537
prc mean across methods is 0.414


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.616 0.384] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61238599 0.38761401]
before perturbation, mean and variance of data mean embedding are 0.006167 and 0.059049 
after perturbation, mean and variance of data mean embedding are 0.004396 and 0.163622 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.504
PRC on test generated data is 0.350

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.359

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.583
PRC on test generated data is 0.392

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.566
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.594
PRC on test generated data is 0.412

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.542
PRC on test generated data is 0.373

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.537
PRC on test generated data is 0.367
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.367


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.61822222 0.38177778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62509195 0.37490805]
before perturbation, mean and variance of data mean embedding are 0.006220 and 0.059397 
after perturbation, mean and variance of data mean embedding are 0.006072 and 0.164116 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.503
PRC on test generated data is 0.357

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.525
PRC on test generated data is 0.366

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.572
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.527
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.523
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.360

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.589
PRC on test generated data is 0.416
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.367


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63022222 0.36977778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63053337 0.36946663]
before perturbation, mean and variance of data mean embedding are 0.006221 and 0.059672 
after perturbation, mean and variance of data mean embedding are 0.006794 and 0.164031 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.531
PRC on test generated data is 0.401

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.390

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.521
PRC on test generated data is 0.395

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.391

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.571
PRC on test generated data is 0.425

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.524
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.554
PRC on test generated data is 0.428

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.583
PRC on test generated data is 0.433

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.382

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.596
PRC on test generated data is 0.458

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.606
PRC on test generated data is 0.486
----------------------------------------
roc mean across methods is 0.543
prc mean across methods is 0.414


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52758705 0.5        0.50237082 0.5066566  0.54460326 0.5537639
 0.57851049 0.52061106 0.53575518 0.50092138 0.53533068 0.55885681]
Average PRC each method:  [0.39058479 0.37264249 0.37511204 0.37806973 0.39593269 0.40499571
 0.42396064 0.38902059 0.39868715 0.37401126 0.39896503 0.41767716]
Std ROC each method:  [0.02156879 0.         0.00356395 0.01015932 0.02334696 0.02982826
 0.03396307 0.02035733 0.02577167 0.00366297 0.03607251 0.04435828]
Std PRC each method:  [0.03116202 0.01821713 0.01995492 0.01792546 0.0186198  0.03256751
 0.031043   0.0275395  0.02507733 0.01679836 0.03662978 0.0419418 ]
Average over repetitions across all methods
Average ROC:  0.5304139369276699
Average PRC:  0.3933049382242976
Std ROC:  0.008869379635971422
Variance PRC:  0.021529600226215216 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.425} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6471343 0.3528657] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64443755 0.35556245]
before perturbation, mean and variance of data mean embedding are 0.006182 and 0.059943 
after perturbation, mean and variance of data mean embedding are 0.006025 and 0.158777 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.643
PRC on test generated data is 0.461

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.373

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.380

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.567
PRC on test generated data is 0.411

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.561
PRC on test generated data is 0.421

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.524
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.380

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.532
PRC on test generated data is 0.390
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.392


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64927288 0.35072712] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65123215 0.34876785]
before perturbation, mean and variance of data mean embedding are 0.006220 and 0.060151 
after perturbation, mean and variance of data mean embedding are 0.006635 and 0.159171 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.519
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.521
PRC on test generated data is 0.395

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.579
PRC on test generated data is 0.426

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.581
PRC on test generated data is 0.433

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.575
PRC on test generated data is 0.420

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.575
PRC on test generated data is 0.444

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.523
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.379

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.582
PRC on test generated data is 0.436

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.570
PRC on test generated data is 0.419
----------------------------------------
roc mean across methods is 0.544
prc mean across methods is 0.408


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63088109 0.36911891] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62678147 0.37321853]
before perturbation, mean and variance of data mean embedding are 0.006216 and 0.059612 
after perturbation, mean and variance of data mean embedding are 0.004512 and 0.158522 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.337

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.342

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.544
PRC on test generated data is 0.359

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.552
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.574
PRC on test generated data is 0.386

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.545
PRC on test generated data is 0.359
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.349


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63473054 0.36526946] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63477953 0.36522047]
before perturbation, mean and variance of data mean embedding are 0.006257 and 0.059821 
after perturbation, mean and variance of data mean embedding are 0.006115 and 0.158934 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.545
PRC on test generated data is 0.367

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.348

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.564
PRC on test generated data is 0.384

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.536
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.568
PRC on test generated data is 0.399

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.348

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.581
PRC on test generated data is 0.403
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.361


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64499572 0.35500428] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65108415 0.34891585]
before perturbation, mean and variance of data mean embedding are 0.006194 and 0.059926 
after perturbation, mean and variance of data mean embedding are 0.006745 and 0.158770 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.526
PRC on test generated data is 0.382

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.371

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.382

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.377

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.540
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.537
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.548
PRC on test generated data is 0.404

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.566
PRC on test generated data is 0.422

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.600
PRC on test generated data is 0.476
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.394


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54686158 0.5        0.50027027 0.51025085 0.53955813 0.53148464
 0.56033311 0.53694504 0.51436948 0.50972856 0.54748905 0.56544171]
Average PRC each method:  [0.38751543 0.36051844 0.36085958 0.36814878 0.38354168 0.3785433
 0.39661777 0.38935825 0.37301945 0.36771072 0.39460662 0.40949027]
Std ROC each method:  [0.04994838 0.         0.00054054 0.00885651 0.0299907  0.02750344
 0.01254091 0.0280944  0.00937112 0.01909072 0.03319712 0.02451437]
Std PRC each method:  [0.04104005 0.01690335 0.01708516 0.01991505 0.02287976 0.0292549
 0.02002627 0.03936987 0.02325971 0.02467973 0.03142092 0.0388533 ]
Average over repetitions across all methods
Average ROC:  0.5302277030253181
Average PRC:  0.3808275243165032
Std ROC:  0.007417369326243901
Variance PRC:  0.021946295735691942 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.45} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66075845 0.33924155] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65912683 0.34087317]
before perturbation, mean and variance of data mean embedding are 0.006204 and 0.060444 
after perturbation, mean and variance of data mean embedding are 0.006053 and 0.154070 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.613
PRC on test generated data is 0.438

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.490
PRC on test generated data is 0.362

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.587
PRC on test generated data is 0.420

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.539
PRC on test generated data is 0.383

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.530
PRC on test generated data is 0.377

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.362

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.367

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.456
PRC on test generated data is 0.345
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.375


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66158285 0.33841715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66580356 0.33419644]
before perturbation, mean and variance of data mean embedding are 0.006196 and 0.060483 
after perturbation, mean and variance of data mean embedding are 0.006596 and 0.154377 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.523
PRC on test generated data is 0.375

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.364

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.602
PRC on test generated data is 0.424

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.567
PRC on test generated data is 0.405

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.620
PRC on test generated data is 0.450

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.378

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.497
PRC on test generated data is 0.364

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.532
PRC on test generated data is 0.398

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.602
PRC on test generated data is 0.424
----------------------------------------
roc mean across methods is 0.540
prc mean across methods is 0.391


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65127782 0.34872218] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65074319 0.34925681]
before perturbation, mean and variance of data mean embedding are 0.006248 and 0.060519 
after perturbation, mean and variance of data mean embedding are 0.004606 and 0.153977 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.369

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.583
PRC on test generated data is 0.383

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.358
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.348


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64715581 0.35284419] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64486502 0.35513498]
before perturbation, mean and variance of data mean embedding are 0.006217 and 0.060059 
after perturbation, mean and variance of data mean embedding are 0.006080 and 0.154095 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.629
PRC on test generated data is 0.416

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.618
PRC on test generated data is 0.409

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.525
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.583
PRC on test generated data is 0.390
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.351


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65787304 0.34212696] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65593278 0.34406722]
before perturbation, mean and variance of data mean embedding are 0.006236 and 0.060573 
after perturbation, mean and variance of data mean embedding are 0.006767 and 0.154071 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.537
PRC on test generated data is 0.380

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.362

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.532
PRC on test generated data is 0.382

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.377

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.553
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.541
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.603
PRC on test generated data is 0.423

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.529
PRC on test generated data is 0.375

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.626
PRC on test generated data is 0.489
----------------------------------------
roc mean across methods is 0.539
prc mean across methods is 0.385


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53454335 0.5        0.5        0.49985252 0.57755249 0.55110217
 0.56215839 0.51406576 0.52696018 0.49921738 0.51376222 0.56031665]
Average PRC each method:  [0.3726858  0.35043228 0.35043228 0.35173717 0.40218814 0.38260462
 0.38738489 0.35957918 0.36890237 0.35042033 0.36207397 0.40131361]
Std ROC each method:  [0.04167586 0.         0.         0.00672306 0.0373226  0.03969959
 0.03528784 0.01569914 0.03833025 0.00115336 0.01391152 0.06016224]
Std PRC each method:  [0.0377462  0.01307848 0.01307848 0.01381644 0.02237316 0.02451532
 0.03473146 0.01981601 0.03044275 0.01307394 0.02439757 0.05177964]
Average over repetitions across all methods
Average ROC:  0.5282942580977281
Average PRC:  0.3699795538062236
Std ROC:  0.010469344886903733
Variance PRC:  0.017521419165128463 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.475} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67157058 0.32842942] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66793384 0.33206616]
before perturbation, mean and variance of data mean embedding are 0.006225 and 0.060986 
after perturbation, mean and variance of data mean embedding are 0.006079 and 0.149704 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.576
PRC on test generated data is 0.385

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.529
PRC on test generated data is 0.362

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.621
PRC on test generated data is 0.419

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.351

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.512
PRC on test generated data is 0.356

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.530
PRC on test generated data is 0.362
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.360


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67673956 0.32326044] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67706246 0.32293754]
before perturbation, mean and variance of data mean embedding are 0.006273 and 0.061566 
after perturbation, mean and variance of data mean embedding are 0.006659 and 0.150198 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.527
PRC on test generated data is 0.376

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.367

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.574
PRC on test generated data is 0.407

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.395

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.600
PRC on test generated data is 0.417

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.539
PRC on test generated data is 0.392

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.365

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.531
PRC on test generated data is 0.384

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.470
PRC on test generated data is 0.346
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.378


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66202783 0.33797217] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66148729 0.33851271]
before perturbation, mean and variance of data mean embedding are 0.006226 and 0.060505 
after perturbation, mean and variance of data mean embedding are 0.004642 and 0.149395 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.505
PRC on test generated data is 0.327

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.325

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.547
PRC on test generated data is 0.353

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.590
PRC on test generated data is 0.378

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.548
PRC on test generated data is 0.351

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.527
PRC on test generated data is 0.345

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.328
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.336


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66043738 0.33956262] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66619885 0.33380115]
before perturbation, mean and variance of data mean embedding are 0.006181 and 0.060410 
after perturbation, mean and variance of data mean embedding are 0.006049 and 0.149658 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.553
PRC on test generated data is 0.352

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.355

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.567
PRC on test generated data is 0.361

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.562
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.637
PRC on test generated data is 0.404

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.550
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.525
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.324

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.524
PRC on test generated data is 0.344

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.589
PRC on test generated data is 0.388
----------------------------------------
roc mean across methods is 0.546
prc mean across methods is 0.352


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66878728 0.33121272] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66760195 0.33239805]
before perturbation, mean and variance of data mean embedding are 0.006230 and 0.060851 
after perturbation, mean and variance of data mean embedding are 0.006742 and 0.149576 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.504
PRC on test generated data is 0.344

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.342

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.339

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.588
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.552
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.496
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.521
PRC on test generated data is 0.361

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.631
PRC on test generated data is 0.485
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.362


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53304422 0.5        0.50027248 0.50958186 0.54296444 0.53947701
 0.60010518 0.5281593  0.51007326 0.50169951 0.52293367 0.54562775]
Average PRC each method:  [0.3568712  0.33840445 0.33876388 0.34683313 0.36459078 0.36342907
 0.39675038 0.35756693 0.34557004 0.3402974  0.35809321 0.38181896]
Std ROC each method:  [0.02792429 0.         0.00054496 0.01431192 0.02764555 0.03473064
 0.02882687 0.02172839 0.0093649  0.00385236 0.00647798 0.05764833]
Std PRC each method:  [0.02115002 0.01409774 0.01416793 0.01414481 0.02296661 0.02619928
 0.02129378 0.01780876 0.01428451 0.0153595  0.01446656 0.0550812 ]
Average over repetitions across all methods
Average ROC:  0.5278282222378762
Average PRC:  0.3574157870148306
Std ROC:  0.009318139294354849
Variance PRC:  0.013668721937795537 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.5} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67809486 0.32190514]
before perturbation, mean and variance of data mean embedding are 0.006200 and 0.061274 
after perturbation, mean and variance of data mean embedding are 0.006060 and 0.145624 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.520
PRC on test generated data is 0.346

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.557
PRC on test generated data is 0.368

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.635
PRC on test generated data is 0.431

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.493
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.516
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.337

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.335

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.552
PRC on test generated data is 0.363
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.350


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68843642 0.31156358] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68862354 0.31137646]
before perturbation, mean and variance of data mean embedding are 0.006239 and 0.061780 
after perturbation, mean and variance of data mean embedding are 0.006612 and 0.146097 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.538
PRC on test generated data is 0.368

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.355

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.538
PRC on test generated data is 0.368

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.494
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.531
PRC on test generated data is 0.376

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.643
PRC on test generated data is 0.489
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.368


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67652708 0.32347292] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68342716 0.31657284]
before perturbation, mean and variance of data mean embedding are 0.006201 and 0.061123 
after perturbation, mean and variance of data mean embedding are 0.004671 and 0.145463 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.541
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.589
PRC on test generated data is 0.374

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.622
PRC on test generated data is 0.409

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.331

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.589
PRC on test generated data is 0.374
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.343


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6749904 0.3250096] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67355949 0.32644051]
before perturbation, mean and variance of data mean embedding are 0.006237 and 0.061160 
after perturbation, mean and variance of data mean embedding are 0.006110 and 0.145751 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.537
PRC on test generated data is 0.334

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.551
PRC on test generated data is 0.351

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.531
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.321

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.321
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.326


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6803966 0.3196034]
before perturbation, mean and variance of data mean embedding are 0.006258 and 0.061585 
after perturbation, mean and variance of data mean embedding are 0.006753 and 0.145670 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.499
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.495
PRC on test generated data is 0.333

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.527
PRC on test generated data is 0.348

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.566
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.339

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.624
PRC on test generated data is 0.473
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.355


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52693277 0.5        0.5        0.49953611 0.55263084 0.50373485
 0.56931688 0.50791931 0.51774086 0.50084451 0.5106314  0.58344704]
Average PRC each method:  [0.34474519 0.33136201 0.33136201 0.33225313 0.36173753 0.33326879
 0.38350252 0.3411959  0.34444529 0.33252049 0.34047972 0.40425996]
Std ROC each method:  [0.01566905 0.         0.         0.00364398 0.02093065 0.00485897
 0.05341532 0.0145903  0.00976178 0.00202172 0.01066396 0.04837821]
Std PRC each method:  [0.01238309 0.01128321 0.01128321 0.01322216 0.01028692 0.01319672
 0.034369   0.01362589 0.01618727 0.01058252 0.01869786 0.06555448]
Average over repetitions across all methods
Average ROC:  0.5227278819864287
Average PRC:  0.34842771071416917
Std ROC:  0.006101125873938658
Variance PRC:  0.01408030698629803 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.525} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6936803 0.3063197] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69433931 0.30566069]
before perturbation, mean and variance of data mean embedding are 0.006263 and 0.062082 
after perturbation, mean and variance of data mean embedding are 0.006127 and 0.142139 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.572
PRC on test generated data is 0.366

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.338

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.515
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.341

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.471
PRC on test generated data is 0.314
----------------------------------------
roc mean across methods is 0.508
prc mean across methods is 0.331


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69628253 0.30371747] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70090069 0.29909931]
before perturbation, mean and variance of data mean embedding are 0.006245 and 0.062179 
after perturbation, mean and variance of data mean embedding are 0.006606 and 0.142398 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.538
PRC on test generated data is 0.351

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.609
PRC on test generated data is 0.404

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.581
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.334

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.635
PRC on test generated data is 0.460
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.356


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68736059 0.31263941] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68914721 0.31085279]
before perturbation, mean and variance of data mean embedding are 0.006214 and 0.061479 
after perturbation, mean and variance of data mean embedding are 0.004733 and 0.141779 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.553
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.311

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.319

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.643
PRC on test generated data is 0.397

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.589
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.319

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.339

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.603
PRC on test generated data is 0.376
----------------------------------------
roc mean across methods is 0.537
prc mean across methods is 0.333


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6866171 0.3133829] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67953383 0.32046617]
before perturbation, mean and variance of data mean embedding are 0.006280 and 0.061720 
after perturbation, mean and variance of data mean embedding are 0.006156 and 0.142112 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.521
PRC on test generated data is 0.319

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.592
PRC on test generated data is 0.359

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.583
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.310

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.310

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.319
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.319


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69107807 0.30892193] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69038155 0.30961845]
before perturbation, mean and variance of data mean embedding are 0.006215 and 0.061640 
after perturbation, mean and variance of data mean embedding are 0.006694 and 0.141810 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.644
PRC on test generated data is 0.405

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.472
PRC on test generated data is 0.320

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.529
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.320

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.321

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.632
PRC on test generated data is 0.467
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.342


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.56560137 0.5        0.5        0.50010298 0.53774324 0.53707036
 0.55968782 0.50906554 0.50966749 0.50055935 0.50071009 0.57231497]
Average PRC each method:  [0.35591539 0.31958406 0.31958406 0.31974876 0.3454557  0.34088683
 0.35082647 0.32695552 0.32795308 0.32013743 0.31999396 0.38736312]
Std ROC each method:  [0.04274807 0.         0.         0.00096662 0.05346809 0.05397518
 0.03107659 0.00807736 0.01241017 0.00050068 0.00088164 0.06560032]
Std PRC each method:  [0.02876577 0.00856791 0.00856791 0.00857757 0.03257664 0.02941419
 0.01670127 0.01367719 0.0103214  0.00895834 0.00832836 0.06613733]
Average over repetitions across all methods
Average ROC:  0.5243769350449459
Average PRC:  0.336200365641364
Std ROC:  0.010225573582054838
Variance PRC:  0.012192879754371607 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.55} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69953221 0.30046779] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69885532 0.30114468]
before perturbation, mean and variance of data mean embedding are 0.006251 and 0.062129 
after perturbation, mean and variance of data mean embedding are 0.006119 and 0.138495 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.574
PRC on test generated data is 0.351

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.312

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.534
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.467
PRC on test generated data is 0.294
----------------------------------------
roc mean across methods is 0.507
prc mean across methods is 0.312


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70349046 0.29650954] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70453217 0.29546783]
before perturbation, mean and variance of data mean embedding are 0.006262 and 0.062470 
after perturbation, mean and variance of data mean embedding are 0.006611 and 0.138859 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.589
PRC on test generated data is 0.376

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.498
PRC on test generated data is 0.315

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.551
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.570
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.520
PRC on test generated data is 0.330

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.634
PRC on test generated data is 0.436
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.341


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69701331 0.30298669] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69328251 0.30671749]
before perturbation, mean and variance of data mean embedding are 0.006270 and 0.062331 
after perturbation, mean and variance of data mean embedding are 0.004837 and 0.138478 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.530
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.532
PRC on test generated data is 0.321

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.602
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.312

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.543
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.601
PRC on test generated data is 0.364
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.316


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69629363 0.30370637] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69884062 0.30115938]
before perturbation, mean and variance of data mean embedding are 0.006274 and 0.062303 
after perturbation, mean and variance of data mean embedding are 0.006154 and 0.138699 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.503
PRC on test generated data is 0.300

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.543
PRC on test generated data is 0.321

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.541
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.579
PRC on test generated data is 0.355
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.308


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.697733 0.302267] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69810399 0.30189601]
before perturbation, mean and variance of data mean embedding are 0.006192 and 0.061928 
after perturbation, mean and variance of data mean embedding are 0.006655 and 0.138265 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.499
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.303

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.306

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.585
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.553
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.612
PRC on test generated data is 0.414
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.319


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.50643033 0.5        0.5        0.50015744 0.54924292 0.50285033
 0.56271888 0.50351164 0.53471291 0.5        0.50426443 0.57857093]
Average PRC each method:  [0.30818943 0.30478589 0.30478589 0.30489575 0.3349198  0.30610887
 0.34133053 0.30837056 0.32939814 0.30478589 0.30788078 0.37266588]
Std ROC each method:  [0.01189884 0.         0.         0.00031488 0.02905845 0.0053318
 0.02612922 0.00317361 0.02704786 0.         0.00776564 0.05855075]
Std PRC each method:  [0.00678613 0.00600791 0.00600791 0.00596572 0.02524708 0.00640198
 0.0132336  0.00593741 0.02718379 0.00600791 0.01139083 0.04955899]
Average over repetitions across all methods
Average ROC:  0.5202049846038134
Average PRC:  0.31900978603759683
Std ROC:  0.008256385316018537
Variance PRC:  0.0113768129914032 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.575} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71154517 0.28845483] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70921366 0.29078634]
before perturbation, mean and variance of data mean embedding are 0.006235 and 0.062604 
after perturbation, mean and variance of data mean embedding are 0.006107 and 0.135331 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.491
PRC on test generated data is 0.303

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.612
PRC on test generated data is 0.373

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.315

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.318
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.311


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71294036 0.28705964] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71475132 0.28524868]
before perturbation, mean and variance of data mean embedding are 0.006256 and 0.062945 
after perturbation, mean and variance of data mean embedding are 0.006595 and 0.135698 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.536
PRC on test generated data is 0.327

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.527
PRC on test generated data is 0.320

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.645
PRC on test generated data is 0.450

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.307

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.645
PRC on test generated data is 0.450
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.334


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70735961 0.29264039] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70466978 0.29533022]
before perturbation, mean and variance of data mean embedding are 0.006241 and 0.062656 
after perturbation, mean and variance of data mean embedding are 0.004851 and 0.135291 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.537
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.628
PRC on test generated data is 0.376

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.582
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.521
PRC on test generated data is 0.318

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.310
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.311


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70561563 0.29438437] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70032511 0.29967489]
before perturbation, mean and variance of data mean embedding are 0.006275 and 0.062696 
after perturbation, mean and variance of data mean embedding are 0.006159 and 0.135507 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.295

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.296

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.539
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.575
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.527
PRC on test generated data is 0.324

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.296
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.299


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70666202 0.29333798] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70602247 0.29397753]
before perturbation, mean and variance of data mean embedding are 0.006196 and 0.062254 
after perturbation, mean and variance of data mean embedding are 0.006645 and 0.135008 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.582
PRC on test generated data is 0.337

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.602
PRC on test generated data is 0.348

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.297

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.554
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.293

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.306


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53106724 0.5        0.5        0.50082783 0.55252722 0.51203778
 0.58515198 0.51829252 0.50927532 0.5        0.51035146 0.54506793]
Average PRC each method:  [0.31367313 0.29715216 0.29715216 0.29824766 0.32836369 0.30248153
 0.35761195 0.31144051 0.30275479 0.29715216 0.30933343 0.33331394]
Std ROC each method:  [0.0298806  0.         0.         0.00213771 0.05309244 0.01584253
 0.04461169 0.01824862 0.0129029  0.         0.01140182 0.05170795]
Std PRC each method:  [0.01666727 0.00671758 0.00671758 0.00581919 0.02962175 0.00536586
 0.05199864 0.01489083 0.00748948 0.00671758 0.01092053 0.05898002]
Average over repetitions across all methods
Average ROC:  0.5220499403919285
Average PRC:  0.3123897573368042
Std ROC:  0.007283302408344879
Variance PRC:  0.011673444899482278 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.6} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72284264 0.27715736] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72456172 0.27543828]
before perturbation, mean and variance of data mean embedding are 0.006230 and 0.063345 
after perturbation, mean and variance of data mean embedding are 0.006106 and 0.132571 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.563
PRC on test generated data is 0.334

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.612
PRC on test generated data is 0.370

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.527
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.536
PRC on test generated data is 0.318
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.312


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71844332 0.28155668] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72130512 0.27869488]
before perturbation, mean and variance of data mean embedding are 0.006235 and 0.062915 
after perturbation, mean and variance of data mean embedding are 0.006564 and 0.132520 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.531
PRC on test generated data is 0.305

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.630
PRC on test generated data is 0.394

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.551
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.669
PRC on test generated data is 0.396

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.297

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.643
PRC on test generated data is 0.431
----------------------------------------
roc mean across methods is 0.545
prc mean across methods is 0.324


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71878173 0.28121827] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72030316 0.27969684]
before perturbation, mean and variance of data mean embedding are 0.006235 and 0.063085 
after perturbation, mean and variance of data mean embedding are 0.004887 and 0.132352 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.549
PRC on test generated data is 0.313

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.579
PRC on test generated data is 0.336

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.521
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.297

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.538
PRC on test generated data is 0.310
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.301


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71404399 0.28595601] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71403483 0.28596517]
before perturbation, mean and variance of data mean embedding are 0.006258 and 0.062973 
after perturbation, mean and variance of data mean embedding are 0.006145 and 0.132467 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.611
PRC on test generated data is 0.340

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.536
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.564
PRC on test generated data is 0.308

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.282

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.540
PRC on test generated data is 0.306

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.571
PRC on test generated data is 0.325
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.298


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.7143824 0.2856176] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71476253 0.28523747]
before perturbation, mean and variance of data mean embedding are 0.006199 and 0.062564 
after perturbation, mean and variance of data mean embedding are 0.006635 and 0.131970 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.568
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.283

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.594
PRC on test generated data is 0.325

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.283

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.534
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.285

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.282

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.283

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.534
PRC on test generated data is 0.299

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.559
PRC on test generated data is 0.349
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.297


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54209104 0.5        0.5        0.50044622 0.60523863 0.52322495
 0.56281769 0.51216825 0.5042681  0.50056259 0.51506725 0.56941195]
Average PRC each method:  [0.31068092 0.2887135  0.2887135  0.28906552 0.35313847 0.2990346
 0.32388139 0.29726497 0.29208056 0.28952297 0.29759345 0.34665593]
Std ROC each method:  [0.02460651 0.         0.         0.00182931 0.01746073 0.01878553
 0.05503301 0.01085689 0.00473831 0.00068903 0.01784593 0.03904155]
Std PRC each method:  [0.01809243 0.00756049 0.00756049 0.00722573 0.02533823 0.00994668
 0.03646662 0.00640375 0.00638522 0.00670683 0.00569163 0.04431973]
Average over repetitions across all methods
Average ROC:  0.52794138989984
Average PRC:  0.3063621481233557
Std ROC:  0.009791695134572653
Variance PRC:  0.010315043323398417 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.625} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.73085771 0.26914229] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72992296 0.27007704]
before perturbation, mean and variance of data mean embedding are 0.006259 and 0.063677 
after perturbation, mean and variance of data mean embedding are 0.006139 and 0.129778 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.503
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.550
PRC on test generated data is 0.317

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.532
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.541
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.476
PRC on test generated data is 0.283
----------------------------------------
roc mean across methods is 0.509
prc mean across methods is 0.297


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72724285 0.27275715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72652029 0.27347971]
before perturbation, mean and variance of data mean embedding are 0.006255 and 0.063554 
after perturbation, mean and variance of data mean embedding are 0.006574 and 0.129882 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.583
PRC on test generated data is 0.334

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.285

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.609
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.525
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.648
PRC on test generated data is 0.424
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.307


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72954321 0.27045679] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73023102 0.26976898]
before perturbation, mean and variance of data mean embedding are 0.006212 and 0.063328 
after perturbation, mean and variance of data mean embedding are 0.004903 and 0.129539 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.536
PRC on test generated data is 0.307

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.628
PRC on test generated data is 0.363

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.622
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.588
PRC on test generated data is 0.344
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.308


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72855734 0.27144266] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72848923 0.27151077]
before perturbation, mean and variance of data mean embedding are 0.006237 and 0.063293 
after perturbation, mean and variance of data mean embedding are 0.006128 and 0.129700 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.503
PRC on test generated data is 0.288

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.548
PRC on test generated data is 0.311

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.582
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.598
PRC on test generated data is 0.365

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.287

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.288

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.288

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.594
PRC on test generated data is 0.350
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.306


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72034177 0.27965823] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71808105 0.28191895]
before perturbation, mean and variance of data mean embedding are 0.006252 and 0.063364 
after perturbation, mean and variance of data mean embedding are 0.006675 and 0.129411 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.537
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.269

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.529
PRC on test generated data is 0.281

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.590
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.278

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.273

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.268

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.640
PRC on test generated data is 0.420
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.288


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.50853198 0.5        0.5        0.50089132 0.54918385 0.55190722
 0.57077582 0.52166634 0.50638777 0.50026738 0.50192986 0.58911803]
Average PRC each method:  [0.28755487 0.28367816 0.28367816 0.28431125 0.31026937 0.31096724
 0.32618019 0.30179269 0.2902309  0.28405966 0.28568453 0.36402806]
Std ROC each method:  [0.01438082 0.         0.         0.00109317 0.01876707 0.04916217
 0.04485104 0.03816245 0.00944256 0.00053476 0.0026203  0.06157713]
Std PRC each method:  [0.00364955 0.00857964 0.00857964 0.00832452 0.01724243 0.02802555
 0.03387451 0.0321458  0.01180489 0.00874152 0.00894087 0.05256187]
Average over repetitions across all methods
Average ROC:  0.5250549644702052
Average PRC:  0.30103625883013463
Std ROC:  0.00842771763957256
Variance PRC:  0.007783443171132183 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.4} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63422222 0.36577778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63543118 0.36456882]
before perturbation, mean and variance of data mean embedding are 0.003178 and 0.043006 
after perturbation, mean and variance of data mean embedding are 0.002474 and 0.158623 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.391

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.596
PRC on test generated data is 0.451

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.498
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.558
PRC on test generated data is 0.428

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.544
PRC on test generated data is 0.414

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.556
PRC on test generated data is 0.438

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.390

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.513
PRC on test generated data is 0.399

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.464
PRC on test generated data is 0.376
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.404


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63377778 0.36622222] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63259818 0.36740182]
before perturbation, mean and variance of data mean embedding are 0.003171 and 0.042980 
after perturbation, mean and variance of data mean embedding are 0.003751 and 0.158749 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.534
PRC on test generated data is 0.414

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.604
PRC on test generated data is 0.448

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.563
PRC on test generated data is 0.427

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.392

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.390

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.398

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.487
PRC on test generated data is 0.384
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.400


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.616 0.384] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61565847 0.38434153]
before perturbation, mean and variance of data mean embedding are 0.003169 and 0.042506 
after perturbation, mean and variance of data mean embedding are 0.002007 and 0.158152 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.545
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.354

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.599
PRC on test generated data is 0.407

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.554
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.557
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.598
PRC on test generated data is 0.405

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.480
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.516
PRC on test generated data is 0.356

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.365
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.368


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.61822222 0.38177778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61671005 0.38328995]
before perturbation, mean and variance of data mean embedding are 0.003165 and 0.042619 
after perturbation, mean and variance of data mean embedding are 0.003020 and 0.158478 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.539
PRC on test generated data is 0.375

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.367

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.602
PRC on test generated data is 0.408

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.538
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.592
PRC on test generated data is 0.410

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.611
PRC on test generated data is 0.419

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.386

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.358

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.364

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.353
----------------------------------------
roc mean across methods is 0.537
prc mean across methods is 0.378


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63022222 0.36977778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62772676 0.37227324]
before perturbation, mean and variance of data mean embedding are 0.003181 and 0.042965 
after perturbation, mean and variance of data mean embedding are 0.003617 and 0.159165 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.523
PRC on test generated data is 0.395

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.381

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.595
PRC on test generated data is 0.438

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.609
PRC on test generated data is 0.461

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.524
PRC on test generated data is 0.398

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.497
PRC on test generated data is 0.381

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.617
PRC on test generated data is 0.460

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.523
PRC on test generated data is 0.393
----------------------------------------
roc mean across methods is 0.535
prc mean across methods is 0.404


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52827089 0.5        0.5        0.50307852 0.59911386 0.53960053
 0.55412516 0.55722445 0.52570298 0.49614498 0.53261315 0.50197536]
Average PRC each method:  [0.38980666 0.37264249 0.37264249 0.37645935 0.43031095 0.40215545
 0.40504058 0.40581854 0.39370116 0.37159787 0.39552052 0.37420867]
Std ROC each method:  [0.0158269  0.         0.         0.00574205 0.0035313  0.04098976
 0.02987458 0.04091652 0.0194982  0.00855334 0.04202902 0.02532054]
Std PRC each method:  [0.01467935 0.01821713 0.01821713 0.01412633 0.01921933 0.02963206
 0.02123945 0.0098157  0.0266109  0.01988609 0.03655719 0.01383955]
Average over repetitions across all methods
Average ROC:  0.5281541554292268
Average PRC:  0.39082539346222
Std ROC:  0.008662483189480907
Variance PRC:  0.015093539386148349 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.425} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6471343 0.3528657] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64050568 0.35949432]
before perturbation, mean and variance of data mean embedding are 0.003164 and 0.043179 
after perturbation, mean and variance of data mean embedding are 0.002486 and 0.153146 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.528
PRC on test generated data is 0.388

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.599
PRC on test generated data is 0.427

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.604
PRC on test generated data is 0.440

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.537
PRC on test generated data is 0.392

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.536
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.520
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.374

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.405
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.392


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64927288 0.35072712] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6513942 0.3486058]
before perturbation, mean and variance of data mean embedding are 0.003170 and 0.043349 
after perturbation, mean and variance of data mean embedding are 0.003728 and 0.153333 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.379

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.615
PRC on test generated data is 0.456

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.571
PRC on test generated data is 0.423

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.410

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.383

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.478
PRC on test generated data is 0.369
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.391


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63088109 0.36911891] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63436458 0.36563542]
before perturbation, mean and variance of data mean embedding are 0.003165 and 0.042798 
after perturbation, mean and variance of data mean embedding are 0.002047 and 0.152707 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.559
PRC on test generated data is 0.370

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.542
PRC on test generated data is 0.368

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.593
PRC on test generated data is 0.395

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.571
PRC on test generated data is 0.373

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.559
PRC on test generated data is 0.370

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.586
PRC on test generated data is 0.409

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.342

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.557
PRC on test generated data is 0.377

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.336
----------------------------------------
roc mean across methods is 0.542
prc mean across methods is 0.364


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63473054 0.36526946] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63165392 0.36834608]
before perturbation, mean and variance of data mean embedding are 0.003184 and 0.043033 
after perturbation, mean and variance of data mean embedding are 0.003044 and 0.153055 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.544
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.350

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.604
PRC on test generated data is 0.399

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.543
PRC on test generated data is 0.377

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.686
PRC on test generated data is 0.459

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.347

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.349

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.355
----------------------------------------
roc mean across methods is 0.537
prc mean across methods is 0.367


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64499572 0.35500428] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64574651 0.35425349]
before perturbation, mean and variance of data mean embedding are 0.003162 and 0.043197 
after perturbation, mean and variance of data mean embedding are 0.003581 and 0.153687 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.528
PRC on test generated data is 0.384

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.529
PRC on test generated data is 0.387

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.611
PRC on test generated data is 0.442

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.567
PRC on test generated data is 0.411

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.552
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.522
PRC on test generated data is 0.384

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.512
PRC on test generated data is 0.378

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.517
PRC on test generated data is 0.388

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.405
PRC on test generated data is 0.332
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.385


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53191828 0.5        0.5        0.515856   0.60445506 0.54733047
 0.58381759 0.53664144 0.52957098 0.5036282  0.51636153 0.48960798]
Average PRC each method:  [0.37795108 0.36051844 0.36051844 0.37145966 0.42375705 0.39010403
 0.41093289 0.38471462 0.38430563 0.36389345 0.37337748 0.35942027]
Std ROC each method:  [0.01975282 0.         0.         0.01670777 0.00812279 0.03704688
 0.05266007 0.01159104 0.02885061 0.00503717 0.0214463  0.0479148 ]
Std PRC each method:  [0.00782555 0.01690335 0.01690335 0.01247073 0.02364873 0.02517135
 0.02989885 0.0231304  0.01644105 0.01623117 0.01290023 0.02639271]
Average over repetitions across all methods
Average ROC:  0.5299322933479818
Average PRC:  0.38007941954099966
Std ROC:  0.008851461225603843
Variance PRC:  0.01203099148900404 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.45} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66075845 0.33924155] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65688036 0.34311964]
before perturbation, mean and variance of data mean embedding are 0.003161 and 0.043421 
after perturbation, mean and variance of data mean embedding are 0.002508 and 0.148111 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.526
PRC on test generated data is 0.375

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.629
PRC on test generated data is 0.448

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.600
PRC on test generated data is 0.416

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.587
PRC on test generated data is 0.459

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.525
PRC on test generated data is 0.380

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.364

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.392
----------------------------------------
roc mean across methods is 0.535
prc mean across methods is 0.387


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66158285 0.33841715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65996544 0.34003456]
before perturbation, mean and variance of data mean embedding are 0.003140 and 0.043179 
after perturbation, mean and variance of data mean embedding are 0.003677 and 0.148177 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.366

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.567
PRC on test generated data is 0.400

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.554
PRC on test generated data is 0.396

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.532
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.554
PRC on test generated data is 0.391
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.375


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65127782 0.34872218] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65208349 0.34791651]
before perturbation, mean and variance of data mean embedding are 0.003188 and 0.043464 
after perturbation, mean and variance of data mean embedding are 0.002110 and 0.147799 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.502
PRC on test generated data is 0.341

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.521
PRC on test generated data is 0.350

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.517
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.525
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.342

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.340
----------------------------------------
roc mean across methods is 0.508
prc mean across methods is 0.344


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64715581 0.35284419] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64221669 0.35778331]
before perturbation, mean and variance of data mean embedding are 0.003174 and 0.043230 
after perturbation, mean and variance of data mean embedding are 0.003040 and 0.148015 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.515
PRC on test generated data is 0.338

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.583
PRC on test generated data is 0.374

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.557
PRC on test generated data is 0.373

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.592
PRC on test generated data is 0.412

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.331

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.330
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.346


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65787304 0.34212696] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6612381 0.3387619]
before perturbation, mean and variance of data mean embedding are 0.003133 and 0.043228 
after perturbation, mean and variance of data mean embedding are 0.003538 and 0.148578 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.512
PRC on test generated data is 0.361

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.492
PRC on test generated data is 0.355

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.567
PRC on test generated data is 0.399

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.496
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.532
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.523
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.421
PRC on test generated data is 0.325
----------------------------------------
roc mean across methods is 0.504
prc mean across methods is 0.361


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51131764 0.5        0.5        0.49848189 0.57342416 0.52985043
 0.54229322 0.53102461 0.51988146 0.50014723 0.50119959 0.50499707]
Average PRC each method:  [0.35607932 0.35043228 0.35043228 0.35028173 0.39425405 0.36617116
 0.38653495 0.37552914 0.36620437 0.35053085 0.35120964 0.3556744 ]
Std ROC each method:  [0.00921206 0.         0.         0.00303621 0.03459377 0.03573072
 0.03179568 0.03257105 0.00951507 0.00029445 0.00157604 0.04788197]
Std PRC each method:  [0.01436817 0.01307848 0.01307848 0.01302434 0.0325336  0.02876132
 0.03988733 0.01950078 0.01782953 0.01292851 0.01318597 0.02974682]
Average over repetitions across all methods
Average ROC:  0.5177181076932482
Average PRC:  0.3627778465929572
Std ROC:  0.010997312754953862
Variance PRC:  0.016560758574782838 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.475} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67157058 0.32842942] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66906775 0.33093225]
before perturbation, mean and variance of data mean embedding are 0.003172 and 0.043781 
after perturbation, mean and variance of data mean embedding are 0.002543 and 0.143432 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.568
PRC on test generated data is 0.384

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.528
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.529
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.357

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.349

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.540
PRC on test generated data is 0.370
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.357


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67673956 0.32326044] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67830718 0.32169282]
before perturbation, mean and variance of data mean embedding are 0.003166 and 0.043930 
after perturbation, mean and variance of data mean embedding are 0.003685 and 0.143607 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.361

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.528
PRC on test generated data is 0.377

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.579
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.526
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.360

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.359

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.372
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.366


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66202783 0.33797217] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66011556 0.33988444]
before perturbation, mean and variance of data mean embedding are 0.003155 and 0.043404 
after perturbation, mean and variance of data mean embedding are 0.002116 and 0.143007 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.536
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.543
PRC on test generated data is 0.363

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.586
PRC on test generated data is 0.381

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.553
PRC on test generated data is 0.363

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.571
PRC on test generated data is 0.394

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.518
PRC on test generated data is 0.338

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.543
PRC on test generated data is 0.359

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.327
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.351


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66043738 0.33956262] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66210676 0.33789324]
before perturbation, mean and variance of data mean embedding are 0.003173 and 0.043665 
after perturbation, mean and variance of data mean embedding are 0.003044 and 0.143362 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.540
PRC on test generated data is 0.341

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.526
PRC on test generated data is 0.336

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.527
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.534
PRC on test generated data is 0.338

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.592
PRC on test generated data is 0.405

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.324

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.332
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.336


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66878728 0.33121272] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67337177 0.32662823]
before perturbation, mean and variance of data mean embedding are 0.003177 and 0.043877 
after perturbation, mean and variance of data mean embedding are 0.003567 and 0.143968 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.530
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.644
PRC on test generated data is 0.434

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.586
PRC on test generated data is 0.386

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.644
PRC on test generated data is 0.434

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.494
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.540
PRC on test generated data is 0.361
----------------------------------------
roc mean across methods is 0.537
prc mean across methods is 0.363


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52134712 0.5        0.5        0.50838351 0.57033474 0.55284144
 0.55569726 0.51712654 0.52847307 0.50476994 0.50961251 0.52534728]
Average PRC each method:  [0.35184636 0.33840445 0.33840445 0.34610476 0.38220252 0.367528
 0.37735574 0.3511147  0.36274075 0.34310576 0.34620956 0.3521254 ]
Std ROC each method:  [0.01716272 0.         0.         0.01714311 0.04338592 0.02680364
 0.04910967 0.01305311 0.0331129  0.00856556 0.01674655 0.01434063]
Std PRC each method:  [0.00708679 0.01409774 0.01409774 0.01505834 0.03109316 0.02337321
 0.03417855 0.01088088 0.02385631 0.01395824 0.01317198 0.01905816]
Average over repetitions across all methods
Average ROC:  0.5244944509867081
Average PRC:  0.3547618712333588
Std ROC:  0.008958478416300972
Variance PRC:  0.010677658903836963 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.5} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68005942 0.31994058]
before perturbation, mean and variance of data mean embedding are 0.003170 and 0.044055 
after perturbation, mean and variance of data mean embedding are 0.002561 and 0.139142 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.573
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.343

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.531
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.531
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.353
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.344


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68843642 0.31156358] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68853191 0.31146809]
before perturbation, mean and variance of data mean embedding are 0.003185 and 0.044363 
after perturbation, mean and variance of data mean embedding are 0.003686 and 0.139350 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.350

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.349

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.557
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.350

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.548
PRC on test generated data is 0.374
----------------------------------------
roc mean across methods is 0.510
prc mean across methods is 0.354


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67652708 0.32347292] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67729335 0.32270665]
before perturbation, mean and variance of data mean embedding are 0.003180 and 0.043976 
after perturbation, mean and variance of data mean embedding are 0.002175 and 0.138796 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.537
PRC on test generated data is 0.350

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.323

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.324

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.623
PRC on test generated data is 0.415

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.601
PRC on test generated data is 0.404

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.562
PRC on test generated data is 0.371

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.529
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.519
PRC on test generated data is 0.333

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.323

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.321
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.346


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6749904 0.3250096] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67563175 0.32436825]
before perturbation, mean and variance of data mean embedding are 0.003172 and 0.043862 
after perturbation, mean and variance of data mean embedding are 0.003047 and 0.139051 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.545
PRC on test generated data is 0.346

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.318

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.548
PRC on test generated data is 0.346

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.548
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.317

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.319

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.323
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.326


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67868403 0.32131597]
before perturbation, mean and variance of data mean embedding are 0.003194 and 0.044242 
after perturbation, mean and variance of data mean embedding are 0.003570 and 0.139687 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.518
PRC on test generated data is 0.344

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.557
PRC on test generated data is 0.370

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.621
PRC on test generated data is 0.406

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.548
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.339

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.341

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.553
PRC on test generated data is 0.363
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.351


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.5347664  0.5        0.5        0.50036773 0.52503389 0.52774367
 0.57178438 0.52455959 0.51396643 0.50329085 0.50248537 0.52930053]
Average PRC each method:  [0.35266331 0.33136201 0.33136201 0.33170843 0.34631285 0.35189598
 0.37727896 0.35016237 0.341339   0.33416298 0.33339619 0.34681018]
Std ROC each method:  [0.02435473 0.         0.         0.00163617 0.02340756 0.04812757
 0.03378575 0.02563854 0.01345774 0.00766617 0.00296939 0.02050813]
Std PRC each method:  [0.01083424 0.01128321 0.01128321 0.01079567 0.01460421 0.03384903
 0.02550027 0.01762542 0.01300363 0.01047894 0.01111359 0.0212594 ]
Average over repetitions across all methods
Average ROC:  0.5194415699649769
Average PRC:  0.3440378552779969
Std ROC:  0.008093195236905815
Variance PRC:  0.009837867210172942 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.525} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6936803 0.3063197] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69634989 0.30365011]
before perturbation, mean and variance of data mean embedding are 0.003181 and 0.044549 
after perturbation, mean and variance of data mean embedding are 0.002592 and 0.135249 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.571
PRC on test generated data is 0.372

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.597
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.326

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.537
PRC on test generated data is 0.346
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.337


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69628253 0.30371747] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6993396 0.3006604]
before perturbation, mean and variance of data mean embedding are 0.003172 and 0.044404 
after perturbation, mean and variance of data mean embedding are 0.003656 and 0.135307 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.609
PRC on test generated data is 0.394

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.567
PRC on test generated data is 0.365

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.535
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.520
PRC on test generated data is 0.352

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.469
PRC on test generated data is 0.320
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.346


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68736059 0.31263941] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6842002 0.3157998]
before perturbation, mean and variance of data mean embedding are 0.003163 and 0.044158 
after perturbation, mean and variance of data mean embedding are 0.002191 and 0.134820 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.516
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.312

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.621
PRC on test generated data is 0.388

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.551
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.560
PRC on test generated data is 0.351

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.523
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.533
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.315

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.311
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.328


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6866171 0.3133829] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69338958 0.30661042]
before perturbation, mean and variance of data mean embedding are 0.003195 and 0.044370 
after perturbation, mean and variance of data mean embedding are 0.003074 and 0.135157 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.502
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.518
PRC on test generated data is 0.318

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.588
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.312

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.311

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.323
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.316


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69107807 0.30892193] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6915028 0.3084972]
before perturbation, mean and variance of data mean embedding are 0.003165 and 0.044308 
after perturbation, mean and variance of data mean embedding are 0.003530 and 0.135641 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.530
PRC on test generated data is 0.334

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.583
PRC on test generated data is 0.366

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.527
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.525
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.322

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.538
PRC on test generated data is 0.338
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.329


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51095168 0.5        0.5        0.50020672 0.58034724 0.52884351
 0.55719717 0.51090533 0.52127555 0.50004617 0.50547772 0.51354578]
Average PRC each method:  [0.32544315 0.31958406 0.31958406 0.31969087 0.36767153 0.33447962
 0.35367008 0.32766568 0.3354572  0.3199195  0.32470018 0.32752786]
Std ROC each method:  [0.01120936 0.         0.         0.00041345 0.03578739 0.02675551
 0.03324606 0.00713729 0.01200592 0.00070289 0.00744451 0.02592477]
Std PRC each method:  [0.00894909 0.00856791 0.00856791 0.00846408 0.02695747 0.01838876
 0.01824699 0.01037358 0.01453792 0.0086481  0.01427002 0.01280011]
Average over repetitions across all methods
Average ROC:  0.5190664053145968
Average PRC:  0.33128281465760523
Std ROC:  0.004611698281245191
Variance PRC:  0.009935972861094452 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.55} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69953221 0.30046779] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70102094 0.29897906]
before perturbation, mean and variance of data mean embedding are 0.003196 and 0.044813 
after perturbation, mean and variance of data mean embedding are 0.002627 and 0.131479 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.557
PRC on test generated data is 0.343

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.612
PRC on test generated data is 0.365

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.554
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.307

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.321
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.319


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70349046 0.29650954] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70319765 0.29680235]
before perturbation, mean and variance of data mean embedding are 0.003184 and 0.044796 
after perturbation, mean and variance of data mean embedding are 0.003653 and 0.131580 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.530
PRC on test generated data is 0.334

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.316

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.608
PRC on test generated data is 0.377

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.614
PRC on test generated data is 0.397

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.329

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.467
PRC on test generated data is 0.303
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.329


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69701331 0.30298669] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69755057 0.30244943]
before perturbation, mean and variance of data mean embedding are 0.003191 and 0.044664 
after perturbation, mean and variance of data mean embedding are 0.002250 and 0.131135 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.532
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.550
PRC on test generated data is 0.328

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.445
PRC on test generated data is 0.300

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.304

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.304

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301
----------------------------------------
roc mean across methods is 0.505
prc mean across methods is 0.306


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69629363 0.30370637] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69233198 0.30766802]
before perturbation, mean and variance of data mean embedding are 0.003187 and 0.044651 
after perturbation, mean and variance of data mean embedding are 0.003070 and 0.131393 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.548
PRC on test generated data is 0.324

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.614
PRC on test generated data is 0.380

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.312

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.299
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.310


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.697733 0.302267] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69511755 0.30488245]
before perturbation, mean and variance of data mean embedding are 0.003150 and 0.044404 
after perturbation, mean and variance of data mean embedding are 0.003503 and 0.131807 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.541
PRC on test generated data is 0.324

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.302

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.520
PRC on test generated data is 0.312

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.637
PRC on test generated data is 0.383

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.577
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.305

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.557
PRC on test generated data is 0.331
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.320


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52061219 0.5        0.5        0.49939624 0.55670751 0.53011632
 0.57274913 0.52575721 0.5032555  0.50071157 0.50250729 0.51071863]
Average PRC each method:  [0.31585849 0.30478589 0.30478589 0.30478589 0.33671325 0.31995434
 0.36051789 0.32584019 0.30658334 0.30567341 0.30641527 0.3110491 ]
Std ROC each method:  [0.01726656 0.         0.         0.00065913 0.02868338 0.04201424
 0.06940614 0.02635234 0.00413436 0.00108216 0.00212411 0.03030586]
Std PRC each method:  [0.01240419 0.00600791 0.00600791 0.00600791 0.02252409 0.02323446
 0.03516455 0.02018544 0.00546058 0.00567553 0.00496655 0.01291587]
Average over repetitions across all methods
Average ROC:  0.5185443004199503
Average PRC:  0.31691358007022136
Std ROC:  0.007826113293519133
Variance PRC:  0.008072608899344974 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.575} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71154517 0.28845483] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70918596 0.29081404]
before perturbation, mean and variance of data mean embedding are 0.003201 and 0.045184 
after perturbation, mean and variance of data mean embedding are 0.002649 and 0.128047 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.605
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.545
PRC on test generated data is 0.328

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.626
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.314
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.319


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71294036 0.28705964] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71491116 0.28508884]
before perturbation, mean and variance of data mean embedding are 0.003158 and 0.044769 
after perturbation, mean and variance of data mean embedding are 0.003612 and 0.128032 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.503
PRC on test generated data is 0.308

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.570
PRC on test generated data is 0.348

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.557
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.541
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.517
PRC on test generated data is 0.314
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.315


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70735961 0.29264039] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71145613 0.28854387]
before perturbation, mean and variance of data mean embedding are 0.003166 and 0.044759 
after perturbation, mean and variance of data mean embedding are 0.002254 and 0.127611 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.521
PRC on test generated data is 0.304

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.294

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.496
PRC on test generated data is 0.292

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.633
PRC on test generated data is 0.384

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.296

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.294
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.303


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70561563 0.29438437] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7012537 0.2987463]
before perturbation, mean and variance of data mean embedding are 0.003174 and 0.044846 
after perturbation, mean and variance of data mean embedding are 0.003060 and 0.127899 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.576
PRC on test generated data is 0.331

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.575
PRC on test generated data is 0.352

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.646
PRC on test generated data is 0.384

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.530
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.300

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.296
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.311


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70666202 0.29333798] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70336367 0.29663633]
before perturbation, mean and variance of data mean embedding are 0.003184 and 0.044882 
after perturbation, mean and variance of data mean embedding are 0.003526 and 0.128393 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.560
PRC on test generated data is 0.328

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.622
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.293

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.293

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.548
PRC on test generated data is 0.315
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.304


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54109846 0.5        0.5        0.49988479 0.54935625 0.51764942
 0.6135967  0.50814382 0.50794495 0.50016361 0.50087287 0.5197761 ]
Average PRC each method:  [0.32003798 0.29715216 0.29715216 0.29715216 0.32963378 0.30609357
 0.36990398 0.30257697 0.30251233 0.29726797 0.29776022 0.3066343 ]
Std ROC each method:  [0.04211355 0.         0.         0.00023041 0.02834227 0.02413169
 0.03719123 0.01143878 0.00662867 0.00032722 0.00101469 0.01586474]
Std PRC each method:  [0.02548196 0.00671758 0.00671758 0.00671758 0.02115916 0.01546223
 0.02088691 0.00629655 0.00437567 0.00663408 0.00615311 0.00983151]
Average over repetitions across all methods
Average ROC:  0.5215405810861072
Average PRC:  0.3103231316674834
Std ROC:  0.007062212713706107
Variance PRC:  0.006242371829196379 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.6} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72284264 0.27715736] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72016983 0.27983017]
before perturbation, mean and variance of data mean embedding are 0.003160 and 0.045320 
after perturbation, mean and variance of data mean embedding are 0.002624 and 0.124784 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.516
PRC on test generated data is 0.314

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.603
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.646
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.312
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.317


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71844332 0.28155668] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71872623 0.28127377]
before perturbation, mean and variance of data mean embedding are 0.003190 and 0.045213 
after perturbation, mean and variance of data mean embedding are 0.003631 and 0.124839 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.505
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.590
PRC on test generated data is 0.350

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.551
PRC on test generated data is 0.315

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.292
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.299


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71878173 0.28121827] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72243367 0.27756633]
before perturbation, mean and variance of data mean embedding are 0.003186 and 0.045307 
after perturbation, mean and variance of data mean embedding are 0.002301 and 0.124479 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.545
PRC on test generated data is 0.318

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.588
PRC on test generated data is 0.333

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.308

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.297

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.291
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.299


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71404399 0.28595601] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71545347 0.28454653]
before perturbation, mean and variance of data mean embedding are 0.003171 and 0.044968 
after perturbation, mean and variance of data mean embedding are 0.003061 and 0.124619 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.581
PRC on test generated data is 0.323

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.566
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.286

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.282
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.288


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.7143824 0.2856176] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71157429 0.28842571]
before perturbation, mean and variance of data mean embedding are 0.003160 and 0.045027 
after perturbation, mean and variance of data mean embedding are 0.003492 and 0.125107 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.652
PRC on test generated data is 0.395

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.281

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.298

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.542
PRC on test generated data is 0.300

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.641
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.285

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.536
PRC on test generated data is 0.297
----------------------------------------
roc mean across methods is 0.537
prc mean across methods is 0.304


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54048583 0.5        0.5        0.49983876 0.5617965  0.53039732
 0.58081186 0.51560437 0.51263626 0.4997759  0.50073293 0.51316446]
Average PRC each method:  [0.31761477 0.2887135  0.2887135  0.28877232 0.32358142 0.30368781
 0.33430526 0.29917643 0.29853538 0.2887135  0.28950398 0.29492656]
Std ROC each method:  [0.05836843 0.         0.         0.00043724 0.0306089  0.03953133
 0.05570846 0.00956034 0.01085383 0.00027448 0.00146585 0.01369255]
Std PRC each method:  [0.04068114 0.00756049 0.00756049 0.00750099 0.01760893 0.02491374
 0.03751016 0.01168131 0.00800838 0.00756049 0.00688709 0.00989931]
Average over repetitions across all methods
Average ROC:  0.5212703495210309
Average PRC:  0.3013537011170327
Std ROC:  0.009361438659632423
Variance PRC:  0.00933692940339282 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.6, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.625} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.73085771 0.26914229] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72617141 0.27382859]
before perturbation, mean and variance of data mean embedding are 0.003178 and 0.045620 
after perturbation, mean and variance of data mean embedding are 0.002658 and 0.121767 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.505
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.563
PRC on test generated data is 0.326

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.614
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.300

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.538
PRC on test generated data is 0.312
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.305


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72724285 0.27275715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72957823 0.27042177]
before perturbation, mean and variance of data mean embedding are 0.003165 and 0.045429 
after perturbation, mean and variance of data mean embedding are 0.003593 and 0.121789 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.595
PRC on test generated data is 0.350

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.297

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.605
PRC on test generated data is 0.344

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.542
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.529
PRC on test generated data is 0.300

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.286

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.516
PRC on test generated data is 0.297

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.631
PRC on test generated data is 0.385
----------------------------------------
roc mean across methods is 0.536
prc mean across methods is 0.309


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72954321 0.27045679] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72990562 0.27009438]
before perturbation, mean and variance of data mean embedding are 0.003204 and 0.045797 
after perturbation, mean and variance of data mean embedding are 0.002345 and 0.121542 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.538
PRC on test generated data is 0.307

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.561
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.289
----------------------------------------
roc mean across methods is 0.509
prc mean across methods is 0.295


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72855734 0.27144266] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73050063 0.26949937]
before perturbation, mean and variance of data mean embedding are 0.003170 and 0.045358 
after perturbation, mean and variance of data mean embedding are 0.003063 and 0.121622 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.543
PRC on test generated data is 0.306

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.560
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.544
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.518
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.293
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.295


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.6
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.6_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72034177 0.27965823] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72068677 0.27931323]
before perturbation, mean and variance of data mean embedding are 0.003172 and 0.045265 
after perturbation, mean and variance of data mean embedding are 0.003494 and 0.122049 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.614
PRC on test generated data is 0.347

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.518
PRC on test generated data is 0.275

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.279

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.278

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.270

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.532
PRC on test generated data is 0.282
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.278


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52012013 0.5        0.5        0.50227362 0.5724617  0.52026251
 0.54555837 0.51553846 0.50731902 0.50028653 0.50481469 0.54244727]
Average PRC each method:  [0.29750119 0.28367816 0.28367816 0.2863036  0.32600913 0.29556789
 0.31189673 0.29595451 0.28929266 0.28409797 0.28792478 0.31216837]
Std ROC each method:  [0.0376542  0.         0.         0.00482236 0.03135902 0.02564863
 0.03884283 0.01526742 0.00711355 0.00057307 0.00634471 0.04621057]
Std PRC each method:  [0.0279614  0.00857964 0.00857964 0.01001884 0.01730936 0.01783954
 0.03478298 0.0131213  0.00729932 0.00778944 0.01135381 0.03790079]
Average over repetitions across all methods
Average ROC:  0.5192568588480775
Average PRC:  0.29617276116355373
Std ROC:  0.00893960120371291
Variance PRC:  0.010693079329827779 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.4} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63422222 0.36577778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63613606 0.36386394]
before perturbation, mean and variance of data mean embedding are 0.042653 and 0.144561 
after perturbation, mean and variance of data mean embedding are 0.042937 and 0.211867 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.637
PRC on test generated data is 0.477

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.392

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.421

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.398

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.617
PRC on test generated data is 0.462

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.689
PRC on test generated data is 0.511

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.605
PRC on test generated data is 0.452

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.405

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.391

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.576
PRC on test generated data is 0.461

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.633
PRC on test generated data is 0.481
----------------------------------------
roc mean across methods is 0.569
prc mean across methods is 0.437


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63377778 0.36622222] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63036947 0.36963053]
before perturbation, mean and variance of data mean embedding are 0.042310 and 0.143380 
after perturbation, mean and variance of data mean embedding are 0.040952 and 0.210537 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.629
PRC on test generated data is 0.476

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.627
PRC on test generated data is 0.463

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.444
PRC on test generated data is 0.381

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.539
PRC on test generated data is 0.411

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.532
PRC on test generated data is 0.407

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.529
PRC on test generated data is 0.405

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.390
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.407


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.616 0.384] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61883748 0.38116252]
before perturbation, mean and variance of data mean embedding are 0.042317 and 0.142597 
after perturbation, mean and variance of data mean embedding are 0.037849 and 0.209267 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.356

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.544
PRC on test generated data is 0.369

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.586
PRC on test generated data is 0.394

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.536
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.549
PRC on test generated data is 0.395

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.350

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.419
PRC on test generated data is 0.327
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.360


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.61822222 0.38177778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61656082 0.38343918]
before perturbation, mean and variance of data mean embedding are 0.042311 and 0.142464 
after perturbation, mean and variance of data mean embedding are 0.041267 and 0.207071 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.525
PRC on test generated data is 0.365

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.529
PRC on test generated data is 0.368

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.482
PRC on test generated data is 0.345

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.525
PRC on test generated data is 0.365

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.554
PRC on test generated data is 0.382

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.353
----------------------------------------
roc mean across methods is 0.510
prc mean across methods is 0.358


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63022222 0.36977778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6288428 0.3711572]
before perturbation, mean and variance of data mean embedding are 0.042120 and 0.143088 
after perturbation, mean and variance of data mean embedding are 0.043479 and 0.209842 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.616
PRC on test generated data is 0.449

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.624
PRC on test generated data is 0.469

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.613
PRC on test generated data is 0.446

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.649
PRC on test generated data is 0.475

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.381
----------------------------------------
roc mean across methods is 0.542
prc mean across methods is 0.408


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.58148344 0.5        0.55735325 0.51446135 0.5113205  0.54855711
 0.54273799 0.53359948 0.51106624 0.51000801 0.56225662 0.51038245]
Average PRC each method:  [0.42313431 0.37264249 0.40958255 0.38828446 0.37838968 0.40050485
 0.39920568 0.39180593 0.37950975 0.38212885 0.4145016  0.38647759]
Std ROC each method:  [0.05722594 0.         0.05621934 0.05715344 0.01710011 0.04642537
 0.0738093  0.0383947  0.01460174 0.01954358 0.04968606 0.06882429]
Std PRC each method:  [0.05529591 0.01821713 0.04740056 0.03985626 0.0156929  0.03598327
 0.05785337 0.0349913  0.01769477 0.01506052 0.04736321 0.05192099]
Average over repetitions across all methods
Average ROC:  0.5319355373194252
Average PRC:  0.3938473112288673
Std ROC:  0.021489564378100817
Variance PRC:  0.030388139835435063 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.425} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6471343 0.3528657] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64243777 0.35756223]
before perturbation, mean and variance of data mean embedding are 0.042145 and 0.144393 
after perturbation, mean and variance of data mean embedding are 0.042419 and 0.207460 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.594
PRC on test generated data is 0.424

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.374
----------------------------------------
roc mean across methods is 0.508
prc mean across methods is 0.378


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64927288 0.35072712] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64905683 0.35094317]
before perturbation, mean and variance of data mean embedding are 0.042654 and 0.145546 
after perturbation, mean and variance of data mean embedding are 0.041347 and 0.207805 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.586
PRC on test generated data is 0.432

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.403

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.379
----------------------------------------
roc mean across methods is 0.511
prc mean across methods is 0.385


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63088109 0.36911891] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63379542 0.36620458]
before perturbation, mean and variance of data mean embedding are 0.042221 and 0.143338 
after perturbation, mean and variance of data mean embedding are 0.037922 and 0.205554 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.515
PRC on test generated data is 0.343

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.641
PRC on test generated data is 0.421

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.562
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.548
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.543
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.656
PRC on test generated data is 0.446

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.342

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.545
PRC on test generated data is 0.360
----------------------------------------
roc mean across methods is 0.543
prc mean across methods is 0.363


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63473054 0.36526946] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63660968 0.36339032]
before perturbation, mean and variance of data mean embedding are 0.042693 and 0.144317 
after perturbation, mean and variance of data mean embedding are 0.041688 and 0.204261 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.351

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.345
----------------------------------------
roc mean across methods is 0.502
prc mean across methods is 0.347


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64499572 0.35500428] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64474803 0.35525197]
before perturbation, mean and variance of data mean embedding are 0.042324 and 0.144205 
after perturbation, mean and variance of data mean embedding are 0.043632 and 0.206408 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.604
PRC on test generated data is 0.443

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.651
PRC on test generated data is 0.475

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.594
PRC on test generated data is 0.421

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.524
PRC on test generated data is 0.381

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.533
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.597
PRC on test generated data is 0.426

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.369
----------------------------------------
roc mean across methods is 0.542
prc mean across methods is 0.396


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54265565 0.5        0.53074334 0.51874472 0.55009012 0.52598686
 0.50963946 0.50865925 0.53783678 0.5        0.52218922 0.50904243]
Average PRC each method:  [0.3868784  0.36051844 0.38252792 0.37098108 0.3905093  0.37491028
 0.36578172 0.36642651 0.3873652  0.36051844 0.37424121 0.36539689]
Std ROC each method:  [0.04635129 0.         0.060014   0.03748943 0.05502678 0.02508103
 0.01927892 0.01731851 0.06037841 0.         0.0377076  0.01808485]
Std PRC each method:  [0.0407597  0.01690335 0.04871271 0.02998061 0.03179052 0.01441641
 0.01176234 0.01164202 0.0332806  0.01690335 0.02948864 0.01190035]
Average over repetitions across all methods
Average ROC:  0.5212989848703286
Average PRC:  0.37383794961831945
Std ROC:  0.01759945523770215
Variance PRC:  0.017261464811548784 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.45} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66075845 0.33924155] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66391041 0.33608959]
before perturbation, mean and variance of data mean embedding are 0.042430 and 0.145888 
after perturbation, mean and variance of data mean embedding are 0.042693 and 0.204735 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.620
PRC on test generated data is 0.428

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.604
PRC on test generated data is 0.432

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.624
PRC on test generated data is 0.433

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.644
PRC on test generated data is 0.447

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.549
PRC on test generated data is 0.395

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.380

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.574
PRC on test generated data is 0.412

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.523
PRC on test generated data is 0.379

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.640
PRC on test generated data is 0.452

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.362
----------------------------------------
roc mean across methods is 0.567
prc mean across methods is 0.404


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66158285 0.33841715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65746633 0.34253367]
before perturbation, mean and variance of data mean embedding are 0.042329 and 0.145945 
after perturbation, mean and variance of data mean embedding are 0.041070 and 0.204340 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.561
PRC on test generated data is 0.403

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.550
PRC on test generated data is 0.403

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.403
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.548
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.518
PRC on test generated data is 0.373

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.364
----------------------------------------
roc mean across methods is 0.508
prc mean across methods is 0.372


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65127782 0.34872218] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65014489 0.34985511]
before perturbation, mean and variance of data mean embedding are 0.042683 and 0.145604 
after perturbation, mean and variance of data mean embedding are 0.038539 and 0.203399 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.513
PRC on test generated data is 0.346

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.526
PRC on test generated data is 0.359

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.617
PRC on test generated data is 0.420

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.555
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.569
PRC on test generated data is 0.387

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.548
PRC on test generated data is 0.367
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.359


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64715581 0.35284419] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64518941 0.35481059]
before perturbation, mean and variance of data mean embedding are 0.042674 and 0.145313 
after perturbation, mean and variance of data mean embedding are 0.041706 and 0.201243 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.330

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.624
PRC on test generated data is 0.397

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.555
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.538
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.337

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.332

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.338
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.342


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65787304 0.34212696] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65668026 0.34331974]
before perturbation, mean and variance of data mean embedding are 0.042434 and 0.145467 
after perturbation, mean and variance of data mean embedding are 0.043695 and 0.203506 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.604
PRC on test generated data is 0.411

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.560
PRC on test generated data is 0.386

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.356

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.355
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.363


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.55971362 0.5        0.51009095 0.50092581 0.55463065 0.56344493
 0.5351345  0.50838528 0.53348044 0.50666951 0.545781   0.51259074]
Average PRC each method:  [0.3836994  0.35043228 0.35828996 0.35949947 0.38152912 0.38542749
 0.37403885 0.35591064 0.37219445 0.35512586 0.37989925 0.35724519]
Std ROC each method:  [0.04785614 0.         0.02018191 0.06376964 0.05722946 0.04392086
 0.04497095 0.0122808  0.02932907 0.00910737 0.05316102 0.01879277]
Std PRC each method:  [0.03815498 0.01307848 0.02514734 0.03703593 0.02950943 0.0351465
 0.03101049 0.01638984 0.02121028 0.01536081 0.04029267 0.01033488]
Average over repetitions across all methods
Average ROC:  0.5275706198195622
Average PRC:  0.36777433010070787
Std ROC:  0.021149977924120923
Variance PRC:  0.020431655803886842 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.475} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67157058 0.32842942] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67064003 0.32935997]
before perturbation, mean and variance of data mean embedding are 0.043045 and 0.148569 
after perturbation, mean and variance of data mean embedding are 0.043300 and 0.203088 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.562
PRC on test generated data is 0.385

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.643
PRC on test generated data is 0.443

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.356

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.621
PRC on test generated data is 0.415

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.564
PRC on test generated data is 0.380

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.347
----------------------------------------
roc mean across methods is 0.535
prc mean across methods is 0.368


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67673956 0.32326044] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67492173 0.32507827]
before perturbation, mean and variance of data mean embedding are 0.042657 and 0.148347 
after perturbation, mean and variance of data mean embedding are 0.041442 and 0.202587 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.359
----------------------------------------
roc mean across methods is 0.501
prc mean across methods is 0.359


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66202783 0.33797217] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6695545 0.3304455]
before perturbation, mean and variance of data mean embedding are 0.042313 and 0.145667 
after perturbation, mean and variance of data mean embedding are 0.038316 and 0.199894 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.524
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.554
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.552
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.518
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.327

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.513
PRC on test generated data is 0.334

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.424
PRC on test generated data is 0.306
----------------------------------------
roc mean across methods is 0.508
prc mean across methods is 0.332


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66043738 0.33956262] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66374014 0.33625986]
before perturbation, mean and variance of data mean embedding are 0.042564 and 0.146233 
after perturbation, mean and variance of data mean embedding are 0.041630 and 0.198488 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.505
PRC on test generated data is 0.323

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.321
----------------------------------------
roc mean across methods is 0.501
prc mean across methods is 0.322


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66878728 0.33121272] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66899102 0.33100898]
before perturbation, mean and variance of data mean embedding are 0.042573 and 0.147268 
after perturbation, mean and variance of data mean embedding are 0.043789 and 0.201291 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.618
PRC on test generated data is 0.404

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.351

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.585
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.344

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.369
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.354


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51812284 0.5        0.5286514  0.50369412 0.52354131 0.50719567
 0.5300297  0.5116678  0.52887832 0.5007967  0.51606931 0.49472619]
Average PRC each method:  [0.34866413 0.33840445 0.35765273 0.34016597 0.35106814 0.34184814
 0.35545365 0.34553107 0.35700972 0.33883488 0.34767568 0.34031074]
Std ROC each method:  [0.0236735  0.         0.05730281 0.00776729 0.04708263 0.00824128
 0.0337248  0.02018205 0.04650165 0.00159341 0.02464322 0.04007129]
Std PRC each method:  [0.02160152 0.01409774 0.04482493 0.01558067 0.02986488 0.01327169
 0.02190313 0.0133412  0.03130743 0.01369922 0.02045224 0.02353568]
Average over repetitions across all methods
Average ROC:  0.5136144480671432
Average PRC:  0.34688494253080127
Std ROC:  0.013442596477771128
Variance PRC:  0.01738707926710836 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.5} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67995852 0.32004148]
before perturbation, mean and variance of data mean embedding are 0.042597 and 0.148552 
after perturbation, mean and variance of data mean embedding are 0.042843 and 0.199940 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.652
PRC on test generated data is 0.423

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.660
PRC on test generated data is 0.445

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.547
PRC on test generated data is 0.364

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.661
PRC on test generated data is 0.444

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.617
PRC on test generated data is 0.412

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.570
PRC on test generated data is 0.401

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.535
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.659
PRC on test generated data is 0.439

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.623
PRC on test generated data is 0.415
----------------------------------------
roc mean across methods is 0.585
prc mean across methods is 0.392


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68843642 0.31156358] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68498713 0.31501287]
before perturbation, mean and variance of data mean embedding are 0.042757 and 0.149511 
after perturbation, mean and variance of data mean embedding are 0.041583 and 0.200268 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.616
PRC on test generated data is 0.417

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.604
PRC on test generated data is 0.415

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.516
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.349

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.356

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.584
PRC on test generated data is 0.400
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.366


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67652708 0.32347292] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67538164 0.32461836]
before perturbation, mean and variance of data mean embedding are 0.042642 and 0.147969 
after perturbation, mean and variance of data mean embedding are 0.038780 and 0.198608 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.322

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.622
PRC on test generated data is 0.399

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.531
PRC on test generated data is 0.352

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.325

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.541
PRC on test generated data is 0.342
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.332


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6749904 0.3250096] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67516138 0.32483862]
before perturbation, mean and variance of data mean embedding are 0.042740 and 0.148254 
after perturbation, mean and variance of data mean embedding are 0.041837 and 0.196890 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.531
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.567
PRC on test generated data is 0.357

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.477
PRC on test generated data is 0.308

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.523
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.487
PRC on test generated data is 0.314

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.321

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.317
----------------------------------------
roc mean across methods is 0.508
prc mean across methods is 0.322


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68266945 0.31733055]
before perturbation, mean and variance of data mean embedding are 0.042767 and 0.149478 
after perturbation, mean and variance of data mean embedding are 0.043942 and 0.199806 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.540
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.594
PRC on test generated data is 0.396

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335
----------------------------------------
roc mean across methods is 0.511
prc mean across methods is 0.342


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54468164 0.5        0.5134659  0.52740236 0.55197855 0.53662899
 0.54433162 0.54071016 0.51047976 0.50350935 0.53710425 0.54967734]
Average PRC each method:  [0.35656263 0.33136201 0.3393175  0.35152335 0.36307206 0.35518191
 0.35998197 0.36160878 0.33724191 0.33687088 0.35505142 0.36190963]
Std ROC each method:  [0.05608334 0.         0.0269318  0.06687567 0.04699566 0.06258351
 0.05444866 0.04809469 0.01375935 0.01464778 0.06105876 0.04814229]
Std PRC each method:  [0.03563117 0.01128321 0.01245821 0.04889484 0.03929951 0.04522139
 0.04403346 0.03373828 0.01609352 0.01332722 0.0434535  0.03842784]
Average over repetitions across all methods
Average ROC:  0.5299974938162696
Average PRC:  0.3508070032942524
Std ROC:  0.02857841562387767
Variance PRC:  0.025167246422728776 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.525} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6936803 0.3063197] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69227394 0.30772606]
before perturbation, mean and variance of data mean embedding are 0.042542 and 0.149402 
after perturbation, mean and variance of data mean embedding are 0.042780 and 0.197661 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.583
PRC on test generated data is 0.371

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.625
PRC on test generated data is 0.402

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.572
PRC on test generated data is 0.366

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.650
PRC on test generated data is 0.431

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.593
PRC on test generated data is 0.384

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.326
----------------------------------------
roc mean across methods is 0.544
prc mean across methods is 0.353


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69628253 0.30371747] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69435759 0.30564241]
before perturbation, mean and variance of data mean embedding are 0.042730 and 0.150432 
after perturbation, mean and variance of data mean embedding are 0.041594 and 0.198287 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.532
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.629
PRC on test generated data is 0.416

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.520
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.517
PRC on test generated data is 0.341

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.337

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.641
PRC on test generated data is 0.414

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.489
PRC on test generated data is 0.330
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.350


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68736059 0.31263941] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68949723 0.31050277]
before perturbation, mean and variance of data mean embedding are 0.042605 and 0.148583 
after perturbation, mean and variance of data mean embedding are 0.038868 and 0.196237 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.552
PRC on test generated data is 0.338

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.554
PRC on test generated data is 0.338

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.521
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.516
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.544
PRC on test generated data is 0.334
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.321


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6866171 0.3133829] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68752053 0.31247947]
before perturbation, mean and variance of data mean embedding are 0.042615 and 0.149040 
after perturbation, mean and variance of data mean embedding are 0.041742 and 0.194677 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.593
PRC on test generated data is 0.363

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.420
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.543
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.530
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.546
PRC on test generated data is 0.338

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.490
PRC on test generated data is 0.305

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.309
----------------------------------------
roc mean across methods is 0.510
prc mean across methods is 0.316


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69107807 0.30892193] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68836729 0.31163271]
before perturbation, mean and variance of data mean embedding are 0.042407 and 0.148820 
after perturbation, mean and variance of data mean embedding are 0.043544 and 0.196455 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.622
PRC on test generated data is 0.383

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.521
PRC on test generated data is 0.330

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.537
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.647
PRC on test generated data is 0.407

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.516
PRC on test generated data is 0.330

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.542
PRC on test generated data is 0.343
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.338


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.55779584 0.5        0.54356446 0.49929258 0.54075695 0.54661154
 0.53766453 0.51483146 0.51725886 0.50117747 0.5481361  0.51491201]
Average PRC each method:  [0.35000003 0.31958406 0.34553974 0.32221763 0.34400522 0.34917548
 0.34110999 0.32769908 0.33225797 0.32063297 0.34882075 0.32841155]
Std ROC each method:  [0.04184145 0.         0.05433733 0.04816686 0.0482657  0.05439005
 0.05533295 0.01195631 0.01569199 0.00235495 0.05876256 0.02310872]
Std PRC each method:  [0.02590511 0.00856791 0.03325876 0.02834129 0.03727652 0.04203869
 0.03435807 0.00708609 0.00689228 0.01017957 0.04283008 0.01107102]
Average over repetitions across all methods
Average ROC:  0.5268334838586826
Average PRC:  0.3357878713749402
Std ROC:  0.01172610179695156
Variance PRC:  0.014814811470306527 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.55} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69953221 0.30046779] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69712046 0.30287954]
before perturbation, mean and variance of data mean embedding are 0.042561 and 0.150086 
after perturbation, mean and variance of data mean embedding are 0.042791 and 0.195510 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.540
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.618
PRC on test generated data is 0.375

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.545
PRC on test generated data is 0.328

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.589
PRC on test generated data is 0.353

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.306
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.320


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70349046 0.29650954] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70767249 0.29232751]
before perturbation, mean and variance of data mean embedding are 0.042563 and 0.150672 
after perturbation, mean and variance of data mean embedding are 0.041463 and 0.195735 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.552
PRC on test generated data is 0.346

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.581
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.618
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.315

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.316

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.523
PRC on test generated data is 0.333

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.416
PRC on test generated data is 0.290
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.328


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69701331 0.30298669] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6975097 0.3024903]
before perturbation, mean and variance of data mean embedding are 0.042729 and 0.150218 
after perturbation, mean and variance of data mean embedding are 0.039112 and 0.194861 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.533
PRC on test generated data is 0.317

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.642
PRC on test generated data is 0.378

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.526
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.551
PRC on test generated data is 0.327
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.313


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69629363 0.30370637] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69610948 0.30389052]
before perturbation, mean and variance of data mean embedding are 0.042510 and 0.149930 
after perturbation, mean and variance of data mean embedding are 0.041665 and 0.192691 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.502
PRC on test generated data is 0.300

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.552
PRC on test generated data is 0.324

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.627
PRC on test generated data is 0.420

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.525
PRC on test generated data is 0.317

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.518
PRC on test generated data is 0.317

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.301
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.315


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.697733 0.302267] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70103108 0.29896892]
before perturbation, mean and variance of data mean embedding are 0.042044 and 0.148911 
after perturbation, mean and variance of data mean embedding are 0.043144 and 0.193875 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.592
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.620
PRC on test generated data is 0.373

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.624
PRC on test generated data is 0.370

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.595
PRC on test generated data is 0.350

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.302
----------------------------------------
roc mean across methods is 0.536
prc mean across methods is 0.322


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52690517 0.5        0.54760293 0.53388822 0.52734629 0.51679818
 0.57730982 0.50912914 0.50899292 0.50446842 0.54500721 0.49449407]
Average PRC each method:  [0.31887517 0.30478589 0.33269223 0.3226263  0.31908697 0.31359754
 0.35848945 0.31003761 0.31207185 0.30831791 0.33061917 0.30541127]
Std ROC each method:  [0.036165   0.         0.05830621 0.04849444 0.02343859 0.0323249
 0.06359213 0.01002341 0.00965034 0.01016508 0.03899294 0.04340156]
Std PRC each method:  [0.01958563 0.00600791 0.03434021 0.025937   0.01539825 0.02254658
 0.04641937 0.00664039 0.00820413 0.00666912 0.01989151 0.01231292]
Average over repetitions across all methods
Average ROC:  0.5243285310424876
Average PRC:  0.31971761229108353
Std ROC:  0.00659400752488513
Variance PRC:  0.005013928793685601 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.575} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71154517 0.28845483] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70946031 0.29053969]
before perturbation, mean and variance of data mean embedding are 0.042568 and 0.151852 
after perturbation, mean and variance of data mean embedding are 0.042791 and 0.194429 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.304

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.305

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.566
PRC on test generated data is 0.334

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.525
PRC on test generated data is 0.315

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.615
PRC on test generated data is 0.371

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.541
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.304

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.303
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.316


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71294036 0.28705964] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70994045 0.29005955]
before perturbation, mean and variance of data mean embedding are 0.042412 and 0.151314 
after perturbation, mean and variance of data mean embedding are 0.041347 and 0.193829 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.564
PRC on test generated data is 0.341

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.620
PRC on test generated data is 0.385

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.529
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.592
PRC on test generated data is 0.373

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.548
PRC on test generated data is 0.339

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.310

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.566
PRC on test generated data is 0.342
----------------------------------------
roc mean across methods is 0.535
prc mean across methods is 0.329


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70735961 0.29264039] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70373525 0.29626475]
before perturbation, mean and variance of data mean embedding are 0.042193 and 0.150172 
after perturbation, mean and variance of data mean embedding are 0.038687 and 0.192429 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.502
PRC on test generated data is 0.295

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.618
PRC on test generated data is 0.375

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.556
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.302
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.305


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70561563 0.29438437] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7029453 0.2970547]
before perturbation, mean and variance of data mean embedding are 0.042673 and 0.151538 
after perturbation, mean and variance of data mean embedding are 0.041854 and 0.191649 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.520
PRC on test generated data is 0.298

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.307

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.579
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.525
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.297

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.497
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.291
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.298


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70666202 0.29333798] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70774736 0.29225264]
before perturbation, mean and variance of data mean embedding are 0.042207 and 0.150267 
after perturbation, mean and variance of data mean embedding are 0.043274 and 0.192559 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.513
PRC on test generated data is 0.310

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.556
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.537
PRC on test generated data is 0.311
----------------------------------------
roc mean across methods is 0.509
prc mean across methods is 0.298


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51997522 0.5        0.5        0.49973622 0.56780759 0.52158586
 0.55578966 0.52408528 0.52139187 0.49995777 0.50105214 0.52459481]
Average PRC each method:  [0.30962557 0.29715216 0.29715216 0.29737449 0.3387646  0.30835155
 0.32832837 0.31467187 0.31175591 0.2978877  0.29789422 0.30979506]
Std ROC each method:  [0.02321553 0.         0.         0.00130547 0.0469524  0.02085533
 0.039568   0.03500813 0.01972412 0.00174514 0.00110933 0.02437265]
Std PRC each method:  [0.01669001 0.00671758 0.00671758 0.00727262 0.03661634 0.01071189
 0.02519779 0.02975822 0.02059365 0.00783672 0.00621643 0.01743181]
Average over repetitions across all methods
Average ROC:  0.5196647014496706
Average PRC:  0.309062803325572
Std ROC:  0.008665340493073593
Variance PRC:  0.011806291612096651 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.6} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72284264 0.27715736] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71976927 0.28023073]
before perturbation, mean and variance of data mean embedding are 0.042439 and 0.152594 
after perturbation, mean and variance of data mean embedding are 0.042656 and 0.192634 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.570
PRC on test generated data is 0.333

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.581
PRC on test generated data is 0.341

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.307


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71844332 0.28155668] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71775716 0.28224284]
before perturbation, mean and variance of data mean embedding are 0.042784 and 0.152915 
after perturbation, mean and variance of data mean embedding are 0.041750 and 0.192883 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.581
PRC on test generated data is 0.330

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290
----------------------------------------
roc mean across methods is 0.507
prc mean across methods is 0.294


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71878173 0.28121827] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71750295 0.28249705]
before perturbation, mean and variance of data mean embedding are 0.042651 and 0.152988 
after perturbation, mean and variance of data mean embedding are 0.039249 and 0.192372 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.513
PRC on test generated data is 0.297

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.544
PRC on test generated data is 0.315

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.524
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.520
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.538
PRC on test generated data is 0.310
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.297


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71404399 0.28595601] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71326632 0.28673368]
before perturbation, mean and variance of data mean embedding are 0.042336 and 0.151613 
after perturbation, mean and variance of data mean embedding are 0.041541 and 0.189569 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.513
PRC on test generated data is 0.285

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.588
PRC on test generated data is 0.321

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.283

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.527
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.282
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.286


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.7143824 0.2856176] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71467172 0.28532828]
before perturbation, mean and variance of data mean embedding are 0.042629 and 0.152111 
after perturbation, mean and variance of data mean embedding are 0.043664 and 0.191722 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.513
PRC on test generated data is 0.288

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.286

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.512
PRC on test generated data is 0.287

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.531
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.283

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.306
----------------------------------------
roc mean across methods is 0.510
prc mean across methods is 0.287


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52178738 0.5        0.5        0.5        0.54490735 0.51761014
 0.51244779 0.5005879  0.51231208 0.5        0.50034144 0.51779362]
Average PRC each method:  [0.29871522 0.2887135  0.2887135  0.2887135  0.31060372 0.297293
 0.29473155 0.28907313 0.29825288 0.2887135  0.28914234 0.29781786]
Std ROC each method:  [0.02461525 0.         0.         0.         0.0354924  0.03194432
 0.01129078 0.00081674 0.01183589 0.         0.0005443  0.02065629]
Std PRC each method:  [0.0177267  0.00756049 0.00756049 0.00756049 0.01558346 0.02214753
 0.00573101 0.0075144  0.007208   0.00756049 0.00715002 0.0104502 ]
Average over repetitions across all methods
Average ROC:  0.5106489752838925
Average PRC:  0.29420697382025307
Std ROC:  0.0022163902232798707
Variance PRC:  0.007471798214577511 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.625} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.73085771 0.26914229] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73122705 0.26877295]
before perturbation, mean and variance of data mean embedding are 0.042559 and 0.153600 
after perturbation, mean and variance of data mean embedding are 0.042769 and 0.191407 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.588
PRC on test generated data is 0.334

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.539
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.552
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.300


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72724285 0.27275715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72988826 0.27011174]
before perturbation, mean and variance of data mean embedding are 0.042736 and 0.153908 
after perturbation, mean and variance of data mean embedding are 0.041732 and 0.191608 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.583
PRC on test generated data is 0.334

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.525
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.513
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.288

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.564
PRC on test generated data is 0.319
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.293


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72954321 0.27045679] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72904812 0.27095188]
before perturbation, mean and variance of data mean embedding are 0.042657 and 0.154099 
after perturbation, mean and variance of data mean embedding are 0.039354 and 0.191325 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.508
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.520
PRC on test generated data is 0.302

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.573
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.424
PRC on test generated data is 0.272
----------------------------------------
roc mean across methods is 0.505
prc mean across methods is 0.295


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72855734 0.27144266] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72676471 0.27323529]
before perturbation, mean and variance of data mean embedding are 0.042741 and 0.153552 
after perturbation, mean and variance of data mean embedding are 0.041969 and 0.189120 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.505
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.546
PRC on test generated data is 0.313

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.591
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.288

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.288
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.294


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72034177 0.27965823] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71983098 0.28016902]
before perturbation, mean and variance of data mean embedding are 0.042606 and 0.152699 
after perturbation, mean and variance of data mean embedding are 0.043612 and 0.190164 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.523
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.267
----------------------------------------
roc mean across methods is 0.504
prc mean across methods is 0.270


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.50714854 0.5        0.5        0.5        0.54744718 0.51860126
 0.54587017 0.50944455 0.5022683  0.50053476 0.50180517 0.49846556]
Average PRC each method:  [0.28721003 0.28367816 0.28367816 0.28367816 0.30995789 0.2921411
 0.31001598 0.29278244 0.28550499 0.28444117 0.2849411  0.28772268]
Std ROC each method:  [0.00823288 0.         0.         0.         0.0342453  0.01582495
 0.03468747 0.00966176 0.00297706 0.00106952 0.00298712 0.04455787]
Std PRC each method:  [0.00496816 0.00857964 0.00857964 0.00857964 0.02452787 0.00951906
 0.02792937 0.01770227 0.0101189  0.00896563 0.00886449 0.01820424]
Average over repetitions across all methods
Average ROC:  0.5109654577812714
Average PRC:  0.2904793203646274
Std ROC:  0.0055265597723609585
Variance PRC:  0.01072351044375677 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.4} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63422222 0.36577778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63242284 0.36757716]
before perturbation, mean and variance of data mean embedding are 0.024275 and 0.110879 
after perturbation, mean and variance of data mean embedding are 0.023359 and 0.188993 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.585
PRC on test generated data is 0.449

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.568
PRC on test generated data is 0.446

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.637
PRC on test generated data is 0.495

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.618
PRC on test generated data is 0.462

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.416

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.641
PRC on test generated data is 0.475

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.531
PRC on test generated data is 0.410

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.582
PRC on test generated data is 0.460

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.493
PRC on test generated data is 0.387
----------------------------------------
roc mean across methods is 0.558
prc mean across methods is 0.432


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63377778 0.36622222] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63851388 0.36148612]
before perturbation, mean and variance of data mean embedding are 0.024126 and 0.110439 
after perturbation, mean and variance of data mean embedding are 0.022858 and 0.187835 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.522
PRC on test generated data is 0.401

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.548
PRC on test generated data is 0.417

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.611
PRC on test generated data is 0.455

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.634
PRC on test generated data is 0.484

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.412

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.556
PRC on test generated data is 0.429

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.522
PRC on test generated data is 0.410

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.556
PRC on test generated data is 0.419
----------------------------------------
roc mean across methods is 0.540
prc mean across methods is 0.415


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.616 0.384] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61608156 0.38391844]
before perturbation, mean and variance of data mean embedding are 0.024036 and 0.109358 
after perturbation, mean and variance of data mean embedding are 0.020289 and 0.187037 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.515
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.348

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.605
PRC on test generated data is 0.404

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.617
PRC on test generated data is 0.425

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.351

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.569
PRC on test generated data is 0.401

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.365
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.369


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.61822222 0.38177778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62537983 0.37462017]
before perturbation, mean and variance of data mean embedding are 0.024257 and 0.110256 
after perturbation, mean and variance of data mean embedding are 0.023241 and 0.187133 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.524
PRC on test generated data is 0.368

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.491
PRC on test generated data is 0.351

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.576
PRC on test generated data is 0.421

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.561
PRC on test generated data is 0.392

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.532
PRC on test generated data is 0.371

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.565
PRC on test generated data is 0.392

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.543
PRC on test generated data is 0.387

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.496
PRC on test generated data is 0.352

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.538
PRC on test generated data is 0.377

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.354
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.373


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63022222 0.36977778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63195334 0.36804666]
before perturbation, mean and variance of data mean embedding are 0.024251 and 0.110782 
after perturbation, mean and variance of data mean embedding are 0.024128 and 0.190094 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.510
PRC on test generated data is 0.393

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.393

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.559
PRC on test generated data is 0.417

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.401

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.603
PRC on test generated data is 0.437

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.496
PRC on test generated data is 0.380

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.623
PRC on test generated data is 0.456

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.382

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.552
PRC on test generated data is 0.435

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.599
PRC on test generated data is 0.444
----------------------------------------
roc mean across methods is 0.539
prc mean across methods is 0.408


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53121689 0.5        0.5        0.51351054 0.56390093 0.56319983
 0.60078003 0.52578628 0.57990194 0.52404349 0.53442066 0.53679854]
Average PRC each method:  [0.39515981 0.37264249 0.37264249 0.38563071 0.4196391  0.41027192
 0.4358153  0.39023314 0.42366138 0.39092745 0.40203822 0.39403945]
Std ROC each method:  [0.02746363 0.         0.         0.02762043 0.04441772 0.03972054
 0.03562313 0.02414772 0.04350688 0.02585853 0.03131882 0.03857928]
Std PRC each method:  [0.03042005 0.01821713 0.01821713 0.03552476 0.04644837 0.02247673
 0.03834926 0.02351917 0.03926761 0.02198075 0.04019551 0.03358186]
Average over repetitions across all methods
Average ROC:  0.5394632599564604
Average PRC:  0.3993917887935062
Std ROC:  0.010647785619966404
Variance PRC:  0.024674211067280388 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.425} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6471343 0.3528657] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64588196 0.35411804]
before perturbation, mean and variance of data mean embedding are 0.024163 and 0.111422 
after perturbation, mean and variance of data mean embedding are 0.023282 and 0.184651 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.517
PRC on test generated data is 0.386

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.542
PRC on test generated data is 0.415

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.638
PRC on test generated data is 0.473

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.530
PRC on test generated data is 0.395

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.516
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.374

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.609
PRC on test generated data is 0.457

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.485
PRC on test generated data is 0.368
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.396


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64927288 0.35072712] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64453878 0.35546122]
before perturbation, mean and variance of data mean embedding are 0.024147 and 0.111406 
after perturbation, mean and variance of data mean embedding are 0.022927 and 0.183737 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.527
PRC on test generated data is 0.392

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.379

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.567
PRC on test generated data is 0.420

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.496
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.587
PRC on test generated data is 0.437

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.531
PRC on test generated data is 0.398

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.518
PRC on test generated data is 0.397

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.561
PRC on test generated data is 0.411
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.394


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63088109 0.36911891] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63523232 0.36476768]
before perturbation, mean and variance of data mean embedding are 0.024141 and 0.110157 
after perturbation, mean and variance of data mean embedding are 0.020536 and 0.182923 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.523
PRC on test generated data is 0.350

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.632
PRC on test generated data is 0.422

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.629
PRC on test generated data is 0.411

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.552
PRC on test generated data is 0.370

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.338

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.353
----------------------------------------
roc mean across methods is 0.534
prc mean across methods is 0.356


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63473054 0.36526946] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63503087 0.36496913]
before perturbation, mean and variance of data mean embedding are 0.024220 and 0.110956 
after perturbation, mean and variance of data mean embedding are 0.023241 and 0.182971 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.552
PRC on test generated data is 0.378

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.533
PRC on test generated data is 0.367

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.524
PRC on test generated data is 0.357

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.545
PRC on test generated data is 0.370

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.599
PRC on test generated data is 0.414

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.557
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.345

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.545
PRC on test generated data is 0.378

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.345
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.365


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64499572 0.35500428] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64515982 0.35484018]
before perturbation, mean and variance of data mean embedding are 0.024159 and 0.111378 
after perturbation, mean and variance of data mean embedding are 0.024041 and 0.185736 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.566
PRC on test generated data is 0.427

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.533
PRC on test generated data is 0.406

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.523
PRC on test generated data is 0.384

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.555
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.537
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.570
PRC on test generated data is 0.409

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.529
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.369

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.521
PRC on test generated data is 0.393

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.566
PRC on test generated data is 0.407
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.392


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53716791 0.5        0.5        0.52135661 0.57668728 0.52090552
 0.55303795 0.54547436 0.53695024 0.50401993 0.53507108 0.52925211]
Average PRC each method:  [0.38654323 0.36051844 0.36051844 0.38043192 0.41110206 0.37278899
 0.39353282 0.38929525 0.38398903 0.36450039 0.38865424 0.37664192]
Std ROC each method:  [0.01881164 0.         0.         0.01807318 0.05001442 0.02421924
 0.05226884 0.02847455 0.01519128 0.00717967 0.04039162 0.03236349]
Std PRC each method:  [0.02491298 0.01690335 0.01690335 0.02822271 0.03928666 0.0208543
 0.01599773 0.0326244  0.00872834 0.0209615  0.03920107 0.02745277]
Average over repetitions across all methods
Average ROC:  0.5299935831753525
Average PRC:  0.3807097275156992
Std ROC:  0.003573483475493065
Variance PRC:  0.01655870151018024 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.45} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66075845 0.33924155] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65940439 0.34059561]
before perturbation, mean and variance of data mean embedding are 0.024194 and 0.112309 
after perturbation, mean and variance of data mean embedding are 0.023345 and 0.181015 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.365

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.370

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.541
PRC on test generated data is 0.386

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.543
PRC on test generated data is 0.383

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.365

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.555
PRC on test generated data is 0.412

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.552
PRC on test generated data is 0.404

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.564
PRC on test generated data is 0.419

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.572
PRC on test generated data is 0.409

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.480
PRC on test generated data is 0.354
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.383


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66158285 0.33841715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66675557 0.33324443]
before perturbation, mean and variance of data mean embedding are 0.024133 and 0.111928 
after perturbation, mean and variance of data mean embedding are 0.022957 and 0.179838 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.508
PRC on test generated data is 0.368

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.367

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.483
PRC on test generated data is 0.357

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.634
PRC on test generated data is 0.475

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.554
PRC on test generated data is 0.405

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.584
PRC on test generated data is 0.432

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.368

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.371

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.565
PRC on test generated data is 0.398
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.386


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65127782 0.34872218] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64726224 0.35273776]
before perturbation, mean and variance of data mean embedding are 0.024154 and 0.111582 
after perturbation, mean and variance of data mean embedding are 0.020679 and 0.179549 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.493
PRC on test generated data is 0.339

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.545
PRC on test generated data is 0.362

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.341

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.548
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.612
PRC on test generated data is 0.410

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.345

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.516
PRC on test generated data is 0.348
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.352


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64715581 0.35284419] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64651324 0.35348676]
before perturbation, mean and variance of data mean embedding are 0.024323 and 0.112047 
after perturbation, mean and variance of data mean embedding are 0.023380 and 0.179451 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.560
PRC on test generated data is 0.376

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.536
PRC on test generated data is 0.357

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.611
PRC on test generated data is 0.394

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.514
PRC on test generated data is 0.338

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.338

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.564
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.542
PRC on test generated data is 0.358

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.600
PRC on test generated data is 0.406

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.335
----------------------------------------
roc mean across methods is 0.538
prc mean across methods is 0.356


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65787304 0.34212696] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66165939 0.33834061]
before perturbation, mean and variance of data mean embedding are 0.024235 and 0.112369 
after perturbation, mean and variance of data mean embedding are 0.024121 and 0.182074 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.557
PRC on test generated data is 0.387

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.544
PRC on test generated data is 0.405

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.597
PRC on test generated data is 0.414

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.356

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.532
PRC on test generated data is 0.394

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.570
PRC on test generated data is 0.396
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.375


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52609957 0.5        0.5        0.51710147 0.55544584 0.50995541
 0.54045322 0.54914157 0.54123101 0.52210944 0.5435525  0.52801772]
Average PRC each method:  [0.36718214 0.35043228 0.35043228 0.36744441 0.38259288 0.35598387
 0.38114667 0.38542081 0.38150172 0.36815374 0.385112   0.36607811]
Std ROC each method:  [0.02652823 0.         0.         0.01925996 0.04554075 0.01643228
 0.04974069 0.03670078 0.0328578  0.02612601 0.03708517 0.03439837]
Std PRC each method:  [0.01565382 0.01307848 0.01307848 0.0214822  0.02110237 0.01837513
 0.0483867  0.03007888 0.03252433 0.02683338 0.0240569  0.02596644]
Average over repetitions across all methods
Average ROC:  0.5277589796190796
Average PRC:  0.3701234086258678
Std ROC:  0.006012575914284623
Variance PRC:  0.014041423236051488 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.475} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67157058 0.32842942] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66898819 0.33101181]
before perturbation, mean and variance of data mean embedding are 0.024244 and 0.113237 
after perturbation, mean and variance of data mean embedding are 0.023425 and 0.177707 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.349

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.571
PRC on test generated data is 0.392

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.527
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.601
PRC on test generated data is 0.419

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.546
PRC on test generated data is 0.371

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.353

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.537
PRC on test generated data is 0.393

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.350
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.366


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67673956 0.32326044] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67293612 0.32706388]
before perturbation, mean and variance of data mean embedding are 0.024384 and 0.113793 
after perturbation, mean and variance of data mean embedding are 0.023249 and 0.177081 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.516
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.641
PRC on test generated data is 0.439

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.598
PRC on test generated data is 0.419

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.529
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.359

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.364

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.570
PRC on test generated data is 0.396
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.380


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66202783 0.33797217] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65576363 0.34423637]
before perturbation, mean and variance of data mean embedding are 0.024284 and 0.112772 
after perturbation, mean and variance of data mean embedding are 0.020933 and 0.176448 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.536
PRC on test generated data is 0.346

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.550
PRC on test generated data is 0.348

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.330
----------------------------------------
roc mean across methods is 0.509
prc mean across methods is 0.329


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66043738 0.33956262] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6622721 0.3377279]
before perturbation, mean and variance of data mean embedding are 0.024158 and 0.112403 
after perturbation, mean and variance of data mean embedding are 0.023248 and 0.175852 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.522
PRC on test generated data is 0.338

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.523
PRC on test generated data is 0.338

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.648
PRC on test generated data is 0.419

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.518
PRC on test generated data is 0.329

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.589
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.595
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.515
PRC on test generated data is 0.333

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.573
PRC on test generated data is 0.377

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.491
PRC on test generated data is 0.317
----------------------------------------
roc mean across methods is 0.539
prc mean across methods is 0.348


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66878728 0.33121272] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66692185 0.33307815]
before perturbation, mean and variance of data mean embedding are 0.024260 and 0.112961 
after perturbation, mean and variance of data mean embedding are 0.024150 and 0.178485 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.536
PRC on test generated data is 0.358

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.344

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.494
PRC on test generated data is 0.340

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.579
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.526
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.547
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.521
PRC on test generated data is 0.361

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.573
PRC on test generated data is 0.382
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.355


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52202264 0.5        0.5        0.50596749 0.58077279 0.52345559
 0.54849381 0.53086624 0.53879666 0.50436883 0.52761071 0.53058191]
Average PRC each method:  [0.35245821 0.33840445 0.33840445 0.34290269 0.38782992 0.35011096
 0.36887413 0.35793273 0.36664691 0.3418326  0.36381621 0.3551412 ]
Std ROC each method:  [0.01350584 0.         0.         0.00847396 0.05795523 0.02907653
 0.04259148 0.03348622 0.03154066 0.00611441 0.02615647 0.03408193]
Std PRC each method:  [0.01255031 0.01409774 0.01409774 0.01147842 0.03854577 0.02309969
 0.04200502 0.02081167 0.02140152 0.0125808  0.0226048  0.02986164]
Average over repetitions across all methods
Average ROC:  0.526078056528668
Average PRC:  0.35536287155858537
Std ROC:  0.010287660976097407
Variance PRC:  0.016937478489744136 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.5} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68434072 0.31565928]
before perturbation, mean and variance of data mean embedding are 0.024402 and 0.114547 
after perturbation, mean and variance of data mean embedding are 0.023610 and 0.174992 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.350

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.539
PRC on test generated data is 0.354

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.640
PRC on test generated data is 0.422

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.342

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.514
PRC on test generated data is 0.349

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.339
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.348


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68843642 0.31156358] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68564057 0.31435943]
before perturbation, mean and variance of data mean embedding are 0.024280 and 0.114611 
after perturbation, mean and variance of data mean embedding are 0.023184 and 0.173998 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.578
PRC on test generated data is 0.398

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.349

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.639
PRC on test generated data is 0.434

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.564
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.569
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.378

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.350

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.556
PRC on test generated data is 0.377
----------------------------------------
roc mean across methods is 0.539
prc mean across methods is 0.372


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67652708 0.32347292] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67923459 0.32076541]
before perturbation, mean and variance of data mean embedding are 0.024267 and 0.113588 
after perturbation, mean and variance of data mean embedding are 0.021029 and 0.173411 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.504
PRC on test generated data is 0.323

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.531
PRC on test generated data is 0.335

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.638
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.542
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.528
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.525
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.328

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.326

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.327
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.336


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6749904 0.3250096] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67335537 0.32664463]
before perturbation, mean and variance of data mean embedding are 0.024366 and 0.113989 
after perturbation, mean and variance of data mean embedding are 0.023487 and 0.173349 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.317

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.613
PRC on test generated data is 0.385

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.528
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.488
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.545
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.549
PRC on test generated data is 0.360

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.316
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.331


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68571204 0.31428796]
before perturbation, mean and variance of data mean embedding are 0.024365 and 0.114392 
after perturbation, mean and variance of data mean embedding are 0.024259 and 0.175810 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.540
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.342

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.344

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.552
PRC on test generated data is 0.366

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.572
PRC on test generated data is 0.375
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.346


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.5243754  0.5        0.5        0.50638701 0.56803637 0.55078618
 0.54813545 0.52665936 0.51994545 0.50305066 0.5154475  0.5295317 ]
Average PRC each method:  [0.34576541 0.33136201 0.33136201 0.33600873 0.37037109 0.36078131
 0.36123729 0.35275106 0.34783607 0.33409414 0.34159305 0.34704086]
Std ROC each method:  [0.03062408 0.         0.         0.00811147 0.04818656 0.04807135
 0.05392698 0.01904156 0.01590762 0.00379931 0.01900667 0.02892518]
Std PRC each method:  [0.02926052 0.01128321 0.01128321 0.01420528 0.0358428  0.02910393
 0.03775408 0.01454489 0.00915337 0.01090278 0.01756633 0.0250044 ]
Average over repetitions across all methods
Average ROC:  0.5243629236437035
Average PRC:  0.3466835851116331
Std ROC:  0.007773989004517545
Variance PRC:  0.014210019961125314 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.525} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6936803 0.3063197] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69201219 0.30798781]
before perturbation, mean and variance of data mean embedding are 0.024216 and 0.114905 
after perturbation, mean and variance of data mean embedding are 0.023450 and 0.172016 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.519
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.327

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.329

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.623
PRC on test generated data is 0.409

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.492
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.327

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.525
PRC on test generated data is 0.343

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.486
PRC on test generated data is 0.320
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.335


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69628253 0.30371747] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69942165 0.30057835]
before perturbation, mean and variance of data mean embedding are 0.024372 and 0.115555 
after perturbation, mean and variance of data mean embedding are 0.023311 and 0.171436 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.571
PRC on test generated data is 0.371

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.573
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.491
PRC on test generated data is 0.332

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.553
PRC on test generated data is 0.359
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.341


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68736059 0.31263941] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68307577 0.31692423]
before perturbation, mean and variance of data mean embedding are 0.024306 and 0.114459 
after perturbation, mean and variance of data mean embedding are 0.021173 and 0.170772 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.567
PRC on test generated data is 0.346

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.518
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.558
PRC on test generated data is 0.339

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.541
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.319

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.312

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.522
PRC on test generated data is 0.324

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.323
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.323


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6866171 0.3133829] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69049093 0.30950907]
before perturbation, mean and variance of data mean embedding are 0.024251 and 0.114178 
after perturbation, mean and variance of data mean embedding are 0.023400 and 0.170364 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.535
PRC on test generated data is 0.326

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.516
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.634
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.557
PRC on test generated data is 0.351

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.310

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.314
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.323


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69107807 0.30892193] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6882081 0.3117919]
before perturbation, mean and variance of data mean embedding are 0.024223 and 0.114690 
after perturbation, mean and variance of data mean embedding are 0.024120 and 0.172744 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.615
PRC on test generated data is 0.384

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.327

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.557
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.537
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.582
PRC on test generated data is 0.373

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.575
PRC on test generated data is 0.362
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.339


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54009601 0.5        0.5        0.50613554 0.53412983 0.51752675
 0.58151378 0.51592059 0.50730873 0.49901187 0.52587709 0.52990135]
Average PRC each method:  [0.34127433 0.31958406 0.31958406 0.32324231 0.33684099 0.32830504
 0.3681791  0.33113023 0.32388042 0.32003187 0.33640784 0.33544196]
Std ROC each method:  [0.04447041 0.         0.         0.00703571 0.02793729 0.02079492
 0.04057594 0.02190287 0.00720623 0.00410398 0.03002795 0.03150901]
Std PRC each method:  [0.02465138 0.00856791 0.00856791 0.00769577 0.018015   0.01316055
 0.02785942 0.0112005  0.00461995 0.0085574  0.02142137 0.02036033]
Average over repetitions across all methods
Average ROC:  0.5214517946997582
Average PRC:  0.3319918495164242
Std ROC:  0.006555935900751049
Variance PRC:  0.007717518588552733 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.55} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69953221 0.30046779] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70041829 0.29958171]
before perturbation, mean and variance of data mean embedding are 0.024388 and 0.116126 
after perturbation, mean and variance of data mean embedding are 0.023647 and 0.169837 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.553
PRC on test generated data is 0.338

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.560
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.310

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.486
PRC on test generated data is 0.301
----------------------------------------
roc mean across methods is 0.509
prc mean across methods is 0.312


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70349046 0.29650954] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70681513 0.29318487]
before perturbation, mean and variance of data mean embedding are 0.024332 and 0.115849 
after perturbation, mean and variance of data mean embedding are 0.023306 and 0.168651 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.650
PRC on test generated data is 0.403

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.316

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.591
PRC on test generated data is 0.364

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.324

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.525
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.496
PRC on test generated data is 0.315

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.537
PRC on test generated data is 0.339

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.553
PRC on test generated data is 0.341
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.335


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69701331 0.30298669] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69622147 0.30377853]
before perturbation, mean and variance of data mean embedding are 0.024377 and 0.115743 
after perturbation, mean and variance of data mean embedding are 0.021344 and 0.168683 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.505
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.535
PRC on test generated data is 0.317

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.532
PRC on test generated data is 0.315

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.312

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.310
----------------------------------------
roc mean across methods is 0.509
prc mean across methods is 0.305


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69629363 0.30370637] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69575766 0.30424234]
before perturbation, mean and variance of data mean embedding are 0.024305 and 0.115215 
after perturbation, mean and variance of data mean embedding are 0.023482 and 0.168138 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.299

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.584
PRC on test generated data is 0.341

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.567
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.308

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.304

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.301
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.307


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.697733 0.302267] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69654097 0.30345903]
before perturbation, mean and variance of data mean embedding are 0.024211 and 0.115142 
after perturbation, mean and variance of data mean embedding are 0.024112 and 0.170068 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.521
PRC on test generated data is 0.312

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.304

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.583
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.536
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.521
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.304

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.304

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.588
PRC on test generated data is 0.352
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.315


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53515535 0.5        0.5        0.50026346 0.55264529 0.50384251
 0.5505234  0.51428406 0.51054599 0.50052026 0.50907027 0.53053964]
Average PRC each method:  [0.32459024 0.30478589 0.30478589 0.30528374 0.33244094 0.30651071
 0.33341846 0.31418576 0.31241988 0.30608998 0.31128996 0.32117973]
Std ROC each method:  [0.0581008  0.         0.         0.00084522 0.03324382 0.00710138
 0.02574924 0.01426824 0.00681591 0.00257196 0.01388273 0.03605793]
Std PRC each method:  [0.03960558 0.00600791 0.00600791 0.006092   0.02120311 0.00897985
 0.01396853 0.01211137 0.00797935 0.0054582  0.01403885 0.02141412]
Average over repetitions across all methods
Average ROC:  0.5172825194002856
Average PRC:  0.31474843157528076
Std ROC:  0.00896884674133932
Variance PRC:  0.010437807875255748 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.575} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71154517 0.28845483] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71247332 0.28752668]
before perturbation, mean and variance of data mean embedding are 0.024258 and 0.116212 
after perturbation, mean and variance of data mean embedding are 0.023539 and 0.167150 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.493
PRC on test generated data is 0.303

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.560
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.580
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.475
PRC on test generated data is 0.295
----------------------------------------
roc mean across methods is 0.510
prc mean across methods is 0.310


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71294036 0.28705964] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70952143 0.29047857]
before perturbation, mean and variance of data mean embedding are 0.024273 and 0.116668 
after perturbation, mean and variance of data mean embedding are 0.023278 and 0.166475 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.573
PRC on test generated data is 0.341

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.608
PRC on test generated data is 0.365

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.576
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.533
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.315

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.430
PRC on test generated data is 0.284
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.319


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70735961 0.29264039] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71236804 0.28763196]
before perturbation, mean and variance of data mean embedding are 0.024104 and 0.115756 
after perturbation, mean and variance of data mean embedding are 0.021164 and 0.165980 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.569
PRC on test generated data is 0.327

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.657
PRC on test generated data is 0.387

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.523
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.528
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.560
PRC on test generated data is 0.322
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.310


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70561563 0.29438437] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71280096 0.28719904]
before perturbation, mean and variance of data mean embedding are 0.024322 and 0.116448 
after perturbation, mean and variance of data mean embedding are 0.023524 and 0.166250 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.503
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.530
PRC on test generated data is 0.316

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.527
PRC on test generated data is 0.302

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.516
PRC on test generated data is 0.297

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.622
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.718
PRC on test generated data is 0.471

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290
----------------------------------------
roc mean across methods is 0.536
prc mean across methods is 0.316


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70666202 0.29333798] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70775706 0.29224294]
before perturbation, mean and variance of data mean embedding are 0.024259 and 0.116144 
after perturbation, mean and variance of data mean embedding are 0.024163 and 0.167902 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.293

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.557
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.296

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.298

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.592
PRC on test generated data is 0.345
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.300


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.5289175  0.5        0.5        0.50591786 0.55760078 0.53453743
 0.54884954 0.52310379 0.50753897 0.49981878 0.54504922 0.51141156]
Average PRC each method:  [0.31098911 0.29715216 0.29715216 0.30238337 0.33014449 0.3137752
 0.32691092 0.3130823  0.30164489 0.29710084 0.33467294 0.30708396]
Std ROC each method:  [0.03429001 0.         0.         0.01183572 0.06400684 0.02779772
 0.04120402 0.02938156 0.00625074 0.00036244 0.08662012 0.05801582]
Std PRC each method:  [0.01996181 0.00671758 0.00671758 0.00873322 0.03829326 0.01700016
 0.02675065 0.02427416 0.00721668 0.00675679 0.06816619 0.02300539]
Average over repetitions across all methods
Average ROC:  0.5218954519208946
Average PRC:  0.31100769466238576
Std ROC:  0.009904992855319506
Variance PRC:  0.006560843773934426 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.6} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72284264 0.27715736] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7250311 0.2749689]
before perturbation, mean and variance of data mean embedding are 0.024262 and 0.117308 
after perturbation, mean and variance of data mean embedding are 0.023565 and 0.165409 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.592
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.618
PRC on test generated data is 0.387

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.578
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.584
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.614
PRC on test generated data is 0.386

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.495
PRC on test generated data is 0.299
----------------------------------------
roc mean across methods is 0.542
prc mean across methods is 0.329


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71844332 0.28155668] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71895041 0.28104959]
before perturbation, mean and variance of data mean embedding are 0.024267 and 0.117105 
after perturbation, mean and variance of data mean embedding are 0.023301 and 0.164177 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.529
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.619
PRC on test generated data is 0.354

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.425
PRC on test generated data is 0.267
----------------------------------------
roc mean across methods is 0.509
prc mean across methods is 0.297


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71878173 0.28121827] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72060539 0.27939461]
before perturbation, mean and variance of data mean embedding are 0.024349 and 0.117389 
after perturbation, mean and variance of data mean embedding are 0.021496 and 0.164562 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.577
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.618
PRC on test generated data is 0.370

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.529
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.290
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.303


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71404399 0.28595601] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71137968 0.28862032]
before perturbation, mean and variance of data mean embedding are 0.024337 and 0.116807 
after perturbation, mean and variance of data mean embedding are 0.023563 and 0.163965 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.594
PRC on test generated data is 0.334

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.522
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.567
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.281

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.279
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.291


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.7143824 0.2856176] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71185596 0.28814404]
before perturbation, mean and variance of data mean embedding are 0.024349 and 0.116982 
after perturbation, mean and variance of data mean embedding are 0.024256 and 0.165881 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.535
PRC on test generated data is 0.296

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.525
PRC on test generated data is 0.304

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.635
PRC on test generated data is 0.361

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.536
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.283

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.285

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.284

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.533
PRC on test generated data is 0.315

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.586
PRC on test generated data is 0.328
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.300


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54656231 0.5        0.5        0.5051291  0.61687376 0.50800246
 0.53296254 0.51869088 0.51890029 0.50040069 0.52967555 0.49991561]
Average PRC each method:  [0.31410605 0.2887135  0.2887135  0.293237   0.36124514 0.29329991
 0.30622137 0.30332572 0.30204054 0.28925117 0.31267529 0.29271259]
Std ROC each method:  [0.03345655 0.         0.         0.01017324 0.01317657 0.012853
 0.02539497 0.02487696 0.03265223 0.00142427 0.04421134 0.05113787]
Std PRC each method:  [0.02580012 0.00756049 0.00756049 0.00830362 0.01729022 0.00863277
 0.02043168 0.0185393  0.02869658 0.00707105 0.03832459 0.02055242]
Average over repetitions across all methods
Average ROC:  0.523092765432843
Average PRC:  0.30379514715332323
Std ROC:  0.01166099717040763
Variance PRC:  0.013070058763164548 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.625} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.73085771 0.26914229] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73267681 0.26732319]
before perturbation, mean and variance of data mean embedding are 0.024299 and 0.118439 
after perturbation, mean and variance of data mean embedding are 0.023622 and 0.163824 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.499
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.496
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.564
PRC on test generated data is 0.325

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.528
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.530
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.485
PRC on test generated data is 0.286
----------------------------------------
roc mean across methods is 0.509
prc mean across methods is 0.298


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72724285 0.27275715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72523611 0.27476389]
before perturbation, mean and variance of data mean embedding are 0.024406 and 0.118385 
after perturbation, mean and variance of data mean embedding are 0.023469 and 0.162693 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.608
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.586
PRC on test generated data is 0.330

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.287

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.551
PRC on test generated data is 0.324

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.527
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.430
PRC on test generated data is 0.262
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.297


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72954321 0.27045679] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73188439 0.26811561]
before perturbation, mean and variance of data mean embedding are 0.024300 and 0.117993 
after perturbation, mean and variance of data mean embedding are 0.021530 and 0.162701 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.502
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.550
PRC on test generated data is 0.311

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.537
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.559
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.513
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.487
PRC on test generated data is 0.284
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.296


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72855734 0.27144266] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73080849 0.26919151]
before perturbation, mean and variance of data mean embedding are 0.024357 and 0.118268 
after perturbation, mean and variance of data mean embedding are 0.023606 and 0.162760 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.609
PRC on test generated data is 0.363

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.523
PRC on test generated data is 0.297

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.293

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.287
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.296


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72034177 0.27965823] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72158812 0.27841188]
before perturbation, mean and variance of data mean embedding are 0.024275 and 0.117309 
after perturbation, mean and variance of data mean embedding are 0.024185 and 0.163734 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.590
PRC on test generated data is 0.322

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.270

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.576
PRC on test generated data is 0.313

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.560
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.545
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.269

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.273

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.267

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.546
PRC on test generated data is 0.296

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.562
PRC on test generated data is 0.298
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.285


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53977703 0.5        0.5        0.49987389 0.57676008 0.52236643
 0.52525335 0.52107792 0.51593758 0.49992068 0.51501385 0.49283482]
Average PRC each method:  [0.30708938 0.28367816 0.28367816 0.28415924 0.32829307 0.29334008
 0.29776111 0.29965384 0.29379047 0.28366451 0.29491293 0.28329629]
Std ROC each method:  [0.04840285 0.         0.         0.00292002 0.01998153 0.02260404
 0.02359143 0.0171531  0.0112819  0.00030737 0.01569847 0.04199391]
Std PRC each method:  [0.02290297 0.00857964 0.00857964 0.00767499 0.01852714 0.00637656
 0.01539836 0.01843233 0.01301847 0.00866151 0.00340105 0.01179655]
Average over repetitions across all methods
Average ROC:  0.5174013019231106
Average PRC:  0.29444310437713045
Std ROC:  0.008240002903463878
Variance PRC:  0.004535802622351593 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.4} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63422222 0.36577778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63592063 0.36407937]
before perturbation, mean and variance of data mean embedding are 0.012421 and 0.082457 
after perturbation, mean and variance of data mean embedding are 0.010981 and 0.173168 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.517
PRC on test generated data is 0.403

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.548
PRC on test generated data is 0.428

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.577
PRC on test generated data is 0.446

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.582
PRC on test generated data is 0.439

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.412

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.541
PRC on test generated data is 0.426

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.524
PRC on test generated data is 0.405

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.596
PRC on test generated data is 0.474

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.485
PRC on test generated data is 0.384
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.416


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63377778 0.36622222] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63706544 0.36293456]
before perturbation, mean and variance of data mean embedding are 0.012334 and 0.082231 
after perturbation, mean and variance of data mean embedding are 0.011699 and 0.174036 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.546
PRC on test generated data is 0.414

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.390

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.391

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.522
PRC on test generated data is 0.400

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.407

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.518
PRC on test generated data is 0.399

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.616
PRC on test generated data is 0.475

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.544
PRC on test generated data is 0.423

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.594
PRC on test generated data is 0.450

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.578
PRC on test generated data is 0.433
----------------------------------------
roc mean across methods is 0.537
prc mean across methods is 0.414


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.616 0.384] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61052348 0.38947652]
before perturbation, mean and variance of data mean embedding are 0.012334 and 0.081612 
after perturbation, mean and variance of data mean embedding are 0.009187 and 0.172609 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.565
PRC on test generated data is 0.396

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.361

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.356

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.356

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.579
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.548
PRC on test generated data is 0.371

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.348

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.538
PRC on test generated data is 0.381

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.595
PRC on test generated data is 0.405
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.368


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.61822222 0.38177778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62249616 0.37750384]
before perturbation, mean and variance of data mean embedding are 0.012366 and 0.081785 
after perturbation, mean and variance of data mean embedding are 0.012690 and 0.172688 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.533
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.354

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.355

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.539
PRC on test generated data is 0.375

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.542
PRC on test generated data is 0.377

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.569
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.384

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.533
PRC on test generated data is 0.378

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.520
PRC on test generated data is 0.365

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.566
PRC on test generated data is 0.393

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.438
PRC on test generated data is 0.329
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.369


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63022222 0.36977778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63226221 0.36773779]
before perturbation, mean and variance of data mean embedding are 0.012314 and 0.081901 
after perturbation, mean and variance of data mean embedding are 0.013894 and 0.174705 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.537
PRC on test generated data is 0.400

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.383

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.386

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.632
PRC on test generated data is 0.518

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.544
PRC on test generated data is 0.406

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.572
PRC on test generated data is 0.423

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.542
PRC on test generated data is 0.413

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.392

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.521
PRC on test generated data is 0.401

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.383
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.406


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53957138 0.5        0.50337361 0.51376414 0.54195405 0.54405498
 0.55231834 0.52823149 0.54907007 0.51953305 0.56301704 0.51996345]
Average PRC each method:  [0.39625286 0.37264249 0.37573709 0.38321174 0.40806688 0.40046389
 0.40077902 0.3920373  0.41041403 0.38663439 0.41973858 0.38675485]
Std ROC each method:  [0.01561787 0.         0.0052732  0.01730413 0.04665873 0.03096064
 0.02213262 0.02527895 0.0351052  0.01526927 0.02982369 0.05878269]
Std PRC each method:  [0.01479746 0.01821713 0.01539994 0.02665194 0.05714073 0.02510235
 0.02217166 0.0258442  0.04057666 0.02702246 0.03580775 0.03412565]
Average over repetitions across all methods
Average ROC:  0.5312376342637735
Average PRC:  0.39439442749822207
Std ROC:  0.004607032194616697
Variance PRC:  0.021489431695647657 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.425} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6471343 0.3528657] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64617524 0.35382476]
before perturbation, mean and variance of data mean embedding are 0.012324 and 0.082747 
after perturbation, mean and variance of data mean embedding are 0.010938 and 0.168239 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.509
PRC on test generated data is 0.380

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.530
PRC on test generated data is 0.401

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.664
PRC on test generated data is 0.473

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.559
PRC on test generated data is 0.424

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.613
PRC on test generated data is 0.444

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.593
PRC on test generated data is 0.454

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.402

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.520
PRC on test generated data is 0.389

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.622
PRC on test generated data is 0.443

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.477
PRC on test generated data is 0.365
----------------------------------------
roc mean across methods is 0.552
prc mean across methods is 0.410


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64927288 0.35072712] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64531221 0.35468779]
before perturbation, mean and variance of data mean embedding are 0.012378 and 0.083141 
after perturbation, mean and variance of data mean embedding are 0.011767 and 0.169429 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.591
PRC on test generated data is 0.438

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.386

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.531
PRC on test generated data is 0.395

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.516
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.379

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.541
PRC on test generated data is 0.412

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.485
PRC on test generated data is 0.372
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.390


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63088109 0.36911891] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63000356 0.36999644]
before perturbation, mean and variance of data mean embedding are 0.012293 and 0.081998 
after perturbation, mean and variance of data mean embedding are 0.009264 and 0.167744 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.336

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.543
PRC on test generated data is 0.368

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.571
PRC on test generated data is 0.375

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.338

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.338

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.554
PRC on test generated data is 0.364
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.345


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63473054 0.36526946] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63496457 0.36503543]
before perturbation, mean and variance of data mean embedding are 0.012378 and 0.082582 
after perturbation, mean and variance of data mean embedding are 0.012690 and 0.168110 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.535
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.493
PRC on test generated data is 0.343

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.362

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.525
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.599
PRC on test generated data is 0.419

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.518
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.519
PRC on test generated data is 0.362

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.517
PRC on test generated data is 0.355

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.494
PRC on test generated data is 0.342
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.359


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64499572 0.35500428] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64328569 0.35671431]
before perturbation, mean and variance of data mean embedding are 0.012327 and 0.082722 
after perturbation, mean and variance of data mean embedding are 0.013847 and 0.169994 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.372

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.369

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.605
PRC on test generated data is 0.426

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.639
PRC on test generated data is 0.451

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.384

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.524
PRC on test generated data is 0.392

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.495
PRC on test generated data is 0.367
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.384


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.50894121 0.5        0.50054054 0.5048536  0.58727116 0.52858908
 0.56235278 0.54244512 0.51927778 0.50757597 0.54139264 0.50109009]
Average PRC each method:  [0.36513676 0.36051844 0.36120072 0.36562982 0.41325671 0.37997378
 0.39712265 0.39411308 0.3770613  0.36690461 0.38788939 0.36199063]
Std ROC each method:  [0.01370602 0.         0.00108108 0.01285061 0.04679798 0.03006614
 0.05366122 0.04392121 0.00933079 0.00961141 0.04237845 0.02724557]
Std PRC each method:  [0.01593511 0.01690335 0.01729199 0.02376981 0.04241219 0.02566145
 0.04542182 0.0398203  0.01995838 0.01800602 0.03785694 0.01016726]
Average over repetitions across all methods
Average ROC:  0.5253608304331998
Average PRC:  0.3775664906330862
Std ROC:  0.013649945246665707
Variance PRC:  0.022965060002140707 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.45} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66075845 0.33924155] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66361375 0.33638625]
before perturbation, mean and variance of data mean embedding are 0.012313 and 0.083318 
after perturbation, mean and variance of data mean embedding are 0.010977 and 0.163885 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.503
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.363

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.546
PRC on test generated data is 0.387

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.632
PRC on test generated data is 0.448

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.495
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.365

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.368

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.492
PRC on test generated data is 0.358
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.373


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66158285 0.33841715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65402567 0.34597433]
before perturbation, mean and variance of data mean embedding are 0.012322 and 0.083300 
after perturbation, mean and variance of data mean embedding are 0.011734 and 0.164893 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.612
PRC on test generated data is 0.434

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.531
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.543
PRC on test generated data is 0.411

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.617
PRC on test generated data is 0.439

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.603
PRC on test generated data is 0.425

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.665
PRC on test generated data is 0.484

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.373

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.566
PRC on test generated data is 0.423

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.594
PRC on test generated data is 0.425

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.370
----------------------------------------
roc mean across methods is 0.565
prc mean across methods is 0.409


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65127782 0.34872218] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65296172 0.34703828]
before perturbation, mean and variance of data mean embedding are 0.012393 and 0.083185 
after perturbation, mean and variance of data mean embedding are 0.009475 and 0.163713 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.532
PRC on test generated data is 0.368

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.345

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.548
PRC on test generated data is 0.365

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.559
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.351

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.530
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.530
PRC on test generated data is 0.373

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.568
PRC on test generated data is 0.378
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.356


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64715581 0.35284419] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64878017 0.35121983]
before perturbation, mean and variance of data mean embedding are 0.012323 and 0.082675 
after perturbation, mean and variance of data mean embedding are 0.012624 and 0.163536 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.604
PRC on test generated data is 0.398

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.557
PRC on test generated data is 0.373

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.525
PRC on test generated data is 0.346

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.617
PRC on test generated data is 0.398

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.614
PRC on test generated data is 0.414

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.576
PRC on test generated data is 0.386

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.334

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.585
PRC on test generated data is 0.376

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.437
PRC on test generated data is 0.306
----------------------------------------
roc mean across methods is 0.544
prc mean across methods is 0.360


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65787304 0.34212696] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65965662 0.34034338]
before perturbation, mean and variance of data mean embedding are 0.012322 and 0.083134 
after perturbation, mean and variance of data mean embedding are 0.013787 and 0.165528 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.539
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.520
PRC on test generated data is 0.373

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.513
PRC on test generated data is 0.365

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.354
----------------------------------------
roc mean across methods is 0.508
prc mean across methods is 0.360


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.55014979 0.50623162 0.5        0.52112617 0.54740552 0.54819775
 0.60171308 0.52467332 0.51552759 0.51452565 0.54614732 0.50103381]
Average PRC each method:  [0.38396827 0.35343721 0.35043228 0.36941869 0.37836536 0.37816216
 0.42019477 0.36817259 0.36046613 0.36358476 0.38137927 0.35345823]
Std ROC each method:  [0.04843677 0.01246323 0.         0.02411453 0.03906327 0.05085771
 0.04652567 0.02723178 0.00954872 0.02603759 0.03643598 0.04209893]
Std PRC each method:  [0.02871378 0.01700424 0.01307848 0.0226335  0.0333667  0.03001215
 0.0414611  0.01260705 0.01519233 0.0317252  0.02208011 0.02498948]
Average over repetitions across all methods
Average ROC:  0.5313943016277153
Average PRC:  0.37175330890605424
Std ROC:  0.020553866981996332
Variance PRC:  0.019356075307582137 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.475} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67157058 0.32842942] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67255853 0.32744147]
before perturbation, mean and variance of data mean embedding are 0.012362 and 0.083927 
after perturbation, mean and variance of data mean embedding are 0.011073 and 0.159893 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.512
PRC on test generated data is 0.352

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.347

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.578
PRC on test generated data is 0.392

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.544
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.360

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.540
PRC on test generated data is 0.378

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.481
PRC on test generated data is 0.339
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.357


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67673956 0.32326044] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68019797 0.31980203]
before perturbation, mean and variance of data mean embedding are 0.012364 and 0.084530 
after perturbation, mean and variance of data mean embedding are 0.011797 and 0.161197 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.503
PRC on test generated data is 0.361

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.555
PRC on test generated data is 0.389

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.582
PRC on test generated data is 0.406

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.365

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.365

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.366

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.516
PRC on test generated data is 0.374

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.580
PRC on test generated data is 0.402
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.372


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66202783 0.33797217] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66038915 0.33961085]
before perturbation, mean and variance of data mean embedding are 0.012425 and 0.084097 
after perturbation, mean and variance of data mean embedding are 0.009610 and 0.159901 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.617
PRC on test generated data is 0.410

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.603
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.548
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.586
PRC on test generated data is 0.374
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.345


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66043738 0.33956262] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66021823 0.33978177]
before perturbation, mean and variance of data mean embedding are 0.012312 and 0.083426 
after perturbation, mean and variance of data mean embedding are 0.012602 and 0.159657 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.530
PRC on test generated data is 0.338

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.325

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.580
PRC on test generated data is 0.377

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.537
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.579
PRC on test generated data is 0.373

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.562
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.523
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.325

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.532
PRC on test generated data is 0.342

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.437
PRC on test generated data is 0.297
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.339


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66878728 0.33121272] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66972715 0.33027285]
before perturbation, mean and variance of data mean embedding are 0.012316 and 0.083625 
after perturbation, mean and variance of data mean embedding are 0.013730 and 0.161463 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.360

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.576
PRC on test generated data is 0.383

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.345

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.340
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.347


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.50904602 0.5        0.5        0.50134025 0.57331682 0.52939762
 0.55129282 0.53674866 0.51149759 0.50176403 0.51867775 0.51658601]
Average PRC each method:  [0.34332389 0.33840445 0.33840445 0.33924005 0.38575126 0.35424063
 0.37081969 0.36608215 0.34759368 0.34047351 0.35264165 0.35049116]
Std ROC each method:  [0.01122869 0.         0.         0.00343507 0.0269221  0.03001618
 0.04379856 0.0196581  0.00792398 0.00221302 0.01532521 0.05786806]
Std PRC each method:  [0.01242359 0.01409774 0.01409774 0.0131299  0.01665451 0.02810341
 0.01641374 0.00830462 0.01262072 0.0153179  0.02018924 0.03552603]
Average over repetitions across all methods
Average ROC:  0.5208056307940256
Average PRC:  0.35228888160365035
Std ROC:  0.0064851367869930105
Variance PRC:  0.011391536452012196 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.5} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67812889 0.32187111]
before perturbation, mean and variance of data mean embedding are 0.012299 and 0.084353 
after perturbation, mean and variance of data mean embedding are 0.011055 and 0.156201 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.540
PRC on test generated data is 0.365

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.346

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.570
PRC on test generated data is 0.381

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.544
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.538
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.595
PRC on test generated data is 0.429

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.344

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.478
PRC on test generated data is 0.327
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.355


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68843642 0.31156358] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69068246 0.30931754]
before perturbation, mean and variance of data mean embedding are 0.012384 and 0.085114 
after perturbation, mean and variance of data mean embedding are 0.011836 and 0.157603 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.551
PRC on test generated data is 0.375

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.557
PRC on test generated data is 0.379

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.547
PRC on test generated data is 0.378

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.577
PRC on test generated data is 0.398

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.354

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.580
PRC on test generated data is 0.392
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.365


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67652708 0.32347292] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67604086 0.32395914]
before perturbation, mean and variance of data mean embedding are 0.012386 and 0.084584 
after perturbation, mean and variance of data mean embedding are 0.009666 and 0.156267 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.523
PRC on test generated data is 0.332

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.602
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.498
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.327

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.581
PRC on test generated data is 0.367
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.331


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6749904 0.3250096] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67763565 0.32236435]
before perturbation, mean and variance of data mean embedding are 0.012438 and 0.084538 
after perturbation, mean and variance of data mean embedding are 0.012719 and 0.156352 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.538
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.318

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.527
PRC on test generated data is 0.331

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.528
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.547
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.546
PRC on test generated data is 0.349

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.448
PRC on test generated data is 0.297
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.324


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6859356 0.3140644]
before perturbation, mean and variance of data mean embedding are 0.012438 and 0.084910 
after perturbation, mean and variance of data mean embedding are 0.013803 and 0.158155 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.562
PRC on test generated data is 0.370

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.616
PRC on test generated data is 0.454

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.532
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.540
PRC on test generated data is 0.364
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.354


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.5262475  0.5        0.5        0.50258078 0.54774739 0.51069043
 0.57136762 0.52895076 0.52345673 0.49986807 0.51396266 0.52538049]
Average PRC each method:  [0.3465934  0.33136201 0.33136201 0.33363299 0.35841736 0.33766638
 0.38339036 0.35114509 0.35369966 0.33136201 0.34146493 0.34936667]
Std ROC each method:  [0.02102705 0.         0.         0.00506534 0.01905921 0.01028777
 0.03122593 0.02896226 0.03609411 0.00026385 0.01658228 0.05371751]
Std PRC each method:  [0.02036265 0.01128321 0.01128321 0.01266092 0.02258865 0.01232157
 0.03851413 0.02980979 0.03941142 0.01128321 0.00962112 0.03328384]
Average over repetitions across all methods
Average ROC:  0.5208543692870294
Average PRC:  0.34578857208935243
Std ROC:  0.0055596347182179495
Variance PRC:  0.015243081628073847 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.525} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6936803 0.3063197] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69571888 0.30428112]
before perturbation, mean and variance of data mean embedding are 0.012399 and 0.085535 
after perturbation, mean and variance of data mean embedding are 0.011195 and 0.153216 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.548
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.325

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.495
PRC on test generated data is 0.324
----------------------------------------
roc mean across methods is 0.505
prc mean across methods is 0.329


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69628253 0.30371747] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69652022 0.30347978]
before perturbation, mean and variance of data mean embedding are 0.012419 and 0.085747 
after perturbation, mean and variance of data mean embedding are 0.011889 and 0.154356 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.576
PRC on test generated data is 0.378

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.522
PRC on test generated data is 0.355

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.570
PRC on test generated data is 0.377

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.575
PRC on test generated data is 0.375

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.552
PRC on test generated data is 0.371

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.334
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.349


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68736059 0.31263941] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68632958 0.31367042]
before perturbation, mean and variance of data mean embedding are 0.012386 and 0.085046 
after perturbation, mean and variance of data mean embedding are 0.009754 and 0.152950 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.567
PRC on test generated data is 0.364

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.552
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.568
PRC on test generated data is 0.348
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.325


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6866171 0.3133829] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68736871 0.31263129]
before perturbation, mean and variance of data mean embedding are 0.012409 and 0.085127 
after perturbation, mean and variance of data mean embedding are 0.012680 and 0.153148 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.497
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.496
PRC on test generated data is 0.308

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.603
PRC on test generated data is 0.367

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.527
PRC on test generated data is 0.329

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.613
PRC on test generated data is 0.396

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.524
PRC on test generated data is 0.324

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.540
PRC on test generated data is 0.336
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.328


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69107807 0.30892193] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69531417 0.30468583]
before perturbation, mean and variance of data mean embedding are 0.012355 and 0.085046 
after perturbation, mean and variance of data mean embedding are 0.013676 and 0.154608 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.566
PRC on test generated data is 0.373

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.568
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.537
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.321

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.492
PRC on test generated data is 0.317
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.329


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51461799 0.5        0.5        0.50360906 0.56092228 0.52263529
 0.54788282 0.51869097 0.51092238 0.49975182 0.51541852 0.51996769]
Average PRC each method:  [0.32880811 0.31958406 0.31958406 0.32391268 0.36119391 0.33313756
 0.35201122 0.33581375 0.32708521 0.31951713 0.33052078 0.33158656]
Std ROC each method:  [0.03060343 0.         0.         0.00907901 0.0334155  0.02803588
 0.0408224  0.01238521 0.02078526 0.00049636 0.02029081 0.02975443]
Std PRC each method:  [0.02531297 0.00856791 0.00856791 0.01661401 0.01823621 0.02196401
 0.02692782 0.00866287 0.01178905 0.00852008 0.02080304 0.01050653]
Average over repetitions across all methods
Average ROC:  0.5178682350535909
Average PRC:  0.33189625250338495
Std ROC:  0.008104535640436214
Variance PRC:  0.00876013137572225 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.55} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69953221 0.30046779] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70192413 0.29807587]
before perturbation, mean and variance of data mean embedding are 0.012407 and 0.086011 
after perturbation, mean and variance of data mean embedding are 0.011241 and 0.150119 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.594
PRC on test generated data is 0.373

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.549
PRC on test generated data is 0.339

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.613
PRC on test generated data is 0.410

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.311
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.324


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70349046 0.29650954] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69958106 0.30041894]
before perturbation, mean and variance of data mean embedding are 0.012340 and 0.085834 
after perturbation, mean and variance of data mean embedding are 0.011826 and 0.151018 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.518
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.318

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.316

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.612
PRC on test generated data is 0.374

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.515
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.318

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.554
PRC on test generated data is 0.358

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.538
PRC on test generated data is 0.334
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.328


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69701331 0.30298669] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69587665 0.30412335]
before perturbation, mean and variance of data mean embedding are 0.012376 and 0.085542 
after perturbation, mean and variance of data mean embedding are 0.009829 and 0.149846 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.515
PRC on test generated data is 0.308

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.531
PRC on test generated data is 0.317

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.543
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.566
PRC on test generated data is 0.336
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.308


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69629363 0.30370637] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69402352 0.30597648]
before perturbation, mean and variance of data mean embedding are 0.012416 and 0.085978 
after perturbation, mean and variance of data mean embedding are 0.012679 and 0.150244 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.317

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.315

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.496
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.522
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.307

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.516
PRC on test generated data is 0.307
----------------------------------------
roc mean across methods is 0.510
prc mean across methods is 0.305


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.697733 0.302267] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70307057 0.29692943]
before perturbation, mean and variance of data mean embedding are 0.012273 and 0.085173 
after perturbation, mean and variance of data mean embedding are 0.013552 and 0.151284 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.309

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.553
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.548
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.570
PRC on test generated data is 0.365

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.305

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.557
PRC on test generated data is 0.345
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.317


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.50702062 0.50120644 0.5        0.50003658 0.55783916 0.52000951
 0.53020538 0.50467713 0.54185038 0.50055247 0.51273944 0.53764313]
Average PRC each method:  [0.30841796 0.30531151 0.30478589 0.3048973  0.33797953 0.31482372
 0.3243508  0.30789281 0.34099455 0.30523956 0.31539972 0.32677591]
Std ROC each method:  [0.00808998 0.00241287 0.         0.0004481  0.03820546 0.02034296
 0.02112702 0.00357964 0.04318483 0.00110495 0.02090824 0.0219169 ]
Std PRC each method:  [0.00856906 0.0069767  0.00600791 0.00593374 0.02908549 0.00925306
 0.01384198 0.00490076 0.04069501 0.00684266 0.02136696 0.01486567]
Average over repetitions across all methods
Average ROC:  0.5178150200643209
Average PRC:  0.3164057716679613
Std ROC:  0.004911004769092906
Variance PRC:  0.008865060889108914 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.575} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71154517 0.28845483] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71163544 0.28836456]
before perturbation, mean and variance of data mean embedding are 0.012349 and 0.086248 
after perturbation, mean and variance of data mean embedding are 0.011220 and 0.147135 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.303

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.591
PRC on test generated data is 0.368

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.591
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.517
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.532
PRC on test generated data is 0.324

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.309
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.320


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71294036 0.28705964] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71449097 0.28550903]
before perturbation, mean and variance of data mean embedding are 0.012397 and 0.086682 
after perturbation, mean and variance of data mean embedding are 0.011899 and 0.148409 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.499
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.307

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.594
PRC on test generated data is 0.358

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.308

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.529
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.524
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.307

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.594
PRC on test generated data is 0.358
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.319


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70735961 0.29264039] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70790853 0.29209147]
before perturbation, mean and variance of data mean embedding are 0.012341 and 0.086247 
after perturbation, mean and variance of data mean embedding are 0.009871 and 0.147177 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.545
PRC on test generated data is 0.314

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.553
PRC on test generated data is 0.319

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.538
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.559
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.578
PRC on test generated data is 0.336
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.305


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70561563 0.29438437] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71041752 0.28958248]
before perturbation, mean and variance of data mean embedding are 0.012423 and 0.086325 
after perturbation, mean and variance of data mean embedding are 0.012678 and 0.147382 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.550
PRC on test generated data is 0.312

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.294

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.553
PRC on test generated data is 0.318

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.527
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.525
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.529
PRC on test generated data is 0.309

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.445
PRC on test generated data is 0.270
----------------------------------------
roc mean across methods is 0.511
prc mean across methods is 0.297


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70666202 0.29333798] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70549022 0.29450978]
before perturbation, mean and variance of data mean embedding are 0.012345 and 0.085987 
after perturbation, mean and variance of data mean embedding are 0.013585 and 0.148601 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.565
PRC on test generated data is 0.341

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.308

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.554
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.589
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.528
PRC on test generated data is 0.312
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.308


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51884614 0.5        0.5        0.50026031 0.5712997  0.51670005
 0.5519323  0.50567921 0.5287976  0.5        0.51230933 0.53156748]
Average PRC each method:  [0.30556169 0.29715216 0.29715216 0.297928   0.34061837 0.30652381
 0.33013425 0.30315946 0.31931867 0.29715216 0.30513841 0.31708061]
Std ROC each method:  [0.02336227 0.         0.         0.00180728 0.01778272 0.01338231
 0.02342045 0.00676737 0.03167576 0.         0.01480295 0.05258493]
Std PRC each method:  [0.0076389  0.00671758 0.00671758 0.00599317 0.02018757 0.00672846
 0.02084512 0.01446959 0.022016   0.00671758 0.01153739 0.02946598]
Average over repetitions across all methods
Average ROC:  0.5197826765647761
Average PRC:  0.30974331168643227
Std ROC:  0.00426940990089666
Variance PRC:  0.008593661375525868 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.6} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72284264 0.27715736] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72464023 0.27535977]
before perturbation, mean and variance of data mean embedding are 0.012395 and 0.087082 
after perturbation, mean and variance of data mean embedding are 0.011299 and 0.144753 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.547
PRC on test generated data is 0.328

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.535
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.489
PRC on test generated data is 0.296
----------------------------------------
roc mean across methods is 0.506
prc mean across methods is 0.304


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71844332 0.28155668] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71892135 0.28107865]
before perturbation, mean and variance of data mean embedding are 0.012393 and 0.086780 
after perturbation, mean and variance of data mean embedding are 0.011910 and 0.145569 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.290

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.298
----------------------------------------
roc mean across methods is 0.506
prc mean across methods is 0.296


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71878173 0.28121827] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71587432 0.28412568]
before perturbation, mean and variance of data mean embedding are 0.012445 and 0.087285 
after perturbation, mean and variance of data mean embedding are 0.010049 and 0.144898 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.521
PRC on test generated data is 0.300

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.627
PRC on test generated data is 0.367

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.627
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.297

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.566
PRC on test generated data is 0.326
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.308


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71404399 0.28595601] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7131561 0.2868439]
before perturbation, mean and variance of data mean embedding are 0.012394 and 0.086697 
after perturbation, mean and variance of data mean embedding are 0.012641 and 0.144752 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.564
PRC on test generated data is 0.308

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.542
PRC on test generated data is 0.301

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.537
PRC on test generated data is 0.296

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.569
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.288

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.286

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.441
PRC on test generated data is 0.260
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.289


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.7143824 0.2856176] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71339937 0.28660063]
before perturbation, mean and variance of data mean embedding are 0.012368 and 0.086478 
after perturbation, mean and variance of data mean embedding are 0.013571 and 0.145948 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.592
PRC on test generated data is 0.332

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.525
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.282

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.283

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.523
PRC on test generated data is 0.296
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.289


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51682443 0.5        0.5        0.4995614  0.56119319 0.50892566
 0.55088194 0.50978135 0.50705793 0.5        0.50249753 0.50668657]
Average PRC each method:  [0.29610909 0.2887135  0.2887135  0.2887135  0.32357619 0.29251411
 0.31764818 0.29881168 0.29501099 0.2887135  0.29099268 0.2953099 ]
Std ROC each method:  [0.02467388 0.         0.         0.00087719 0.04452266 0.01429928
 0.04446751 0.01961507 0.00529602 0.         0.00310337 0.04115177]
Std PRC each method:  [0.00947095 0.00756049 0.00756049 0.00756049 0.02668793 0.00655751
 0.02776327 0.02199548 0.00488437 0.00756049 0.00628163 0.02088952]
Average over repetitions across all methods
Average ROC:  0.5136174998813251
Average PRC:  0.2970689017317479
Std ROC:  0.008512247765440108
Variance PRC:  0.007971551692142606 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.625} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.73085771 0.26914229] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73549578 0.26450422]
before perturbation, mean and variance of data mean embedding are 0.012392 and 0.087675 
after perturbation, mean and variance of data mean embedding are 0.011327 and 0.142411 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.615
PRC on test generated data is 0.351

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.617
PRC on test generated data is 0.358

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.560
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.548
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.493
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.479
PRC on test generated data is 0.285
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.307


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72724285 0.27275715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72545335 0.27454665]
before perturbation, mean and variance of data mean embedding are 0.012383 and 0.087425 
after perturbation, mean and variance of data mean embedding are 0.011914 and 0.143270 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.564
PRC on test generated data is 0.313

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.608
PRC on test generated data is 0.362

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.516
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.625
PRC on test generated data is 0.384

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.285

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.285
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.303


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72954321 0.27045679] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72758956 0.27241044]
before perturbation, mean and variance of data mean embedding are 0.012398 and 0.087693 
after perturbation, mean and variance of data mean embedding are 0.010072 and 0.142458 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.577
PRC on test generated data is 0.338

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.604
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.544
PRC on test generated data is 0.311
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.300


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72855734 0.27144266] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72910047 0.27089953]
before perturbation, mean and variance of data mean embedding are 0.012369 and 0.087154 
after perturbation, mean and variance of data mean embedding are 0.012609 and 0.142383 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.583
PRC on test generated data is 0.346

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.611
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.435
PRC on test generated data is 0.264
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.299


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72034177 0.27965823] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72287131 0.27712869]
before perturbation, mean and variance of data mean embedding are 0.012336 and 0.086897 
after perturbation, mean and variance of data mean embedding are 0.013504 and 0.143492 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.539
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.599
PRC on test generated data is 0.321

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.523
PRC on test generated data is 0.283

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.274

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.271

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.269

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.274
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.276


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54361642 0.5        0.5        0.5        0.59686564 0.54268962
 0.56138193 0.50431538 0.50566045 0.49978355 0.50063413 0.49441972]
Average PRC each method:  [0.3047401  0.28367816 0.28367816 0.28367816 0.34490083 0.30504268
 0.32907767 0.28766279 0.28832312 0.28367816 0.284332   0.28380396]
Std ROC each method:  [0.04329348 0.         0.         0.         0.01493418 0.03650584
 0.04898417 0.00797147 0.00745035 0.0004329  0.00079062 0.03643359]
Std PRC each method:  [0.02564972 0.00857964 0.00857964 0.00857964 0.01462193 0.0263991
 0.04066886 0.00704961 0.01085511 0.00857964 0.00809375 0.0154069 ]
Average over repetitions across all methods
Average ROC:  0.5207805705410603
Average PRC:  0.29688298242442734
Std ROC:  0.005284708766736268
Variance PRC:  0.010760970436304267 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.4} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63422222 0.36577778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62971583 0.37028417]
before perturbation, mean and variance of data mean embedding are 0.006226 and 0.059740 
after perturbation, mean and variance of data mean embedding are 0.006064 and 0.164027 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.581
PRC on test generated data is 0.443

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.392

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.466
PRC on test generated data is 0.391

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.575
PRC on test generated data is 0.432

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.542
PRC on test generated data is 0.429

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.531
PRC on test generated data is 0.412

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.394

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.395

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.485
PRC on test generated data is 0.384
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.404


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63377778 0.36622222] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63399411 0.36600589]
before perturbation, mean and variance of data mean embedding are 0.006243 and 0.059847 
after perturbation, mean and variance of data mean embedding are 0.006675 and 0.164422 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.600
PRC on test generated data is 0.447

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.391

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.577
PRC on test generated data is 0.434

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.568
PRC on test generated data is 0.426

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.408

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.538
PRC on test generated data is 0.419

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.390

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.521
PRC on test generated data is 0.405

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.479
PRC on test generated data is 0.380
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.406


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.616 0.384] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62370753 0.37629247]
before perturbation, mean and variance of data mean embedding are 0.006242 and 0.059296 
after perturbation, mean and variance of data mean embedding are 0.004471 and 0.163720 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.551
PRC on test generated data is 0.400

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.356

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.553
PRC on test generated data is 0.377

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.649
PRC on test generated data is 0.447

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.651
PRC on test generated data is 0.435

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.557
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.528
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.349

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.560
PRC on test generated data is 0.407

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.417
PRC on test generated data is 0.320
----------------------------------------
roc mean across methods is 0.540
prc mean across methods is 0.379


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.61822222 0.38177778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61493815 0.38506185]
before perturbation, mean and variance of data mean embedding are 0.006219 and 0.059425 
after perturbation, mean and variance of data mean embedding are 0.006072 and 0.164127 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.535
PRC on test generated data is 0.370

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.603
PRC on test generated data is 0.417

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.362

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.557
PRC on test generated data is 0.382

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.496
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.549
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.392

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.363

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.538
PRC on test generated data is 0.372
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.374


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63022222 0.36977778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63189323 0.36810677]
before perturbation, mean and variance of data mean embedding are 0.006205 and 0.059465 
after perturbation, mean and variance of data mean embedding are 0.006777 and 0.163950 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.545
PRC on test generated data is 0.418

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.542
PRC on test generated data is 0.409

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.388

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.582
PRC on test generated data is 0.454

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.581
PRC on test generated data is 0.436

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.632
PRC on test generated data is 0.496

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.557
PRC on test generated data is 0.423

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.387

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.531
PRC on test generated data is 0.401

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.564
PRC on test generated data is 0.434

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.645
PRC on test generated data is 0.502

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.381
----------------------------------------
roc mean across methods is 0.558
prc mean across methods is 0.427


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.56223214 0.52900224 0.5018166  0.52195565 0.54676107 0.56908144
 0.56761974 0.53489023 0.53291206 0.51360794 0.54867398 0.48359755]
Average PRC each method:  [0.41565705 0.39095401 0.37401608 0.39101155 0.40397643 0.42274595
 0.41370423 0.39794012 0.40063509 0.3839742  0.41435177 0.36741838]
Std ROC each method:  [0.02426058 0.04050358 0.0036332  0.03027912 0.04202701 0.0641642
 0.04727414 0.01504158 0.0039511  0.02523714 0.05166779 0.03922213]
Std PRC each method:  [0.02851474 0.02384797 0.01906106 0.03465462 0.0254779  0.0487228
 0.02051756 0.01838626 0.01433023 0.03103794 0.04655361 0.02404433]
Average over repetitions across all methods
Average ROC:  0.5343458864446127
Average PRC:  0.3980320719215431
Std ROC:  0.014157782267472356
Variance PRC:  0.01953073519671348 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.425} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6471343 0.3528657] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65289354 0.34710646]
before perturbation, mean and variance of data mean embedding are 0.006221 and 0.060151 
after perturbation, mean and variance of data mean embedding are 0.006065 and 0.158836 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.534
PRC on test generated data is 0.393

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.374

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.488
PRC on test generated data is 0.374

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.656
PRC on test generated data is 0.474

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.377

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.392

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.374

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.386

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.467
PRC on test generated data is 0.360
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.385


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64927288 0.35072712] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64671511 0.35328489]
before perturbation, mean and variance of data mean embedding are 0.006242 and 0.060373 
after perturbation, mean and variance of data mean embedding are 0.006657 and 0.159275 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.561
PRC on test generated data is 0.410

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.382

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.533
PRC on test generated data is 0.398

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.495
PRC on test generated data is 0.377

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.536
PRC on test generated data is 0.408

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.542
PRC on test generated data is 0.415

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.497
PRC on test generated data is 0.378

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.382

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.383
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.390


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63088109 0.36911891] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63646475 0.36353525]
before perturbation, mean and variance of data mean embedding are 0.006192 and 0.059514 
after perturbation, mean and variance of data mean embedding are 0.004488 and 0.158498 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.511
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.582
PRC on test generated data is 0.379

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.638
PRC on test generated data is 0.430

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.648
PRC on test generated data is 0.437

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.516
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.561
PRC on test generated data is 0.378

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.466
PRC on test generated data is 0.322
----------------------------------------
roc mean across methods is 0.536
prc mean across methods is 0.361


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63473054 0.36526946] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63356352 0.36643648]
before perturbation, mean and variance of data mean embedding are 0.006239 and 0.059881 
after perturbation, mean and variance of data mean embedding are 0.006097 and 0.158961 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.527
PRC on test generated data is 0.357

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.580
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.581
PRC on test generated data is 0.401

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.543
PRC on test generated data is 0.370

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.538
PRC on test generated data is 0.380

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.513
PRC on test generated data is 0.353

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.517
PRC on test generated data is 0.356

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.581
PRC on test generated data is 0.401
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.366


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64499572 0.35500428] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64457933 0.35542067]
before perturbation, mean and variance of data mean embedding are 0.006184 and 0.060047 
after perturbation, mean and variance of data mean embedding are 0.006735 and 0.158813 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.576
PRC on test generated data is 0.422

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.373

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.551
PRC on test generated data is 0.395

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.397

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.603
PRC on test generated data is 0.430

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.553
PRC on test generated data is 0.404

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.522
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.528
PRC on test generated data is 0.392

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.375

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.603
PRC on test generated data is 0.430
----------------------------------------
roc mean across methods is 0.541
prc mean across methods is 0.395


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53653092 0.5        0.5        0.50301038 0.53606413 0.55297299
 0.59657364 0.53083387 0.52496235 0.50746237 0.52012983 0.52526859]
Average PRC each method:  [0.38385576 0.36051844 0.36051844 0.36285088 0.38072907 0.39494199
 0.42353576 0.38290586 0.38185228 0.36660692 0.37537401 0.37913007]
Std ROC each method:  [0.02877132 0.         0.         0.00296565 0.03080886 0.05045451
 0.05785358 0.01710457 0.01388471 0.01191673 0.02087745 0.05726409]
Std PRC each method:  [0.03153987 0.01690335 0.01690335 0.01698944 0.01478166 0.01893863
 0.03289097 0.020257   0.02425861 0.01972481 0.0101773  0.03657213]
Average over repetitions across all methods
Average ROC:  0.5278174228440313
Average PRC:  0.3794016239778999
Std ROC:  0.01044568084899014
Variance PRC:  0.013337134550069624 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.45} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66075845 0.33924155] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65844624 0.34155376]
before perturbation, mean and variance of data mean embedding are 0.006243 and 0.060691 
after perturbation, mean and variance of data mean embedding are 0.006092 and 0.154161 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.560
PRC on test generated data is 0.397

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.535
PRC on test generated data is 0.387

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.610
PRC on test generated data is 0.433

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.597
PRC on test generated data is 0.415

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.659
PRC on test generated data is 0.460

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.491
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.370

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.492
PRC on test generated data is 0.359
----------------------------------------
roc mean across methods is 0.538
prc mean across methods is 0.386


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66158285 0.33841715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6653149 0.3346851]
before perturbation, mean and variance of data mean embedding are 0.006218 and 0.060495 
after perturbation, mean and variance of data mean embedding are 0.006619 and 0.154386 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.609
PRC on test generated data is 0.438

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.552
PRC on test generated data is 0.396

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.538
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.554
PRC on test generated data is 0.409

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.521
PRC on test generated data is 0.386

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.364

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.365

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.576
PRC on test generated data is 0.407
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.384


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65127782 0.34872218] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65856414 0.34143586]
before perturbation, mean and variance of data mean embedding are 0.006187 and 0.060321 
after perturbation, mean and variance of data mean embedding are 0.004545 and 0.153893 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.551
PRC on test generated data is 0.366

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.348

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.600
PRC on test generated data is 0.406

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.573
PRC on test generated data is 0.378

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.620
PRC on test generated data is 0.434

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.494
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.537
PRC on test generated data is 0.364

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.475
PRC on test generated data is 0.330
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.362


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64715581 0.35284419] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64274931 0.35725069]
before perturbation, mean and variance of data mean embedding are 0.006227 and 0.059881 
after perturbation, mean and variance of data mean embedding are 0.006090 and 0.154044 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.522
PRC on test generated data is 0.346

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.520
PRC on test generated data is 0.355

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.532
PRC on test generated data is 0.346

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.546
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.531
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.522
PRC on test generated data is 0.351

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.576
PRC on test generated data is 0.383
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.346


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65787304 0.34212696] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65227974 0.34772026]
before perturbation, mean and variance of data mean embedding are 0.006194 and 0.060476 
after perturbation, mean and variance of data mean embedding are 0.006725 and 0.154038 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.507
PRC on test generated data is 0.360

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.362

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.649
PRC on test generated data is 0.504

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.517
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.555
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.554
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.514
PRC on test generated data is 0.368

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.567
PRC on test generated data is 0.421

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.649
PRC on test generated data is 0.504
----------------------------------------
roc mean across methods is 0.544
prc mean across methods is 0.394


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52806276 0.5        0.5        0.51535763 0.60007946 0.55686144
 0.58071641 0.51115278 0.51938619 0.50145282 0.52766401 0.55355356]
Average PRC each method:  [0.36668543 0.35043228 0.35043228 0.36326685 0.42520515 0.38164408
 0.40282139 0.36154357 0.36476931 0.35300975 0.37429407 0.39653047]
Std ROC each method:  [0.02382976 0.         0.         0.01181515 0.03777001 0.0267394
 0.05025556 0.02219724 0.01904963 0.00656525 0.02288388 0.06311361]
Std PRC each method:  [0.01651116 0.01307848 0.01307848 0.01309234 0.05113826 0.02153905
 0.04009129 0.02482594 0.02134933 0.01494557 0.02415215 0.05959341]
Average over repetitions across all methods
Average ROC:  0.5328572552066824
Average PRC:  0.374219552474235
Std ROC:  0.00748796480098433
Variance PRC:  0.017846491946137133 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.475} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67157058 0.32842942] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67248152 0.32751848]
before perturbation, mean and variance of data mean embedding are 0.006277 and 0.061268 
after perturbation, mean and variance of data mean embedding are 0.006132 and 0.149812 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.534
PRC on test generated data is 0.365

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.597
PRC on test generated data is 0.405

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.583
PRC on test generated data is 0.394

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.373

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.520
PRC on test generated data is 0.373

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.467
PRC on test generated data is 0.333
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.361


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67673956 0.32326044] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67902783 0.32097217]
before perturbation, mean and variance of data mean embedding are 0.006207 and 0.061029 
after perturbation, mean and variance of data mean embedding are 0.006594 and 0.149981 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.520
PRC on test generated data is 0.370

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.361

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.614
PRC on test generated data is 0.426

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.560
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.546
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.553
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.516
PRC on test generated data is 0.371

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.359

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.521
PRC on test generated data is 0.373

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.540
PRC on test generated data is 0.381
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.377


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66202783 0.33797217] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66359223 0.33640777]
before perturbation, mean and variance of data mean embedding are 0.006216 and 0.060573 
after perturbation, mean and variance of data mean embedding are 0.004632 and 0.149407 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.550
PRC on test generated data is 0.351

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.333

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.656
PRC on test generated data is 0.435

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.557
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.525
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.512
PRC on test generated data is 0.336

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.332
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.344


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66043738 0.33956262] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66050025 0.33949975]
before perturbation, mean and variance of data mean embedding are 0.006214 and 0.060586 
after perturbation, mean and variance of data mean embedding are 0.006082 and 0.149725 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.567
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.520
PRC on test generated data is 0.343

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.583
PRC on test generated data is 0.366

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.576
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.632
PRC on test generated data is 0.408

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.491
PRC on test generated data is 0.319

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.519
PRC on test generated data is 0.339

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.323
----------------------------------------
roc mean across methods is 0.535
prc mean across methods is 0.342


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66878728 0.33121272] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67290629 0.32709371]
before perturbation, mean and variance of data mean embedding are 0.006215 and 0.060960 
after perturbation, mean and variance of data mean embedding are 0.006727 and 0.149635 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.605
PRC on test generated data is 0.411

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.342

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.496
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.541
PRC on test generated data is 0.361

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.583
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.543
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.522
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.342

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.596
PRC on test generated data is 0.439
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.363


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.5551394  0.5        0.50027248 0.50586469 0.59834576 0.54570655
 0.57224161 0.52475803 0.51122758 0.4977679  0.51472924 0.52436497]
Average PRC each method:  [0.36989394 0.33840445 0.33876388 0.34488055 0.398419   0.36272095
 0.38320019 0.3565408  0.34597411 0.337915   0.35266534 0.36158037]
Std ROC each method:  [0.02953608 0.         0.00054496 0.00822468 0.03744547 0.03450054
 0.03294058 0.01848402 0.00778486 0.00343101 0.00717029 0.04271428]
Std PRC each method:  [0.02170854 0.01409774 0.01416793 0.00903971 0.0302157  0.02333047
 0.01775458 0.02225762 0.0167147  0.01472333 0.0166664  0.04378259]
Average over repetitions across all methods
Average ROC:  0.5292015173476465
Average PRC:  0.35757988280139463
Std ROC:  0.004975235153607614
Variance PRC:  0.013037017158766687 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.5} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68365564 0.31634436]
before perturbation, mean and variance of data mean embedding are 0.006214 and 0.061392 
after perturbation, mean and variance of data mean embedding are 0.006074 and 0.145684 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.555
PRC on test generated data is 0.363

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.525
PRC on test generated data is 0.348

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.627
PRC on test generated data is 0.427

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.482
PRC on test generated data is 0.328
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.347


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68843642 0.31156358] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68710788 0.31289212]
before perturbation, mean and variance of data mean embedding are 0.006270 and 0.062040 
after perturbation, mean and variance of data mean embedding are 0.006643 and 0.146201 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.526
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.588
PRC on test generated data is 0.399

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.629
PRC on test generated data is 0.428

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.516
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.350

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.457
PRC on test generated data is 0.331
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.360


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67652708 0.32347292] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67839702 0.32160298]
before perturbation, mean and variance of data mean embedding are 0.006241 and 0.061462 
after perturbation, mean and variance of data mean embedding are 0.004711 and 0.145616 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.537
PRC on test generated data is 0.339

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.496
PRC on test generated data is 0.319

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.545
PRC on test generated data is 0.345

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.542
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.321

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.541
PRC on test generated data is 0.343
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.331


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6749904 0.3250096] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68059999 0.31940001]
before perturbation, mean and variance of data mean embedding are 0.006225 and 0.061251 
after perturbation, mean and variance of data mean embedding are 0.006098 and 0.145782 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.520
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.318

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.578
PRC on test generated data is 0.380

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.319

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.545
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.541
PRC on test generated data is 0.341
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.328


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68329197 0.31670803]
before perturbation, mean and variance of data mean embedding are 0.006219 and 0.061227 
after perturbation, mean and variance of data mean embedding are 0.006713 and 0.145505 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.503
PRC on test generated data is 0.337

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.339

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.498
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.560
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.528
PRC on test generated data is 0.351

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.497
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.338

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.603
PRC on test generated data is 0.448
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.350


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52813695 0.5        0.5        0.49912653 0.54873472 0.53415535
 0.55142019 0.51055607 0.50983421 0.49971582 0.50105757 0.52478021]
Average PRC each method:  [0.34553287 0.33136201 0.33136201 0.33107323 0.36213062 0.35186097
 0.3651583  0.34013923 0.33877433 0.33159412 0.33198647 0.3581908 ]
Std ROC each method:  [0.01747748 0.         0.         0.00164902 0.03050783 0.04997836
 0.04204675 0.00926605 0.00948067 0.00130935 0.00241681 0.05100664]
Std PRC each method:  [0.01464322 0.01128321 0.01128321 0.01141426 0.0232442  0.03907031
 0.0347192  0.01182968 0.01146538 0.01177375 0.01155729 0.04536378]
Average over repetitions across all methods
Average ROC:  0.5172931352137555
Average PRC:  0.3432637467718274
Std ROC:  0.0007254846454909787
Variance PRC:  0.012058032062861115 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.525} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6936803 0.3063197] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69190791 0.30809209]
before perturbation, mean and variance of data mean embedding are 0.006242 and 0.061978 
after perturbation, mean and variance of data mean embedding are 0.006106 and 0.142082 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.609
PRC on test generated data is 0.389

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.624
PRC on test generated data is 0.407

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.494
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.542
PRC on test generated data is 0.347
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.340


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69628253 0.30371747] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6993537 0.3006463]
before perturbation, mean and variance of data mean embedding are 0.006223 and 0.062150 
after perturbation, mean and variance of data mean embedding are 0.006584 and 0.142393 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.533
PRC on test generated data is 0.366

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.334

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.552
PRC on test generated data is 0.358

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.341

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.638
PRC on test generated data is 0.416

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.545
PRC on test generated data is 0.364

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.639
PRC on test generated data is 0.465
----------------------------------------
roc mean across methods is 0.536
prc mean across methods is 0.360


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68736059 0.31263941] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68557718 0.31442282]
before perturbation, mean and variance of data mean embedding are 0.006230 and 0.061806 
after perturbation, mean and variance of data mean embedding are 0.004750 and 0.141913 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.311

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.595
PRC on test generated data is 0.369

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.592
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.543
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.319

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.319

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.312
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.325


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6866171 0.3133829] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68710418 0.31289582]
before perturbation, mean and variance of data mean embedding are 0.006244 and 0.061664 
after perturbation, mean and variance of data mean embedding are 0.006121 and 0.142092 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.514
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.546
PRC on test generated data is 0.345

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.559
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.576
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.310

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.570
PRC on test generated data is 0.363
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.324


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69107807 0.30892193] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69315979 0.30684021]
before perturbation, mean and variance of data mean embedding are 0.006228 and 0.061728 
after perturbation, mean and variance of data mean embedding are 0.006707 and 0.141853 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.558
PRC on test generated data is 0.373

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.523
PRC on test generated data is 0.332

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.599
PRC on test generated data is 0.386

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.513
PRC on test generated data is 0.332

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.544
PRC on test generated data is 0.348

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.616
PRC on test generated data is 0.440
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.346


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54270249 0.5        0.5        0.50049146 0.56819522 0.51727455
 0.57971437 0.51217264 0.5083434  0.50366964 0.52016359 0.57396839]
Average PRC each method:  [0.35114045 0.31958406 0.31958406 0.32016242 0.36239192 0.32954552
 0.36921567 0.32984233 0.32669672 0.32273594 0.3333445  0.38553195]
Std ROC each method:  [0.03842547 0.         0.         0.00125582 0.03646097 0.0223679
 0.04767883 0.01626739 0.0046398  0.00512714 0.02030372 0.04928318]
Std PRC each method:  [0.0316381  0.00856791 0.00856791 0.00908912 0.02555386 0.01052356
 0.0309815  0.01162882 0.01229587 0.01066276 0.01988181 0.05761852]
Average over repetitions across all methods
Average ROC:  0.5272246447545925
Average PRC:  0.3391479600820352
Std ROC:  0.005896267615680449
Variance PRC:  0.013473666334109955 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.55} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69953221 0.30046779] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70443527 0.29556473]
before perturbation, mean and variance of data mean embedding are 0.006267 and 0.062310 
after perturbation, mean and variance of data mean embedding are 0.006136 and 0.138575 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.592
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.306

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.540
PRC on test generated data is 0.331

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.498
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.559
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.308

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.484
PRC on test generated data is 0.300
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.315


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70349046 0.29650954] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70406718 0.29593282]
before perturbation, mean and variance of data mean embedding are 0.006247 and 0.062286 
after perturbation, mean and variance of data mean embedding are 0.006597 and 0.138763 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.541
PRC on test generated data is 0.337

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.316

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.640
PRC on test generated data is 0.398

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.528
PRC on test generated data is 0.329

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.538
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.316

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.645
PRC on test generated data is 0.458
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.341


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69701331 0.30298669] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69665381 0.30334619]
before perturbation, mean and variance of data mean embedding are 0.006245 and 0.061951 
after perturbation, mean and variance of data mean embedding are 0.004812 and 0.138308 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.520
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.535
PRC on test generated data is 0.317

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.615
PRC on test generated data is 0.378

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.589
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.591
PRC on test generated data is 0.356
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.319


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69629363 0.30370637] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69197704 0.30802296]
before perturbation, mean and variance of data mean embedding are 0.006240 and 0.062058 
after perturbation, mean and variance of data mean embedding are 0.006120 and 0.138591 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.305

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.620
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.309

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.572
PRC on test generated data is 0.351
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.311


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.697733 0.302267] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69794822 0.30205178]
before perturbation, mean and variance of data mean embedding are 0.006219 and 0.062056 
after perturbation, mean and variance of data mean embedding are 0.006682 and 0.138304 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.507
PRC on test generated data is 0.305

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.302

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.577
PRC on test generated data is 0.346

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.315

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.577
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.324

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.536
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.310

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.637
PRC on test generated data is 0.447
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.328


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53210215 0.5        0.5        0.4993955  0.56119576 0.5327805
 0.56911272 0.51306008 0.51048498 0.50216724 0.50264624 0.58584097]
Average PRC each method:  [0.32225208 0.30478589 0.30478589 0.30468927 0.33928079 0.325568
 0.34514671 0.31684119 0.3135669  0.30710186 0.3065845  0.38242672]
Std ROC each method:  [0.03321184 0.         0.         0.0005387  0.04458616 0.04282561
 0.039846   0.0143442  0.0133314  0.00367617 0.00449789 0.0577793 ]
Std PRC each method:  [0.02259863 0.00600791 0.00600791 0.00605137 0.03252418 0.0282803
 0.01816903 0.01737108 0.01132635 0.00491078 0.00616347 0.06078302]
Average over repetitions across all methods
Average ROC:  0.5257321773928777
Average PRC:  0.32275248402457957
Std ROC:  0.007530444178421667
Variance PRC:  0.010468514473827725 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.575} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71154517 0.28845483] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71001881 0.28998119]
before perturbation, mean and variance of data mean embedding are 0.006272 and 0.062911 
after perturbation, mean and variance of data mean embedding are 0.006145 and 0.135477 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.590
PRC on test generated data is 0.351

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.594
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.338

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.480
PRC on test generated data is 0.296
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.314


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71294036 0.28705964] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71459581 0.28540419]
before perturbation, mean and variance of data mean embedding are 0.006208 and 0.062618 
after perturbation, mean and variance of data mean embedding are 0.006547 and 0.135545 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.532
PRC on test generated data is 0.326

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.561
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.307

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.638
PRC on test generated data is 0.434
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.322


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70735961 0.29264039] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70421931 0.29578069]
before perturbation, mean and variance of data mean embedding are 0.006218 and 0.062570 
after perturbation, mean and variance of data mean embedding are 0.004828 and 0.135244 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.550
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.294

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.538
PRC on test generated data is 0.313

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.551
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.594
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.295

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.602
PRC on test generated data is 0.361
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.310


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70561563 0.29438437] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70630602 0.29369398]
before perturbation, mean and variance of data mean embedding are 0.006254 and 0.062578 
after perturbation, mean and variance of data mean embedding are 0.006138 and 0.135443 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.521
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.623
PRC on test generated data is 0.367

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.516
PRC on test generated data is 0.297
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.301


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70666202 0.29333798] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71019526 0.28980474]
before perturbation, mean and variance of data mean embedding are 0.006203 and 0.062338 
after perturbation, mean and variance of data mean embedding are 0.006652 and 0.135047 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.595
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.296

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.533
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.301


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53327535 0.5        0.5        0.49953917 0.55847711 0.52252949
 0.54448398 0.51025    0.50561196 0.5        0.50131851 0.54706721]
Average PRC each method:  [0.31759688 0.29715216 0.29715216 0.29715216 0.33037973 0.30928811
 0.324043   0.30850251 0.30238248 0.29715216 0.29794541 0.33581172]
Std ROC each method:  [0.03602405 0.         0.         0.00092166 0.04187456 0.02744744
 0.04230439 0.0122701  0.00513811 0.         0.00150319 0.06153266]
Std PRC each method:  [0.0231583  0.00671758 0.00671758 0.00671758 0.02549065 0.01939499
 0.02757606 0.01662893 0.0058623  0.00671758 0.00645119 0.05513402]
Average over repetitions across all methods
Average ROC:  0.5185460657096739
Average PRC:  0.30954653850806746
Std ROC:  0.005237700367306449
Variance PRC:  0.008311057166139791 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.6} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72284264 0.27715736] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72558386 0.27441614]
before perturbation, mean and variance of data mean embedding are 0.006225 and 0.063159 
after perturbation, mean and variance of data mean embedding are 0.006101 and 0.132468 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.568
PRC on test generated data is 0.335

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.600
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.525
PRC on test generated data is 0.329

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.476
PRC on test generated data is 0.292
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.310


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71844332 0.28155668] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71701131 0.28298869]
before perturbation, mean and variance of data mean embedding are 0.006238 and 0.062651 
after perturbation, mean and variance of data mean embedding are 0.006567 and 0.132380 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.527
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.292

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.584
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.537
PRC on test generated data is 0.312

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.520
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.524
PRC on test generated data is 0.320

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.641
PRC on test generated data is 0.422
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.313


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71878173 0.28121827] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71648069 0.28351931]
before perturbation, mean and variance of data mean embedding are 0.006213 and 0.062798 
after perturbation, mean and variance of data mean embedding are 0.004865 and 0.132220 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.556
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.293

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.536
PRC on test generated data is 0.308

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.296

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.296

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.293

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.569
PRC on test generated data is 0.328
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.299


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71404399 0.28595601] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71658106 0.28341894]
before perturbation, mean and variance of data mean embedding are 0.006214 and 0.062704 
after perturbation, mean and variance of data mean embedding are 0.006102 and 0.132358 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.538
PRC on test generated data is 0.298

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.548
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.562
PRC on test generated data is 0.317
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.287


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.7143824 0.2856176] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71913047 0.28086953]
before perturbation, mean and variance of data mean embedding are 0.006231 and 0.062862 
after perturbation, mean and variance of data mean embedding are 0.006667 and 0.132111 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.505
PRC on test generated data is 0.283

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.619
PRC on test generated data is 0.348

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.578
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.536
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.282

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.284

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.635
PRC on test generated data is 0.436
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.305


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51862564 0.5        0.5        0.4995762  0.54635839 0.5240769
 0.55439004 0.5146764  0.50567548 0.50482934 0.50619922 0.576688  ]
Average PRC each method:  [0.29727037 0.2887135  0.2887135  0.28866983 0.31308198 0.30004499
 0.31853154 0.29821597 0.29372551 0.29463227 0.29540533 0.35911901]
Std ROC each method:  [0.02090646 0.         0.         0.00128696 0.04375582 0.033137
 0.03151508 0.01356623 0.00741467 0.00965868 0.00932231 0.05965998]
Std PRC each method:  [0.0137076  0.00756049 0.00756049 0.00775763 0.02346059 0.01865745
 0.02293106 0.00779313 0.01120952 0.01475951 0.01729878 0.05852773]
Average over repetitions across all methods
Average ROC:  0.5209246332495694
Average PRC:  0.30301031727136296
Std ROC:  0.008103421688185373
Variance PRC:  0.009240021998558806 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.625} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.73085771 0.26914229] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72917042 0.27082958]
before perturbation, mean and variance of data mean embedding are 0.006226 and 0.063612 
after perturbation, mean and variance of data mean embedding are 0.006106 and 0.129765 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.573
PRC on test generated data is 0.328

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.666
PRC on test generated data is 0.387

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.517
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.590
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.293

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.523
PRC on test generated data is 0.303
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.310


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72724285 0.27275715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72760406 0.27239594]
before perturbation, mean and variance of data mean embedding are 0.006228 and 0.063418 
after perturbation, mean and variance of data mean embedding are 0.006547 and 0.129812 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.516
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.284

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.609
PRC on test generated data is 0.355

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.538
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.556
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.288

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.286

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.643
PRC on test generated data is 0.414
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.306


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72954321 0.27045679] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72520073 0.27479927]
before perturbation, mean and variance of data mean embedding are 0.006192 and 0.063261 
after perturbation, mean and variance of data mean embedding are 0.004883 and 0.129499 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.553
PRC on test generated data is 0.320

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.672
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.516
PRC on test generated data is 0.296

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.592
PRC on test generated data is 0.348
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.306


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72855734 0.27144266] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73141957 0.26858043]
before perturbation, mean and variance of data mean embedding are 0.006247 and 0.063475 
after perturbation, mean and variance of data mean embedding are 0.006138 and 0.129769 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.527
PRC on test generated data is 0.298

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.547
PRC on test generated data is 0.311

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.531
PRC on test generated data is 0.300

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.489
PRC on test generated data is 0.284
----------------------------------------
roc mean across methods is 0.509
prc mean across methods is 0.291


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72034177 0.27965823] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72300425 0.27699575]
before perturbation, mean and variance of data mean embedding are 0.006268 and 0.063295 
after perturbation, mean and variance of data mean embedding are 0.006691 and 0.129360 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.518
PRC on test generated data is 0.275

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.267

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.549
PRC on test generated data is 0.290

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.544
PRC on test generated data is 0.286

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.536
PRC on test generated data is 0.287

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.268

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.268

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.267
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.273


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52800655 0.5        0.5        0.49978845 0.58481608 0.55418494
 0.54585101 0.50383616 0.50306317 0.5        0.50088484 0.54938026]
Average PRC each method:  [0.29662012 0.28367816 0.28367816 0.28367816 0.33269256 0.31301371
 0.30718089 0.28758495 0.28641922 0.28367816 0.28429319 0.32325831]
Std ROC each method:  [0.02359673 0.         0.         0.00025913 0.04684514 0.06083604
 0.02549218 0.00403239 0.0039007  0.         0.00122464 0.05900199]
Std PRC each method:  [0.01746171 0.00857964 0.00857964 0.00857964 0.03454206 0.03906445
 0.01944738 0.01193177 0.00978446 0.00857964 0.0086505  0.05302899]
Average over repetitions across all methods
Average ROC:  0.5224842883792933
Average PRC:  0.29714796560152557
Std ROC:  0.009993783488368383
Variance PRC:  0.013588719506706143 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.4} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63422222 0.36577778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6343384 0.3656616]
before perturbation, mean and variance of data mean embedding are 0.003181 and 0.043156 
after perturbation, mean and variance of data mean embedding are 0.002477 and 0.158650 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.532
PRC on test generated data is 0.408

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.588
PRC on test generated data is 0.440

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.565
PRC on test generated data is 0.436

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.539
PRC on test generated data is 0.417

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.523
PRC on test generated data is 0.415

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.515
PRC on test generated data is 0.405

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.552
PRC on test generated data is 0.423
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.408


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63377778 0.36622222] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63336487 0.36663513]
before perturbation, mean and variance of data mean embedding are 0.003162 and 0.042908 
after perturbation, mean and variance of data mean embedding are 0.003741 and 0.158741 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.511
PRC on test generated data is 0.396

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.390

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.620
PRC on test generated data is 0.472

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.395

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.518
PRC on test generated data is 0.403

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.392

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.390

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.543
PRC on test generated data is 0.412
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.401


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.616 0.384] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61015613 0.38984387]
before perturbation, mean and variance of data mean embedding are 0.003149 and 0.042419 
after perturbation, mean and variance of data mean embedding are 0.001987 and 0.158125 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.597
PRC on test generated data is 0.406

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.350

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.535
PRC on test generated data is 0.373

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.553
PRC on test generated data is 0.377

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.557
PRC on test generated data is 0.377

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.548
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.498
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.349

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.536
PRC on test generated data is 0.373

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.556
PRC on test generated data is 0.382
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.368


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.61822222 0.38177778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61840563 0.38159437]
before perturbation, mean and variance of data mean embedding are 0.003180 and 0.042753 
after perturbation, mean and variance of data mean embedding are 0.003035 and 0.158518 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.518
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.353

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.594
PRC on test generated data is 0.403

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.562
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.525
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.375

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.363

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.535
PRC on test generated data is 0.387

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.523
PRC on test generated data is 0.370

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.359
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.371


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63022222 0.36977778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6314182 0.3685818]
before perturbation, mean and variance of data mean embedding are 0.003164 and 0.042897 
after perturbation, mean and variance of data mean embedding are 0.003600 and 0.159152 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.493
PRC on test generated data is 0.379

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.560
PRC on test generated data is 0.415

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.397

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.532
PRC on test generated data is 0.402

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.537
PRC on test generated data is 0.402

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.516
PRC on test generated data is 0.392

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.536
PRC on test generated data is 0.412

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.496
PRC on test generated data is 0.380

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.419
PRC on test generated data is 0.349
----------------------------------------
roc mean across methods is 0.510
prc mean across methods is 0.389


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52521143 0.5        0.50043626 0.50507333 0.57170137 0.54952136
 0.53755841 0.51322005 0.51648155 0.51875411 0.51392903 0.51606957]
Average PRC each method:  [0.38758055 0.37264249 0.37302163 0.37706518 0.4150704  0.40184059
 0.39681304 0.38097372 0.38355334 0.39029431 0.38364605 0.38484007]
Std ROC each method:  [0.0365091  0.         0.00087251 0.015026   0.03108847 0.02671019
 0.01697205 0.01788839 0.01210263 0.01584355 0.01483237 0.05125725]
Std PRC each method:  [0.0140119  0.01821713 0.01771706 0.01374389 0.03124481 0.02075926
 0.02430449 0.018951   0.02255509 0.0235555  0.01271982 0.02898048]
Average over repetitions across all methods
Average ROC:  0.5223297052261175
Average PRC:  0.38727844721490234
Std ROC:  0.0079489996162412
Variance PRC:  0.015981108375971404 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.425} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6471343 0.3528657] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6545094 0.3454906]
before perturbation, mean and variance of data mean embedding are 0.003148 and 0.043105 
after perturbation, mean and variance of data mean embedding are 0.002471 and 0.153118 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.529
PRC on test generated data is 0.389

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.522
PRC on test generated data is 0.385

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.373

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.591
PRC on test generated data is 0.426

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.589
PRC on test generated data is 0.430

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.406

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.403

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.381

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.380

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.554
PRC on test generated data is 0.407
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.395


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64927288 0.35072712] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65169352 0.34830648]
before perturbation, mean and variance of data mean embedding are 0.003171 and 0.043190 
after perturbation, mean and variance of data mean embedding are 0.003728 and 0.153270 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.379

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.535
PRC on test generated data is 0.398

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.520
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.598
PRC on test generated data is 0.453

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.379

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.383
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.389


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63088109 0.36911891] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63014306 0.36985694]
before perturbation, mean and variance of data mean embedding are 0.003143 and 0.042664 
after perturbation, mean and variance of data mean embedding are 0.002025 and 0.152673 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.565
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.538
PRC on test generated data is 0.364

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.544
PRC on test generated data is 0.357

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.591
PRC on test generated data is 0.397

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.588
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.517
PRC on test generated data is 0.347

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.539
PRC on test generated data is 0.365

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.336
----------------------------------------
roc mean across methods is 0.534
prc mean across methods is 0.358


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63473054 0.36526946] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63611916 0.36388084]
before perturbation, mean and variance of data mean embedding are 0.003182 and 0.043024 
after perturbation, mean and variance of data mean embedding are 0.003043 and 0.153063 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.531
PRC on test generated data is 0.361

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.494
PRC on test generated data is 0.344

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.570
PRC on test generated data is 0.386

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.592
PRC on test generated data is 0.401

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.571
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.528
PRC on test generated data is 0.365

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.356

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.352
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.361


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64499572 0.35500428] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64902393 0.35097607]
before perturbation, mean and variance of data mean embedding are 0.003148 and 0.043004 
after perturbation, mean and variance of data mean embedding are 0.003568 and 0.153631 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.521
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.496
PRC on test generated data is 0.367

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.621
PRC on test generated data is 0.459

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.523
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.626
PRC on test generated data is 0.445

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.371

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.493
PRC on test generated data is 0.367

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.369

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.542
PRC on test generated data is 0.391
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.388


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52901604 0.50436561 0.5        0.50456886 0.57224885 0.52910138
 0.58287386 0.53102441 0.53422017 0.50584714 0.50983154 0.52350572]
Average PRC each method:  [0.37768032 0.362688   0.36051844 0.36564305 0.40496655 0.37864693
 0.40993203 0.38478577 0.38675888 0.36585584 0.36758484 0.37382688]
Std ROC each method:  [0.02087575 0.00873121 0.         0.01658444 0.03102578 0.03314866
 0.03459251 0.0217058  0.03392278 0.00857079 0.01494915 0.02063024]
Std PRC each method:  [0.00915627 0.01903999 0.01690335 0.01179992 0.03477373 0.01751944
 0.02351278 0.01665869 0.03843057 0.01326455 0.01267141 0.02613419]
Average over repetitions across all methods
Average ROC:  0.527216963660798
Average PRC:  0.3782406285125631
Std ROC:  0.007230432211216162
Variance PRC:  0.01523739174595335 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.45} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66075845 0.33924155] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65894497 0.34105503]
before perturbation, mean and variance of data mean embedding are 0.003162 and 0.043446 
after perturbation, mean and variance of data mean embedding are 0.002509 and 0.148112 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.610
PRC on test generated data is 0.425

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.538
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.567
PRC on test generated data is 0.402

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.371

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.524
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.555
PRC on test generated data is 0.396
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.378


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66158285 0.33841715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66007504 0.33992496]
before perturbation, mean and variance of data mean embedding are 0.003172 and 0.043542 
after perturbation, mean and variance of data mean embedding are 0.003709 and 0.148275 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.364

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.482
PRC on test generated data is 0.364

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.610
PRC on test generated data is 0.438

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.537
PRC on test generated data is 0.383
----------------------------------------
roc mean across methods is 0.511
prc mean across methods is 0.372


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65127782 0.34872218] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65052634 0.34947366]
before perturbation, mean and variance of data mean embedding are 0.003178 and 0.043308 
after perturbation, mean and variance of data mean embedding are 0.002101 and 0.147755 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.557
PRC on test generated data is 0.373

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.496
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.622
PRC on test generated data is 0.409

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.568
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.617
PRC on test generated data is 0.424

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.342

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.353

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.530
PRC on test generated data is 0.354
----------------------------------------
roc mean across methods is 0.536
prc mean across methods is 0.363


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64715581 0.35284419] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65194064 0.34805936]
before perturbation, mean and variance of data mean embedding are 0.003182 and 0.043324 
after perturbation, mean and variance of data mean embedding are 0.003048 and 0.148043 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.554
PRC on test generated data is 0.360

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.620
PRC on test generated data is 0.412

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.629
PRC on test generated data is 0.406

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.644
PRC on test generated data is 0.420

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.342

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.335
----------------------------------------
roc mean across methods is 0.541
prc mean across methods is 0.356


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65787304 0.34212696] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65367607 0.34632393]
before perturbation, mean and variance of data mean embedding are 0.003149 and 0.043349 
after perturbation, mean and variance of data mean embedding are 0.003554 and 0.148619 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.356

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.592
PRC on test generated data is 0.403

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.600
PRC on test generated data is 0.413

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.529
PRC on test generated data is 0.375

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.358

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.552
PRC on test generated data is 0.383
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.369


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52228283 0.5        0.5        0.4990117  0.58527628 0.54735768
 0.58428472 0.5102464  0.53852397 0.50202667 0.50273263 0.53653879]
Average PRC each method:  [0.3628241  0.35043228 0.35043228 0.3504517  0.40264556 0.37999571
 0.40253762 0.35857198 0.37943883 0.35314076 0.3535831  0.37015886]
Std ROC each method:  [0.0273149  0.         0.         0.00146128 0.05272277 0.04787015
 0.04875594 0.00801549 0.04042555 0.00339154 0.0038646  0.01679829]
Std PRC each method:  [0.00572404 0.01307848 0.01307848 0.01308275 0.02054573 0.01717121
 0.03338705 0.01310737 0.02583051 0.00951892 0.012161   0.0223406 ]
Average over repetitions across all methods
Average ROC:  0.5273568045404338
Average PRC:  0.36785106425122926
Std ROC:  0.01021614604207431
Variance PRC:  0.0073488351802076 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.475} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67157058 0.32842942] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67165795 0.32834205]
before perturbation, mean and variance of data mean embedding are 0.003190 and 0.043881 
after perturbation, mean and variance of data mean embedding are 0.002560 and 0.143464 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.520
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.489
PRC on test generated data is 0.347

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.649
PRC on test generated data is 0.438

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.363

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.497
PRC on test generated data is 0.347

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.348

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.554
PRC on test generated data is 0.381
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.360


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67673956 0.32326044] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67869056 0.32130944]
before perturbation, mean and variance of data mean embedding are 0.003166 and 0.043875 
after perturbation, mean and variance of data mean embedding are 0.003684 and 0.143589 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.359

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.586
PRC on test generated data is 0.409

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.584
PRC on test generated data is 0.403

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.515
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.377
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.369


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66202783 0.33797217] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66564102 0.33435898]
before perturbation, mean and variance of data mean embedding are 0.003146 and 0.043350 
after perturbation, mean and variance of data mean embedding are 0.002107 and 0.142995 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.531
PRC on test generated data is 0.339

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.331

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.550
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.538
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.332

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.325
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.331


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66043738 0.33956262] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66415188 0.33584812]
before perturbation, mean and variance of data mean embedding are 0.003162 and 0.043569 
after perturbation, mean and variance of data mean embedding are 0.003033 and 0.143336 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.321

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.596
PRC on test generated data is 0.386

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.537
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.324
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.330


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66878728 0.33121272] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67232324 0.32767676]
before perturbation, mean and variance of data mean embedding are 0.003151 and 0.043716 
after perturbation, mean and variance of data mean embedding are 0.003541 and 0.143923 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.533
PRC on test generated data is 0.357

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.684
PRC on test generated data is 0.456

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.527
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.551
PRC on test generated data is 0.373

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.542
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.342

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.539
PRC on test generated data is 0.360
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.360


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51692043 0.5        0.5        0.49757988 0.55506215 0.51910558
 0.56751305 0.53000421 0.51299802 0.49885086 0.50179969 0.52693366]
Average PRC each method:  [0.34720562 0.33840445 0.33840445 0.33840445 0.37264363 0.34828015
 0.37981353 0.35715726 0.34887165 0.33829374 0.3404979  0.35325934]
Std ROC each method:  [0.0145733  0.         0.         0.00415463 0.07240756 0.03282139
 0.04917468 0.01693363 0.01525115 0.00106789 0.002098   0.02035923]
Std PRC each method:  [0.01511026 0.01409774 0.01409774 0.01409774 0.05169742 0.0285167
 0.03155258 0.01074095 0.01758485 0.01408345 0.01301681 0.02453326]
Average over repetitions across all methods
Average ROC:  0.5188972944941757
Average PRC:  0.35010301549971584
Std ROC:  0.006941765891592835
Variance PRC:  0.01623393590740746 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.5} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67986092 0.32013908]
before perturbation, mean and variance of data mean embedding are 0.003173 and 0.044149 
after perturbation, mean and variance of data mean embedding are 0.002565 and 0.139153 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.573
PRC on test generated data is 0.378

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.596
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.550
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.517
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.338

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.337

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.523
PRC on test generated data is 0.348
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.348


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68843642 0.31156358] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69269497 0.30730503]
before perturbation, mean and variance of data mean embedding are 0.003192 and 0.044368 
after perturbation, mean and variance of data mean embedding are 0.003692 and 0.139352 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.356

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.598
PRC on test generated data is 0.416

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.485
PRC on test generated data is 0.342
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.358


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67652708 0.32347292] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67469751 0.32530249]
before perturbation, mean and variance of data mean embedding are 0.003162 and 0.043972 
after perturbation, mean and variance of data mean embedding are 0.002158 and 0.138794 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.555
PRC on test generated data is 0.365

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.569
PRC on test generated data is 0.365

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.542
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.320

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.562
PRC on test generated data is 0.357

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.321
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.337


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6749904 0.3250096] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67699182 0.32300818]
before perturbation, mean and variance of data mean embedding are 0.003186 and 0.043929 
after perturbation, mean and variance of data mean embedding are 0.003061 and 0.139061 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.539
PRC on test generated data is 0.338

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.531
PRC on test generated data is 0.332

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.604
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.551
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.516
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.320

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.318
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.331


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68438008 0.31561992]
before perturbation, mean and variance of data mean embedding are 0.003194 and 0.044306 
after perturbation, mean and variance of data mean embedding are 0.003571 and 0.139707 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.528
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.626
PRC on test generated data is 0.433

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.605
PRC on test generated data is 0.392

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.556
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.567
PRC on test generated data is 0.406

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.339

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.351
----------------------------------------
roc mean across methods is 0.535
prc mean across methods is 0.360


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52455822 0.5        0.5        0.50003095 0.56259288 0.53368986
 0.57992322 0.53835685 0.52021882 0.50035562 0.51305948 0.50877176]
Average PRC each method:  [0.34720592 0.33136201 0.33136201 0.33137602 0.37277726 0.34918808
 0.38277309 0.35568141 0.35169016 0.33206191 0.3393337  0.3361036 ]
Std ROC each method:  [2.18327388e-02 0.00000000e+00 0.00000000e+00 6.19094648e-05
 3.86748520e-02 3.39611235e-02 2.77977986e-02 1.40014721e-02
 2.39897358e-02 1.78209547e-03 2.45572974e-02 1.70657881e-02]
Std PRC each method:  [0.01035559 0.01128321 0.01128321 0.0112701  0.03376707 0.02243731
 0.02627905 0.01540238 0.02866045 0.01098412 0.01335203 0.01387834]
Average over repetitions across all methods
Average ROC:  0.5234631385275004
Average PRC:  0.346742930330366
Std ROC:  0.006877910116921627
Variance PRC:  0.011396939427739205 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.525} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6936803 0.3063197] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69256558 0.30743442]
before perturbation, mean and variance of data mean embedding are 0.003171 and 0.044308 
after perturbation, mean and variance of data mean embedding are 0.002582 and 0.135166 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.329

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.610
PRC on test generated data is 0.409

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.587
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.618
PRC on test generated data is 0.413

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.530
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.340
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.347


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69628253 0.30371747] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69427354 0.30572646]
before perturbation, mean and variance of data mean embedding are 0.003188 and 0.044669 
after perturbation, mean and variance of data mean embedding are 0.003672 and 0.135409 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.515
PRC on test generated data is 0.339

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.624
PRC on test generated data is 0.411

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.335

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.564
PRC on test generated data is 0.366
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.343


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68736059 0.31263941] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68610588 0.31389412]
before perturbation, mean and variance of data mean embedding are 0.003173 and 0.044234 
after perturbation, mean and variance of data mean embedding are 0.002201 and 0.134841 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.314

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.551
PRC on test generated data is 0.343

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.527
PRC on test generated data is 0.324

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.311
----------------------------------------
roc mean across methods is 0.507
prc mean across methods is 0.315


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6866171 0.3133829] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68604329 0.31395671]
before perturbation, mean and variance of data mean embedding are 0.003193 and 0.044497 
after perturbation, mean and variance of data mean embedding are 0.003072 and 0.135208 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.535
PRC on test generated data is 0.333

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.544
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.617
PRC on test generated data is 0.408

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.518
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.310

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.477
PRC on test generated data is 0.300
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.322


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69107807 0.30892193] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69520152 0.30479848]
before perturbation, mean and variance of data mean embedding are 0.003174 and 0.044426 
after perturbation, mean and variance of data mean embedding are 0.003539 and 0.135690 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.545
PRC on test generated data is 0.342

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.556
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.587
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.322

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.545
PRC on test generated data is 0.342
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.333


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.50535309 0.5        0.5        0.5        0.57277723 0.52560904
 0.56476932 0.50782722 0.52237523 0.5        0.50107923 0.52258336]
Average PRC each method:  [0.32221427 0.31958406 0.31958406 0.31958406 0.36774751 0.33342837
 0.36718916 0.32527789 0.33691363 0.31958406 0.32071456 0.3320868 ]
Std ROC each method:  [0.00540153 0.         0.         0.         0.03659422 0.03541004
 0.04575923 0.01123169 0.03285687 0.         0.00120745 0.03089333]
Std PRC each method:  [0.01080528 0.00856791 0.00856791 0.00856791 0.03468707 0.02091827
 0.0369087  0.01423623 0.02649464 0.00856791 0.00943802 0.02365623]
Average over repetitions across all methods
Average ROC:  0.5185311438402644
Average PRC:  0.3319923671587357
Std ROC:  0.007831171385947676
Variance PRC:  0.012084652940436681 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.55} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69953221 0.30046779] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69837868 0.30162132]
before perturbation, mean and variance of data mean embedding are 0.003180 and 0.044598 
after perturbation, mean and variance of data mean embedding are 0.002611 and 0.131406 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.588
PRC on test generated data is 0.351

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.306

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.546
PRC on test generated data is 0.336

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.557
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.546
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.513
PRC on test generated data is 0.317

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.321
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.320


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70349046 0.29650954] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70208966 0.29791034]
before perturbation, mean and variance of data mean embedding are 0.003158 and 0.044623 
after perturbation, mean and variance of data mean embedding are 0.003627 and 0.131524 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.544
PRC on test generated data is 0.341

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.571
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.489
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.320
----------------------------------------
roc mean across methods is 0.510
prc mean across methods is 0.321


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69701331 0.30298669] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69854832 0.30145168]
before perturbation, mean and variance of data mean embedding are 0.003196 and 0.044696 
after perturbation, mean and variance of data mean embedding are 0.002255 and 0.131146 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.561
PRC on test generated data is 0.341

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.629
PRC on test generated data is 0.389

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.551
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.312

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.314


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69629363 0.30370637] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69190069 0.30809931]
before perturbation, mean and variance of data mean embedding are 0.003188 and 0.044706 
after perturbation, mean and variance of data mean embedding are 0.003070 and 0.131412 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.524
PRC on test generated data is 0.315

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.598
PRC on test generated data is 0.347

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.531
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.302
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.306


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.697733 0.302267] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69502145 0.30497855]
before perturbation, mean and variance of data mean embedding are 0.003163 and 0.044461 
after perturbation, mean and variance of data mean embedding are 0.003516 and 0.131828 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.566
PRC on test generated data is 0.339

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.302

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.621
PRC on test generated data is 0.376

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.600
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.495
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.544
PRC on test generated data is 0.324
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.318


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54775728 0.5        0.5        0.49915618 0.58761461 0.54568642
 0.52496063 0.50093116 0.50469584 0.5002809  0.50262496 0.51746117]
Average PRC each method:  [0.33233525 0.30478589 0.30478589 0.30478589 0.35782498 0.32764549
 0.3193048  0.30587111 0.3088979  0.30517977 0.30690981 0.31333781]
Std ROC each method:  [0.03161663 0.         0.         0.00117951 0.03640624 0.03967779
 0.02313924 0.00419903 0.00508933 0.0005618  0.00524993 0.01655318]
Std PRC each method:  [0.01439564 0.00600791 0.00600791 0.00600791 0.02081314 0.02372552
 0.0104265  0.00640609 0.00608164 0.00566441 0.00782766 0.01010217]
Average over repetitions across all methods
Average ROC:  0.5192640976745748
Average PRC:  0.3159720491635525
Std ROC:  0.006953970262485043
Variance PRC:  0.005507215553181944 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.575} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71154517 0.28845483] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70460673 0.29539327]
before perturbation, mean and variance of data mean embedding are 0.003171 and 0.044947 
after perturbation, mean and variance of data mean embedding are 0.002619 and 0.127981 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.562
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.611
PRC on test generated data is 0.378

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.603
PRC on test generated data is 0.378

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.322
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.322


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71294036 0.28705964] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70919734 0.29080266]
before perturbation, mean and variance of data mean embedding are 0.003176 and 0.045117 
after perturbation, mean and variance of data mean embedding are 0.003630 and 0.128138 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.504
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.591
PRC on test generated data is 0.367

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.601
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.622
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.514
PRC on test generated data is 0.320

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.481
PRC on test generated data is 0.299
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.324


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70735961 0.29264039] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70298582 0.29701418]
before perturbation, mean and variance of data mean embedding are 0.003172 and 0.044863 
after perturbation, mean and variance of data mean embedding are 0.002261 and 0.127650 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.535
PRC on test generated data is 0.310

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.550
PRC on test generated data is 0.317

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.629
PRC on test generated data is 0.383

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.300

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.294
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.306


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70561563 0.29438437] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70723656 0.29276344]
before perturbation, mean and variance of data mean embedding are 0.003185 and 0.044930 
after perturbation, mean and variance of data mean embedding are 0.003071 and 0.127925 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.556
PRC on test generated data is 0.323

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.299

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.296

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.302
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.298


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70666202 0.29333798] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71254675 0.28745325]
before perturbation, mean and variance of data mean embedding are 0.003180 and 0.044931 
after perturbation, mean and variance of data mean embedding are 0.003522 and 0.128421 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.293

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.566
PRC on test generated data is 0.326

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.515
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.553
PRC on test generated data is 0.318
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.300


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53158811 0.5        0.5        0.49931034 0.56735365 0.53774299
 0.57476314 0.50885418 0.51289956 0.5        0.50321708 0.51858071]
Average PRC each method:  [0.31324388 0.29715216 0.29715216 0.29715216 0.33737082 0.31623303
 0.34629607 0.30399221 0.30767149 0.29715216 0.30024156 0.30714728]
Std ROC each method:  [0.02543726 0.         0.         0.00137931 0.03181967 0.03230234
 0.05331673 0.00560091 0.01303091 0.         0.00564496 0.02544643]
Std PRC each method:  [0.01342687 0.00671758 0.00671758 0.00671758 0.02997931 0.02471158
 0.04137809 0.00626529 0.00984703 0.00671758 0.010922   0.01113627]
Average over repetitions across all methods
Average ROC:  0.5211924800810327
Average PRC:  0.31006707968549235
Std ROC:  0.006430410008241087
Variance PRC:  0.010961644929843981 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.6} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72284264 0.27715736] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72604513 0.27395487]
before perturbation, mean and variance of data mean embedding are 0.003165 and 0.045350 
after perturbation, mean and variance of data mean embedding are 0.002630 and 0.124782 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.548
PRC on test generated data is 0.327

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.540
PRC on test generated data is 0.320

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.577
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.532
PRC on test generated data is 0.318
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.313


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71844332 0.28155668] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71751807 0.28248193]
before perturbation, mean and variance of data mean embedding are 0.003187 and 0.045169 
after perturbation, mean and variance of data mean embedding are 0.003628 and 0.124814 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.524
PRC on test generated data is 0.310

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.610
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.289
----------------------------------------
roc mean across methods is 0.511
prc mean across methods is 0.297


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71878173 0.28121827] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71782699 0.28217301]
before perturbation, mean and variance of data mean embedding are 0.003166 and 0.045197 
after perturbation, mean and variance of data mean embedding are 0.002282 and 0.124438 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.307

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.572
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.516
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.541
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.293

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.291
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.299


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71404399 0.28595601] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71548258 0.28451742]
before perturbation, mean and variance of data mean embedding are 0.003182 and 0.045197 
after perturbation, mean and variance of data mean embedding are 0.003072 and 0.124688 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.543
PRC on test generated data is 0.299

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.533
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.283
----------------------------------------
roc mean across methods is 0.507
prc mean across methods is 0.283


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.7143824 0.2856176] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71471387 0.28528613]
before perturbation, mean and variance of data mean embedding are 0.003164 and 0.045115 
after perturbation, mean and variance of data mean embedding are 0.003495 and 0.125129 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.504
PRC on test generated data is 0.283

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.522
PRC on test generated data is 0.291

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.570
PRC on test generated data is 0.315

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.566
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.283

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.567
PRC on test generated data is 0.315
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.291


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51053111 0.5        0.5        0.49988877 0.53272444 0.51582326
 0.57142998 0.51011564 0.50967499 0.5        0.5009855  0.52028796]
Average PRC each method:  [0.29433852 0.2887135  0.2887135  0.2887135  0.30530251 0.29635946
 0.32901531 0.29664551 0.29408856 0.2887135  0.28989809 0.29926035]
Std ROC each method:  [0.01892405 0.         0.         0.00022247 0.00835545 0.02711538
 0.02472528 0.01367998 0.01579872 0.         0.00087298 0.02629397]
Std PRC each method:  [0.0168947  0.00756049 0.00756049 0.00756049 0.00967776 0.01217919
 0.02200975 0.01912046 0.01285249 0.00756049 0.00788369 0.01433344]
Average over repetitions across all methods
Average ROC:  0.5142884707976321
Average PRC:  0.2966468572283384
Std ROC:  0.005080791637819045
Variance PRC:  0.009888890311618282 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.7, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.625} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.73085771 0.26914229] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73280781 0.26719219]
before perturbation, mean and variance of data mean embedding are 0.003172 and 0.045580 
after perturbation, mean and variance of data mean embedding are 0.002652 and 0.121743 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.619
PRC on test generated data is 0.365

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.542
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.493
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.296

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.528
PRC on test generated data is 0.305
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.301


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72724285 0.27275715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72366837 0.27633163]
before perturbation, mean and variance of data mean embedding are 0.003162 and 0.045408 
after perturbation, mean and variance of data mean embedding are 0.003590 and 0.121772 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.653
PRC on test generated data is 0.389

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.532
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.512
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.284

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.286
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.294


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72954321 0.27045679] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72967767 0.27032233]
before perturbation, mean and variance of data mean embedding are 0.003177 and 0.045671 
after perturbation, mean and variance of data mean embedding are 0.002318 and 0.121487 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.306

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.575
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.289
----------------------------------------
roc mean across methods is 0.509
prc mean across methods is 0.294


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72855734 0.27144266] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72837987 0.27162013]
before perturbation, mean and variance of data mean embedding are 0.003174 and 0.045583 
after perturbation, mean and variance of data mean embedding are 0.003067 and 0.121706 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.613
PRC on test generated data is 0.377

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.300

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.546
PRC on test generated data is 0.312

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.291
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.299


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.7
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.7_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72034177 0.27965823] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72143335 0.27856665]
before perturbation, mean and variance of data mean embedding are 0.003169 and 0.045272 
after perturbation, mean and variance of data mean embedding are 0.003492 and 0.122048 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.524
PRC on test generated data is 0.278

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.569
PRC on test generated data is 0.300

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.268

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.496
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.592
PRC on test generated data is 0.319
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.275


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.5        0.5        0.5        0.5        0.58865511 0.53455727
 0.52547704 0.50417197 0.50177647 0.5        0.50016332 0.52688249]
Average PRC each method:  [0.28367816 0.28367816 0.28367816 0.28367816 0.34285878 0.29970749
 0.29871065 0.28710021 0.28458483 0.28367816 0.28379517 0.29803725]
Std ROC each method:  [0.         0.         0.         0.         0.0505046  0.02237444
 0.0307246  0.01019094 0.00316051 0.         0.00032664 0.03395261]
Std PRC each method:  [0.00857964 0.00857964 0.00857964 0.00857964 0.04313382 0.00684559
 0.0220668  0.01142931 0.00943444 0.00857964 0.00858074 0.01253346]
Average over repetitions across all methods
Average ROC:  0.5151403062552707
Average PRC:  0.29276543376193753
Std ROC:  0.003215811404490167
Variance PRC:  0.009070292994697167 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.4} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63422222 0.36577778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63637878 0.36362122]
before perturbation, mean and variance of data mean embedding are 0.042628 and 0.144486 
after perturbation, mean and variance of data mean embedding are 0.042912 and 0.211752 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.550
PRC on test generated data is 0.417

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.641
PRC on test generated data is 0.492

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.567
PRC on test generated data is 0.429

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.674
PRC on test generated data is 0.507

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.557
PRC on test generated data is 0.423

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.630
PRC on test generated data is 0.473

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.391
----------------------------------------
roc mean across methods is 0.551
prc mean across methods is 0.424


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63377778 0.36622222] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63210865 0.36789135]
before perturbation, mean and variance of data mean embedding are 0.042388 and 0.143408 
after perturbation, mean and variance of data mean embedding are 0.041031 and 0.210410 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.390
----------------------------------------
roc mean across methods is 0.500
prc mean across methods is 0.390


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.616 0.384] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6159152 0.3840848]
before perturbation, mean and variance of data mean embedding are 0.042199 and 0.142162 
after perturbation, mean and variance of data mean embedding are 0.037732 and 0.208961 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.606
PRC on test generated data is 0.409

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.355

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.350

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.646
PRC on test generated data is 0.434

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.546
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.354

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.517
PRC on test generated data is 0.359

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.541
PRC on test generated data is 0.370
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.367


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.61822222 0.38177778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61712635 0.38287365]
before perturbation, mean and variance of data mean embedding are 0.042526 and 0.142782 
after perturbation, mean and variance of data mean embedding are 0.041482 and 0.207295 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.526
PRC on test generated data is 0.370

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.354

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.556
PRC on test generated data is 0.382

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.543
PRC on test generated data is 0.375

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.569
PRC on test generated data is 0.402

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.365
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.367


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63022222 0.36977778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63096553 0.36903447]
before perturbation, mean and variance of data mean embedding are 0.042370 and 0.143464 
after perturbation, mean and variance of data mean embedding are 0.043729 and 0.210089 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.589
PRC on test generated data is 0.430

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.608
PRC on test generated data is 0.445

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.634
PRC on test generated data is 0.462

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.392

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.554
PRC on test generated data is 0.415

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.571
PRC on test generated data is 0.437

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.381
----------------------------------------
roc mean across methods is 0.540
prc mean across methods is 0.406


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.55424386 0.50050934 0.55104911 0.54103653 0.54050198 0.53858225
 0.52858726 0.52121387 0.50241256 0.50182262 0.55722334 0.51235066]
Average PRC each method:  [0.40323299 0.3728855  0.40703295 0.39697276 0.39559067 0.39799968
 0.38846661 0.38482176 0.37450212 0.37388215 0.41221857 0.37936258]
Std ROC each method:  [0.03913197 0.00101868 0.06074992 0.05312362 0.05713783 0.06813752
 0.02359178 0.02517329 0.00303613 0.00364524 0.04560524 0.01643836]
Std PRC each method:  [0.02125732 0.01844885 0.05377338 0.04346021 0.01950107 0.05725449
 0.01549767 0.02342699 0.01595385 0.01665463 0.03909534 0.01027615]
Average over repetitions across all methods
Average ROC:  0.5291277826744096
Average PRC:  0.3905806941156253
Std ROC:  0.01728414239439706
Variance PRC:  0.02219349687573666 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.425} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6471343 0.3528657] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6454977 0.3545023]
before perturbation, mean and variance of data mean embedding are 0.042240 and 0.144388 
after perturbation, mean and variance of data mean embedding are 0.042514 and 0.207503 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.613
PRC on test generated data is 0.448

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.616
PRC on test generated data is 0.456

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.585
PRC on test generated data is 0.434

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.378

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.606
PRC on test generated data is 0.446

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.374
----------------------------------------
roc mean across methods is 0.536
prc mean across methods is 0.398


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64927288 0.35072712] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64697984 0.35302016]
before perturbation, mean and variance of data mean embedding are 0.042356 and 0.144994 
after perturbation, mean and variance of data mean embedding are 0.041049 and 0.207468 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.574
PRC on test generated data is 0.420

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.578
PRC on test generated data is 0.421

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.435
PRC on test generated data is 0.366

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.622
PRC on test generated data is 0.454

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.520
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.383

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.384

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.379
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.393


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63088109 0.36911891] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63381245 0.36618755]
before perturbation, mean and variance of data mean embedding are 0.042248 and 0.143167 
after perturbation, mean and variance of data mean embedding are 0.037949 and 0.205431 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.524
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.532
PRC on test generated data is 0.352

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.492
PRC on test generated data is 0.333

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.517
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.543
PRC on test generated data is 0.356

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.336
----------------------------------------
roc mean across methods is 0.509
prc mean across methods is 0.341


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63473054 0.36526946] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63049709 0.36950291]
before perturbation, mean and variance of data mean embedding are 0.042519 and 0.144315 
after perturbation, mean and variance of data mean embedding are 0.041514 and 0.204211 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.534
PRC on test generated data is 0.363

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.347

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.428
PRC on test generated data is 0.317

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.346

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.345
----------------------------------------
roc mean across methods is 0.497
prc mean across methods is 0.344


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64499572 0.35500428] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64095657 0.35904343]
before perturbation, mean and variance of data mean embedding are 0.042474 and 0.145184 
after perturbation, mean and variance of data mean embedding are 0.043782 and 0.207106 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.591
PRC on test generated data is 0.423

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.644
PRC on test generated data is 0.470

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.613
PRC on test generated data is 0.443

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.375

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.592
PRC on test generated data is 0.420

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.369
----------------------------------------
roc mean across methods is 0.539
prc mean across methods is 0.393


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.56718789 0.5        0.574245   0.51078628 0.5        0.53181682
 0.50402763 0.5        0.50446928 0.5        0.55062358 0.5       ]
Average PRC each method:  [0.40051842 0.36051844 0.40912421 0.37850371 0.36051844 0.37931737
 0.36250623 0.36051844 0.36271846 0.36051844 0.39029977 0.36051844]
Std ROC each method:  [0.03371072 0.         0.05241034 0.07594428 0.         0.04560922
 0.00805525 0.         0.00556496 0.         0.04212326 0.        ]
Std PRC each method:  [0.03791462 0.01690335 0.05122489 0.05137052 0.01690335 0.04007378
 0.01935097 0.01690335 0.01866594 0.01690335 0.03764015 0.01690335]
Average over repetitions across all methods
Average ROC:  0.5202630382222257
Average PRC:  0.37379836517131115
Std ROC:  0.01575746406851771
Variance PRC:  0.025690089253650395 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.45} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66075845 0.33924155] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66293079 0.33706921]
before perturbation, mean and variance of data mean embedding are 0.042562 and 0.145948 
after perturbation, mean and variance of data mean embedding are 0.042826 and 0.204727 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.574
PRC on test generated data is 0.418

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.667
PRC on test generated data is 0.492

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.582
PRC on test generated data is 0.409

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.589
PRC on test generated data is 0.413

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.362
----------------------------------------
roc mean across methods is 0.536
prc mean across methods is 0.386


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66158285 0.33841715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6589632 0.3410368]
before perturbation, mean and variance of data mean embedding are 0.042375 and 0.146162 
after perturbation, mean and variance of data mean embedding are 0.041116 and 0.204481 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.375

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.364
----------------------------------------
roc mean across methods is 0.502
prc mean across methods is 0.365


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65127782 0.34872218] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64885091 0.35114909]
before perturbation, mean and variance of data mean embedding are 0.042629 and 0.145227 
after perturbation, mean and variance of data mean embedding are 0.038486 and 0.203178 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.585
PRC on test generated data is 0.384

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.559
PRC on test generated data is 0.371

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.627
PRC on test generated data is 0.441

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.526
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.344

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.544
PRC on test generated data is 0.364
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.359


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64715581 0.35284419] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64678031 0.35321969]
before perturbation, mean and variance of data mean embedding are 0.042421 and 0.144427 
after perturbation, mean and variance of data mean embedding are 0.041453 and 0.200578 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.525
PRC on test generated data is 0.343

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.345

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.464
PRC on test generated data is 0.316

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.549
PRC on test generated data is 0.354

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.330
----------------------------------------
roc mean across methods is 0.505
prc mean across methods is 0.334


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65787304 0.34212696] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66361055 0.33638945]
before perturbation, mean and variance of data mean embedding are 0.042465 and 0.145970 
after perturbation, mean and variance of data mean embedding are 0.043726 and 0.203836 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.593
PRC on test generated data is 0.418

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.357

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.355
----------------------------------------
roc mean across methods is 0.508
prc mean across methods is 0.361


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51983073 0.5        0.53609212 0.50923887 0.53567363 0.52058337
 0.52545457 0.5001616  0.50511692 0.50056497 0.52783985 0.50875953]
Average PRC each method:  [0.36409271 0.35043228 0.37923493 0.35684801 0.37172027 0.36079994
 0.37062001 0.35050668 0.3540933  0.35117797 0.36563507 0.35521494]
Std ROC each method:  [0.0289187  0.         0.06582996 0.03877106 0.04376497 0.02081066
 0.05090914 0.00032319 0.01021509 0.00112994 0.03592751 0.01751906]
Std PRC each method:  [0.02831926 0.01307848 0.0567673  0.03081082 0.02883948 0.01521737
 0.03717988 0.01302018 0.01218641 0.01256178 0.02501593 0.0127791 ]
Average over repetitions across all methods
Average ROC:  0.5157763454704993
Average PRC:  0.36086467544688916
Std ROC:  0.013703120622221211
Variance PRC:  0.01680076059868687 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.475} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67157058 0.32842942] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6725591 0.3274409]
before perturbation, mean and variance of data mean embedding are 0.042457 and 0.146930 
after perturbation, mean and variance of data mean embedding are 0.042712 and 0.201839 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.540
PRC on test generated data is 0.366

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.349

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.349

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.347
----------------------------------------
roc mean across methods is 0.504
prc mean across methods is 0.349


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67673956 0.32326044] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67643613 0.32356387]
before perturbation, mean and variance of data mean embedding are 0.042539 and 0.147942 
after perturbation, mean and variance of data mean embedding are 0.041324 and 0.202382 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.562
PRC on test generated data is 0.406

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.604
PRC on test generated data is 0.424

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.489
PRC on test generated data is 0.358

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.521
PRC on test generated data is 0.369

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.359
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.369


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66202783 0.33797217] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66333854 0.33666146]
before perturbation, mean and variance of data mean embedding are 0.042525 and 0.146037 
after perturbation, mean and variance of data mean embedding are 0.038529 and 0.200271 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.325
----------------------------------------
roc mean across methods is 0.500
prc mean across methods is 0.325


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66043738 0.33956262] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66240009 0.33759991]
before perturbation, mean and variance of data mean embedding are 0.042525 and 0.146605 
after perturbation, mean and variance of data mean embedding are 0.041591 and 0.198732 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.578
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.321
----------------------------------------
roc mean across methods is 0.506
prc mean across methods is 0.324


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66878728 0.33121272] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66969066 0.33030934]
before perturbation, mean and variance of data mean embedding are 0.042516 and 0.146377 
after perturbation, mean and variance of data mean embedding are 0.043732 and 0.200636 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.577
PRC on test generated data is 0.385

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.611
PRC on test generated data is 0.411

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.556
PRC on test generated data is 0.368

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.578
PRC on test generated data is 0.392

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.584
PRC on test generated data is 0.387

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.340
----------------------------------------
roc mean across methods is 0.534
prc mean across methods is 0.361


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.55136421 0.5        0.54289604 0.50893728 0.50100267 0.51703087
 0.5        0.5        0.5        0.5        0.52111265 0.5       ]
Average PRC each method:  [0.36822112 0.33840445 0.36560145 0.34374402 0.33890815 0.34949356
 0.33840445 0.33840445 0.33840445 0.33840445 0.35004538 0.33840445]
Std ROC each method:  [0.02912176 0.         0.05258562 0.0237647  0.00200535 0.03072457
 0.         0.         0.         0.         0.03225092 0.        ]
Std PRC each method:  [0.02729254 0.01409774 0.04367328 0.01836804 0.01443463 0.02582127
 0.01409774 0.01409774 0.01409774 0.01409774 0.02537385 0.01409774]
Average over repetitions across all methods
Average ROC:  0.5118619776851059
Average PRC:  0.34553670003136416
Std ROC:  0.01196580834763982
Variance PRC:  0.01840464311141571 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.5} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68194047 0.31805953]
before perturbation, mean and variance of data mean embedding are 0.042107 and 0.147562 
after perturbation, mean and variance of data mean embedding are 0.042353 and 0.199153 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.603
PRC on test generated data is 0.395

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.629
PRC on test generated data is 0.424

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.526
PRC on test generated data is 0.348

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.557
PRC on test generated data is 0.367

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.351


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68843642 0.31156358] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6915479 0.3084521]
before perturbation, mean and variance of data mean embedding are 0.042831 and 0.149897 
after perturbation, mean and variance of data mean embedding are 0.041657 and 0.200579 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.363

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.349
----------------------------------------
roc mean across methods is 0.502
prc mean across methods is 0.350


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67652708 0.32347292] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67744895 0.32255105]
before perturbation, mean and variance of data mean embedding are 0.042426 and 0.147223 
after perturbation, mean and variance of data mean embedding are 0.038564 and 0.197950 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.551
PRC on test generated data is 0.346

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.591
PRC on test generated data is 0.372

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.611
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.324

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.557
PRC on test generated data is 0.353
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.338


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6749904 0.3250096] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67463743 0.32536257]
before perturbation, mean and variance of data mean embedding are 0.042720 and 0.148316 
after perturbation, mean and variance of data mean embedding are 0.041817 and 0.196908 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.572
PRC on test generated data is 0.352

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.620
PRC on test generated data is 0.427

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.555
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.648
PRC on test generated data is 0.418

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.317
----------------------------------------
roc mean across methods is 0.534
prc mean across methods is 0.341


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68516851 0.31483149]
before perturbation, mean and variance of data mean embedding are 0.042738 and 0.149196 
after perturbation, mean and variance of data mean embedding are 0.043913 and 0.199625 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.589
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.602
PRC on test generated data is 0.405

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.619
PRC on test generated data is 0.403

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.567
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.487
PRC on test generated data is 0.330

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.621
PRC on test generated data is 0.411

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335
----------------------------------------
roc mean across methods is 0.541
prc mean across methods is 0.359


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.56294284 0.5        0.54632587 0.52890181 0.54214547 0.5234666
 0.55170286 0.5011172  0.51582825 0.49731209 0.53571463 0.51136913]
Average PRC each method:  [0.36474379 0.33136201 0.36318316 0.34733327 0.36359288 0.34293228
 0.367339   0.33215593 0.34027143 0.33021347 0.35299281 0.33777311]
Std ROC each method:  [0.03587824 0.         0.0573875  0.04618779 0.05243358 0.02102313
 0.06437343 0.00146209 0.02611636 0.00508969 0.0482098  0.02278276]
Std PRC each method:  [0.0197051  0.01128321 0.04385518 0.03065176 0.03448633 0.01075113
 0.03476425 0.01088293 0.01660968 0.01116413 0.03448486 0.01251774]
Average over repetitions across all methods
Average ROC:  0.5264022291319602
Average PRC:  0.3478244280334219
Std ROC:  0.012903613287587677
Variance PRC:  0.00757558965758424 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.525} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6936803 0.3063197] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6910922 0.3089078]
before perturbation, mean and variance of data mean embedding are 0.042850 and 0.149754 
after perturbation, mean and variance of data mean embedding are 0.043088 and 0.197884 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.539
PRC on test generated data is 0.347

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.341

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.619
PRC on test generated data is 0.405

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.338

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.620
PRC on test generated data is 0.403
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.344


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69628253 0.30371747] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70130957 0.29869043]
before perturbation, mean and variance of data mean embedding are 0.042595 and 0.149779 
after perturbation, mean and variance of data mean embedding are 0.041459 and 0.197684 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.332
----------------------------------------
roc mean across methods is 0.500
prc mean across methods is 0.332


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68736059 0.31263941] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68909809 0.31090191]
before perturbation, mean and variance of data mean embedding are 0.042505 and 0.148760 
after perturbation, mean and variance of data mean embedding are 0.038768 and 0.196388 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.547
PRC on test generated data is 0.333

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.598
PRC on test generated data is 0.366

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.534
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.546
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.496
PRC on test generated data is 0.311

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.541
PRC on test generated data is 0.332
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.325


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6866171 0.3133829] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68136763 0.31863237]
before perturbation, mean and variance of data mean embedding are 0.042687 and 0.149541 
after perturbation, mean and variance of data mean embedding are 0.041814 and 0.195094 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.539
PRC on test generated data is 0.339

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.312

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.314

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.552
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.585
PRC on test generated data is 0.363

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.542
PRC on test generated data is 0.338

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.558
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.309

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.518
PRC on test generated data is 0.320

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.311
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.326


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69107807 0.30892193] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69125764 0.30874236]
before perturbation, mean and variance of data mean embedding are 0.042520 and 0.149648 
after perturbation, mean and variance of data mean embedding are 0.043657 and 0.197106 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.589
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.322

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.320
----------------------------------------
roc mean across methods is 0.508
prc mean across methods is 0.324


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53495868 0.5        0.5        0.50083155 0.52965545 0.51709396
 0.54770179 0.51956714 0.5154866  0.49914679 0.50569076 0.5329109 ]
Average PRC each method:  [0.33891399 0.31958406 0.31958406 0.32008657 0.33618353 0.32754432
 0.34931899 0.33330601 0.33215271 0.31947265 0.3242026  0.33948549]
Std ROC each method:  [0.03329612 0.         0.         0.0016631  0.03693783 0.02122688
 0.04735643 0.02022156 0.02237619 0.00141378 0.00739931 0.04611094]
Std PRC each method:  [0.01329205 0.00856791 0.00856791 0.00800889 0.01853141 0.01044249
 0.03145769 0.00766376 0.01242235 0.00868049 0.00947081 0.03253789]
Average over repetitions across all methods
Average ROC:  0.5169203003344153
Average PRC:  0.32998624859206216
Std ROC:  0.011033657707013296
Variance PRC:  0.007388140018165474 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.55} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69953221 0.30046779] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70323721 0.29676279]
before perturbation, mean and variance of data mean embedding are 0.042712 and 0.150612 
after perturbation, mean and variance of data mean embedding are 0.042942 and 0.195864 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.614
PRC on test generated data is 0.377

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.542
PRC on test generated data is 0.327

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.596
PRC on test generated data is 0.356

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.566
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.584
PRC on test generated data is 0.348

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.306
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.325


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70349046 0.29650954] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7083857 0.2916143]
before perturbation, mean and variance of data mean embedding are 0.042724 and 0.151583 
after perturbation, mean and variance of data mean embedding are 0.041625 and 0.196427 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.550
PRC on test generated data is 0.360

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.323

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.617
PRC on test generated data is 0.379

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.552
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.617
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.521
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.319

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.318

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.570
PRC on test generated data is 0.354
----------------------------------------
roc mean across methods is 0.537
prc mean across methods is 0.338


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69701331 0.30298669] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70121432 0.29878568]
before perturbation, mean and variance of data mean embedding are 0.042404 and 0.150092 
after perturbation, mean and variance of data mean embedding are 0.038787 and 0.194750 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.558
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.619
PRC on test generated data is 0.371

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.553
PRC on test generated data is 0.329
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.314


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69629363 0.30370637] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70021618 0.29978382]
before perturbation, mean and variance of data mean embedding are 0.042372 and 0.149374 
after perturbation, mean and variance of data mean embedding are 0.041526 and 0.192320 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.516
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.298

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.562
PRC on test generated data is 0.329

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.518
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.300

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.299
----------------------------------------
roc mean across methods is 0.508
prc mean across methods is 0.303


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.697733 0.302267] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.697641 0.302359]
before perturbation, mean and variance of data mean embedding are 0.042047 and 0.149184 
after perturbation, mean and variance of data mean embedding are 0.043148 and 0.194108 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.521
PRC on test generated data is 0.313

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.302
----------------------------------------
roc mean across methods is 0.502
prc mean across methods is 0.303


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51748328 0.5        0.52275067 0.50947282 0.54271262 0.5341863
 0.52466453 0.50275172 0.54489667 0.50081843 0.51845869 0.52462183]
Average PRC each method:  [0.3173159  0.30478589 0.31879439 0.31011372 0.32728672 0.32482185
 0.31788658 0.30750295 0.33260108 0.30553263 0.31385665 0.31817348]
Std ROC each method:  [0.01840927 0.         0.04550134 0.01631303 0.05272896 0.02809686
 0.04634995 0.00550343 0.04306845 0.00163686 0.03292581 0.03066328]
Std PRC each method:  [0.02179857 0.00600791 0.02946344 0.01196634 0.03347693 0.01758146
 0.03042811 0.00654304 0.0253821  0.007391   0.01836924 0.02079591]
Average over repetitions across all methods
Average ROC:  0.5202347966420172
Average PRC:  0.3165559878050094
Std ROC:  0.013703616215064985
Variance PRC:  0.013328272331816498 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.575} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71154517 0.28845483] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71575124 0.28424876]
before perturbation, mean and variance of data mean embedding are 0.042502 and 0.151372 
after perturbation, mean and variance of data mean embedding are 0.042725 and 0.194048 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.547
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.303
----------------------------------------
roc mean across methods is 0.504
prc mean across methods is 0.305


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71294036 0.28705964] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71293735 0.28706265]
before perturbation, mean and variance of data mean embedding are 0.042503 and 0.151385 
after perturbation, mean and variance of data mean embedding are 0.041438 and 0.193863 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.310

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.523
PRC on test generated data is 0.317

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.546
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.471
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.306

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.606
PRC on test generated data is 0.412

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.574
PRC on test generated data is 0.348
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.323


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70735961 0.29264039] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70888917 0.29111083]
before perturbation, mean and variance of data mean embedding are 0.042575 and 0.151110 
after perturbation, mean and variance of data mean embedding are 0.039069 and 0.193051 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.294

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.300

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.568
PRC on test generated data is 0.329

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.578
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.311
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.304


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70561563 0.29438437] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70656268 0.29343732]
before perturbation, mean and variance of data mean embedding are 0.042545 and 0.150936 
after perturbation, mean and variance of data mean embedding are 0.041726 and 0.191121 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.605
PRC on test generated data is 0.349

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.555
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.554
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.292

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.293
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.301


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70666202 0.29333798] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70815779 0.29184221]
before perturbation, mean and variance of data mean embedding are 0.042478 and 0.151342 
after perturbation, mean and variance of data mean embedding are 0.043544 and 0.193400 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.639
PRC on test generated data is 0.371

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.593
PRC on test generated data is 0.341

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.297

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.592
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.538
PRC on test generated data is 0.311
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.310


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.5384749  0.5        0.5        0.49988479 0.54639181 0.50204687
 0.55226353 0.52042414 0.50249768 0.49959154 0.52222315 0.53071077]
Average PRC each method:  [0.31787451 0.29715216 0.29715216 0.29715216 0.32221864 0.29803702
 0.32821111 0.31669873 0.29919973 0.29703889 0.3191769  0.31326576]
Std ROC each method:  [0.05310311 0.         0.         0.00023041 0.0437359  0.00409375
 0.03029732 0.03914754 0.00325604 0.00081693 0.04171157 0.0262922 ]
Std PRC each method:  [0.02935999 0.00671758 0.00671758 0.00671758 0.01955209 0.00627136
 0.01760565 0.02291778 0.00842185 0.00655761 0.04680751 0.01854035]
Average over repetitions across all methods
Average ROC:  0.5178757654131829
Average PRC:  0.3085981471227201
Std ROC:  0.00868453711708398
Variance PRC:  0.0077427732615687845 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.6} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72284264 0.27715736] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7188513 0.2811487]
before perturbation, mean and variance of data mean embedding are 0.042719 and 0.153347 
after perturbation, mean and variance of data mean embedding are 0.042936 and 0.193341 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.636
PRC on test generated data is 0.385

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.542
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.526
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.539
PRC on test generated data is 0.346

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.620
PRC on test generated data is 0.374
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.322


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71844332 0.28155668] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7175913 0.2824087]
before perturbation, mean and variance of data mean embedding are 0.042480 and 0.152606 
after perturbation, mean and variance of data mean embedding are 0.041447 and 0.192692 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.623
PRC on test generated data is 0.363

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.547
PRC on test generated data is 0.331

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.291

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.618
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.555
PRC on test generated data is 0.332

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.574
PRC on test generated data is 0.331
----------------------------------------
roc mean across methods is 0.536
prc mean across methods is 0.314


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71878173 0.28121827] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71757298 0.28242702]
before perturbation, mean and variance of data mean embedding are 0.042414 and 0.151804 
after perturbation, mean and variance of data mean embedding are 0.039013 and 0.191518 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.548
PRC on test generated data is 0.312

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.478
PRC on test generated data is 0.287

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.587
PRC on test generated data is 0.333

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.521
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.517
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.308

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.299

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.301
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.301


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71404399 0.28595601] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71163754 0.28836246]
before perturbation, mean and variance of data mean embedding are 0.042498 and 0.151789 
after perturbation, mean and variance of data mean embedding are 0.041703 and 0.189733 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.548
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.565
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.280
----------------------------------------
roc mean across methods is 0.509
prc mean across methods is 0.285


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.7143824 0.2856176] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71372554 0.28627446]
before perturbation, mean and variance of data mean embedding are 0.042429 and 0.151984 
after perturbation, mean and variance of data mean embedding are 0.043464 and 0.191713 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.650
PRC on test generated data is 0.392

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.635
PRC on test generated data is 0.349

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.283

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.282

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.283

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.551
PRC on test generated data is 0.308
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.299


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.57371271 0.5        0.5        0.50508085 0.57185558 0.51894596
 0.53605328 0.50641389 0.50918085 0.49977753 0.52061652 0.55332504]
Average PRC each method:  [0.33402138 0.2887135  0.2887135  0.29609237 0.32746405 0.30019597
 0.30891011 0.29260995 0.29737574 0.2887135  0.3080574  0.31881549]
Std ROC each method:  [0.05465441 0.         0.         0.02267229 0.06084255 0.02425937
 0.04363634 0.00633587 0.00967538 0.00044494 0.02227801 0.04166936]
Std PRC each method:  [0.03717261 0.00756049 0.00756049 0.0190833  0.03830897 0.00941904
 0.0303615  0.01032003 0.01593072 0.00756049 0.02649459 0.03204587]
Average over repetitions across all methods
Average ROC:  0.5245801844126603
Average PRC:  0.30414024478390966
Std ROC:  0.010029881070287303
Variance PRC:  0.012676527818224276 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 5, 'subsampled_rate': 0.625} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.73085771 0.26914229] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72955878 0.27044122]
before perturbation, mean and variance of data mean embedding are 0.042620 and 0.154155 
after perturbation, mean and variance of data mean embedding are 0.042830 and 0.191845 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.583
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.523
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.614
PRC on test generated data is 0.362
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.303


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72724285 0.27275715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7270847 0.2729153]
before perturbation, mean and variance of data mean embedding are 0.042664 and 0.153718 
after perturbation, mean and variance of data mean embedding are 0.041660 and 0.191483 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.522
PRC on test generated data is 0.293

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.555
PRC on test generated data is 0.309

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.596
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.288

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.584
PRC on test generated data is 0.331
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.295


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72954321 0.27045679] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7299175 0.2700825]
before perturbation, mean and variance of data mean embedding are 0.042464 and 0.153295 
after perturbation, mean and variance of data mean embedding are 0.039161 and 0.190667 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.528
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.296

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.624
PRC on test generated data is 0.380

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.551
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.518
PRC on test generated data is 0.300

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.537
PRC on test generated data is 0.307
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.304


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72855734 0.27144266] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72769275 0.27230725]
before perturbation, mean and variance of data mean embedding are 0.042618 and 0.153744 
after perturbation, mean and variance of data mean embedding are 0.041846 and 0.189348 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.514
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.289

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.533
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.538
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.289

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.287
----------------------------------------
roc mean across methods is 0.508
prc mean across methods is 0.292


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 5
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=5_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72034177 0.27965823] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72047113 0.27952887]
before perturbation, mean and variance of data mean embedding are 0.042675 and 0.152858 
after perturbation, mean and variance of data mean embedding are 0.043680 and 0.190311 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.267
----------------------------------------
roc mean across methods is 0.500
prc mean across methods is 0.267


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51281115 0.5        0.5        0.4995685  0.51547823 0.5165823
 0.55527313 0.51440482 0.51223742 0.50026247 0.50225854 0.54706191]
Average PRC each method:  [0.28912292 0.28367816 0.28367816 0.28367816 0.29072983 0.29218029
 0.31664669 0.29508104 0.29309344 0.28404984 0.28502766 0.31087746]
Std ROC each method:  [0.01137577 0.         0.         0.00062842 0.02075084 0.0331646
 0.04704228 0.01887306 0.0144546  0.00052493 0.00354661 0.04533044]
Std PRC each method:  [0.01135442 0.00857964 0.00857964 0.00857964 0.01356792 0.02243835
 0.0375208  0.0200618  0.0159737  0.00896185 0.00889606 0.03307178]
Average over repetitions across all methods
Average ROC:  0.5146615388610242
Average PRC:  0.29232030310317236
Std ROC:  0.009017819138206278
Variance PRC:  0.013287704574235762 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.4} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63422222 0.36577778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63373416 0.36626584]
before perturbation, mean and variance of data mean embedding are 0.024230 and 0.110871 
after perturbation, mean and variance of data mean embedding are 0.023314 and 0.189013 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.508
PRC on test generated data is 0.397

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.553
PRC on test generated data is 0.427

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.573
PRC on test generated data is 0.431

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.541
PRC on test generated data is 0.429

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.571
PRC on test generated data is 0.427

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.624
PRC on test generated data is 0.486

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.541
PRC on test generated data is 0.418

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.397

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.604
PRC on test generated data is 0.477

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.492
PRC on test generated data is 0.387
----------------------------------------
roc mean across methods is 0.543
prc mean across methods is 0.421


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63377778 0.36622222] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63434581 0.36565419]
before perturbation, mean and variance of data mean embedding are 0.024156 and 0.110631 
after perturbation, mean and variance of data mean embedding are 0.022888 and 0.187963 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.539
PRC on test generated data is 0.410

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.576
PRC on test generated data is 0.435

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.567
PRC on test generated data is 0.426

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.401

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.559
PRC on test generated data is 0.431

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.391

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.576
PRC on test generated data is 0.431
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.406


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.616 0.384] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61532917 0.38467083]
before perturbation, mean and variance of data mean embedding are 0.024191 and 0.109814 
after perturbation, mean and variance of data mean embedding are 0.020445 and 0.187300 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.598
PRC on test generated data is 0.410

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.352

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.622
PRC on test generated data is 0.427

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.594
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.498
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.556
PRC on test generated data is 0.394

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.524
PRC on test generated data is 0.366

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.516
PRC on test generated data is 0.361

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.552
PRC on test generated data is 0.383
----------------------------------------
roc mean across methods is 0.539
prc mean across methods is 0.374


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.61822222 0.38177778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61729767 0.38270233]
before perturbation, mean and variance of data mean embedding are 0.024255 and 0.109959 
after perturbation, mean and variance of data mean embedding are 0.023239 and 0.186874 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.581
PRC on test generated data is 0.406

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.566
PRC on test generated data is 0.413

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.560
PRC on test generated data is 0.385

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.551
PRC on test generated data is 0.386

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.638
PRC on test generated data is 0.483

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.551
PRC on test generated data is 0.401

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.652
PRC on test generated data is 0.498

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.496
PRC on test generated data is 0.352
----------------------------------------
roc mean across methods is 0.550
prc mean across methods is 0.395


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63022222 0.36977778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63284268 0.36715732]
before perturbation, mean and variance of data mean embedding are 0.024261 and 0.110837 
after perturbation, mean and variance of data mean embedding are 0.024139 and 0.190099 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.599
PRC on test generated data is 0.458

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.564
PRC on test generated data is 0.440

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.567
PRC on test generated data is 0.424

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.546
PRC on test generated data is 0.405

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.586
PRC on test generated data is 0.441

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.550
PRC on test generated data is 0.408

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.651
PRC on test generated data is 0.482

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.521
PRC on test generated data is 0.401

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.580
PRC on test generated data is 0.432

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.593
PRC on test generated data is 0.439
----------------------------------------
roc mean across methods is 0.563
prc mean across methods is 0.424


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.56506879 0.5        0.5        0.53796128 0.57963611 0.51812862
 0.57358116 0.56572032 0.57130108 0.5111144  0.57073349 0.54165564]
Average PRC each method:  [0.41632886 0.37264249 0.37264249 0.40434606 0.4203066  0.38545566
 0.41600623 0.4251898  0.42523128 0.38126721 0.43173664 0.3984073 ]
Std ROC each method:  [0.03557485 0.         0.         0.0286944  0.02172456 0.02066939
 0.01488919 0.05591221 0.04008135 0.01011546 0.05572227 0.04112341]
Std PRC each method:  [0.02153058 0.01821713 0.01821713 0.03097294 0.01820666 0.03043549
 0.02008745 0.05269868 0.03130397 0.01847599 0.05128235 0.03260458]
Average over repetitions across all methods
Average ROC:  0.5445750735099819
Average PRC:  0.40413005055967116
Std ROC:  0.011582379717870992
Variance PRC:  0.01855093030853392 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.425} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6471343 0.3528657] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64526034 0.35473966]
before perturbation, mean and variance of data mean embedding are 0.024084 and 0.111288 
after perturbation, mean and variance of data mean embedding are 0.023203 and 0.184602 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.578
PRC on test generated data is 0.430

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.575
PRC on test generated data is 0.434

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.634
PRC on test generated data is 0.470

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.589
PRC on test generated data is 0.428

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.612
PRC on test generated data is 0.452

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.536
PRC on test generated data is 0.395

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.517
PRC on test generated data is 0.385

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.615
PRC on test generated data is 0.453

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.488
PRC on test generated data is 0.369
----------------------------------------
roc mean across methods is 0.556
prc mean across methods is 0.413


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64927288 0.35072712] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64819911 0.35180089]
before perturbation, mean and variance of data mean embedding are 0.024371 and 0.112061 
after perturbation, mean and variance of data mean embedding are 0.023151 and 0.184211 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.378

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.592
PRC on test generated data is 0.431

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.398

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.585
PRC on test generated data is 0.435

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.495
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.397

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.385

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.385

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.555
PRC on test generated data is 0.407
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.394


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63088109 0.36911891] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62662066 0.37337934]
before perturbation, mean and variance of data mean embedding are 0.024127 and 0.110191 
after perturbation, mean and variance of data mean embedding are 0.020521 and 0.182871 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.517
PRC on test generated data is 0.346

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.571
PRC on test generated data is 0.375

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.527
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.592
PRC on test generated data is 0.413

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.550
PRC on test generated data is 0.367

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.340
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.352


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63473054 0.36526946] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63767073 0.36232927]
before perturbation, mean and variance of data mean embedding are 0.024244 and 0.110701 
after perturbation, mean and variance of data mean embedding are 0.023266 and 0.182826 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.554
PRC on test generated data is 0.376

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.525
PRC on test generated data is 0.361

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.638
PRC on test generated data is 0.431

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.677
PRC on test generated data is 0.463

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.570
PRC on test generated data is 0.383

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.612
PRC on test generated data is 0.418

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.589
PRC on test generated data is 0.399

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.347

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.541
PRC on test generated data is 0.372

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.346
----------------------------------------
roc mean across methods is 0.559
prc mean across methods is 0.382


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64499572 0.35500428] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64863312 0.35136688]
before perturbation, mean and variance of data mean embedding are 0.024376 and 0.111911 
after perturbation, mean and variance of data mean embedding are 0.024258 and 0.186048 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.545
PRC on test generated data is 0.393

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.559
PRC on test generated data is 0.428

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.548
PRC on test generated data is 0.394

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.573
PRC on test generated data is 0.408

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.695
PRC on test generated data is 0.493

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.527
PRC on test generated data is 0.386

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.571
PRC on test generated data is 0.426

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.591
PRC on test generated data is 0.425
----------------------------------------
roc mean across methods is 0.551
prc mean across methods is 0.403


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53875146 0.5        0.5        0.5314167  0.59677135 0.57470303
 0.59778828 0.5496744  0.54090521 0.50534241 0.55733556 0.52876935]
Average PRC each method:  [0.38461907 0.36051844 0.36051844 0.38750289 0.42012141 0.40662533
 0.4224972  0.39705928 0.38340443 0.3642578  0.40057988 0.377417  ]
Std ROC each method:  [0.02751496 0.         0.         0.031072   0.0350682  0.05977649
 0.05588693 0.0445947  0.02677463 0.00629469 0.03499175 0.03841617]
Std PRC each method:  [0.02745908 0.01690335 0.01690335 0.03795978 0.03318107 0.04168416
 0.05104768 0.01545049 0.01756157 0.01994395 0.03348444 0.033784  ]
Average over repetitions across all methods
Average ROC:  0.5434548128600061
Average PRC:  0.388760097601646
Std ROC:  0.01479701471213339
Variance PRC:  0.02098980943583667 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.45} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66075845 0.33924155] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66740481 0.33259519]
before perturbation, mean and variance of data mean embedding are 0.024221 and 0.111899 
after perturbation, mean and variance of data mean embedding are 0.023372 and 0.180788 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.525
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.373

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.621
PRC on test generated data is 0.443

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.547
PRC on test generated data is 0.392

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.631
PRC on test generated data is 0.448

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.370

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.583
PRC on test generated data is 0.407

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.489
PRC on test generated data is 0.357
----------------------------------------
roc mean across methods is 0.538
prc mean across methods is 0.386


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66158285 0.33841715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66193269 0.33806731]
before perturbation, mean and variance of data mean embedding are 0.024193 and 0.112066 
after perturbation, mean and variance of data mean embedding are 0.023017 and 0.179876 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.596
PRC on test generated data is 0.421

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.491
PRC on test generated data is 0.364

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.574
PRC on test generated data is 0.405

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.567
PRC on test generated data is 0.405

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.579
PRC on test generated data is 0.430

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.519
PRC on test generated data is 0.380

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.389
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.384


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65127782 0.34872218] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65050763 0.34949237]
before perturbation, mean and variance of data mean embedding are 0.024183 and 0.111849 
after perturbation, mean and variance of data mean embedding are 0.020708 and 0.179707 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.547
PRC on test generated data is 0.371

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.540
PRC on test generated data is 0.359

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.559
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.526
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.523
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.555
PRC on test generated data is 0.375

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.515
PRC on test generated data is 0.358

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.514
PRC on test generated data is 0.350

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.341
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.354


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64715581 0.35284419] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64967947 0.35032053]
before perturbation, mean and variance of data mean embedding are 0.024336 and 0.112034 
after perturbation, mean and variance of data mean embedding are 0.023393 and 0.179459 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.512
PRC on test generated data is 0.337

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.494
PRC on test generated data is 0.330

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.540
PRC on test generated data is 0.351

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.697
PRC on test generated data is 0.491

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.562
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.574
PRC on test generated data is 0.380

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.568
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.338

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.486
PRC on test generated data is 0.325
----------------------------------------
roc mean across methods is 0.538
prc mean across methods is 0.359


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65787304 0.34212696] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65558431 0.34441569]
before perturbation, mean and variance of data mean embedding are 0.024239 and 0.112316 
after perturbation, mean and variance of data mean embedding are 0.024125 and 0.182033 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.554
PRC on test generated data is 0.405

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.359

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.593
PRC on test generated data is 0.405

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.560
PRC on test generated data is 0.387

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.565
PRC on test generated data is 0.396

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.355

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.516
PRC on test generated data is 0.368

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.586
PRC on test generated data is 0.407
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.375


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54677672 0.5        0.5        0.50131137 0.57365916 0.55725593
 0.55241937 0.54597919 0.55508078 0.50397608 0.52848222 0.52225126]
Average PRC each method:  [0.38156855 0.35043228 0.35043228 0.35324377 0.39234963 0.39157531
 0.38193967 0.38072053 0.39062826 0.35483492 0.36856899 0.36382265]
Std ROC each method:  [0.02894901 0.         0.         0.00906024 0.0312844  0.07306505
 0.01493975 0.05018495 0.02494336 0.00629652 0.02747581 0.03881686]
Std PRC each method:  [0.02923346 0.01307848 0.01307848 0.01560734 0.0336621  0.05022619
 0.01792652 0.03461568 0.0216876  0.01023971 0.02411155 0.0303674 ]
Average over repetitions across all methods
Average ROC:  0.5322660060273039
Average PRC:  0.371676401027903
Std ROC:  0.005246217194927522
Variance PRC:  0.013031675857903024 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.475} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67157058 0.32842942] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66638729 0.33361271]
before perturbation, mean and variance of data mean embedding are 0.024383 and 0.113337 
after perturbation, mean and variance of data mean embedding are 0.023563 and 0.177782 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.542
PRC on test generated data is 0.371

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.528
PRC on test generated data is 0.367

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.540
PRC on test generated data is 0.368

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.560
PRC on test generated data is 0.377

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.597
PRC on test generated data is 0.416

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.524
PRC on test generated data is 0.363

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.513
PRC on test generated data is 0.356

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.551
PRC on test generated data is 0.402

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.486
PRC on test generated data is 0.341
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.367


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67673956 0.32326044] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67294486 0.32705514]
before perturbation, mean and variance of data mean embedding are 0.024356 and 0.113819 
after perturbation, mean and variance of data mean embedding are 0.023221 and 0.177079 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.582
PRC on test generated data is 0.402

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.359

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.568
PRC on test generated data is 0.394

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.580
PRC on test generated data is 0.410

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.637
PRC on test generated data is 0.436

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.542
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.521
PRC on test generated data is 0.371

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.527
PRC on test generated data is 0.379

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.570
PRC on test generated data is 0.397
----------------------------------------
roc mean across methods is 0.544
prc mean across methods is 0.384


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66202783 0.33797217] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6612219 0.3387781]
before perturbation, mean and variance of data mean embedding are 0.024181 and 0.112130 
after perturbation, mean and variance of data mean embedding are 0.020830 and 0.176006 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.515
PRC on test generated data is 0.331

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.627
PRC on test generated data is 0.431

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.524
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.495
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.329

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.325

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.334
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.336


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66043738 0.33956262] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6608222 0.3391778]
before perturbation, mean and variance of data mean embedding are 0.024149 and 0.112333 
after perturbation, mean and variance of data mean embedding are 0.023240 and 0.175771 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.324

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.565
PRC on test generated data is 0.359

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.525
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.621
PRC on test generated data is 0.401

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.532
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.568
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.633
PRC on test generated data is 0.433

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.324
----------------------------------------
roc mean across methods is 0.538
prc mean across methods is 0.347


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66878728 0.33121272] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66958642 0.33041358]
before perturbation, mean and variance of data mean embedding are 0.024166 and 0.112698 
after perturbation, mean and variance of data mean embedding are 0.024056 and 0.178308 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.608
PRC on test generated data is 0.397

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.557
PRC on test generated data is 0.370

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.587
PRC on test generated data is 0.394

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.546
PRC on test generated data is 0.373

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.571
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.532
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.342

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.571
PRC on test generated data is 0.385

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.564
PRC on test generated data is 0.376
----------------------------------------
roc mean across methods is 0.545
prc mean across methods is 0.367


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.55058255 0.5        0.5        0.51711165 0.57745822 0.54216651
 0.59006703 0.51487818 0.53018587 0.50824469 0.55109093 0.52924838]
Average PRC each method:  [0.36498593 0.33840445 0.33840445 0.34852224 0.38923176 0.36348753
 0.39473051 0.3481431  0.35642102 0.34458971 0.38066095 0.35421391]
Std ROC each method:  [0.03912662 0.         0.         0.02287864 0.02907333 0.0277019
 0.03971605 0.018332   0.0208768  0.01046721 0.04973385 0.03265222]
Std PRC each method:  [0.03242119 0.01409774 0.01409774 0.02119492 0.02505476 0.03144597
 0.03394539 0.02040253 0.01418124 0.0213293  0.03691814 0.02737664]
Average over repetitions across all methods
Average ROC:  0.5342528342244202
Average PRC:  0.3601496294865444
Std ROC:  0.01102189727603033
Variance PRC:  0.01692342350000588 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.5} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68303902 0.31696098]
before perturbation, mean and variance of data mean embedding are 0.024181 and 0.113867 
after perturbation, mean and variance of data mean embedding are 0.023389 and 0.174547 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.562
PRC on test generated data is 0.366

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.338

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.601
PRC on test generated data is 0.393

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.601
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.339

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.539
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.528
PRC on test generated data is 0.363

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.494
PRC on test generated data is 0.333
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.353


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68843642 0.31156358] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68687078 0.31312922]
before perturbation, mean and variance of data mean embedding are 0.024361 and 0.114988 
after perturbation, mean and variance of data mean embedding are 0.023265 and 0.174323 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.515
PRC on test generated data is 0.357

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.608
PRC on test generated data is 0.458

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.560
PRC on test generated data is 0.380

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.557
PRC on test generated data is 0.389

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.559
PRC on test generated data is 0.379
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.369


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67652708 0.32347292] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68343497 0.31656503]
before perturbation, mean and variance of data mean embedding are 0.024315 and 0.113922 
after perturbation, mean and variance of data mean embedding are 0.021077 and 0.173628 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.543
PRC on test generated data is 0.352

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.692
PRC on test generated data is 0.442

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.324

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.551
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.322
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.340


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6749904 0.3250096] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6769636 0.3230364]
before perturbation, mean and variance of data mean embedding are 0.024262 and 0.113627 
after perturbation, mean and variance of data mean embedding are 0.023383 and 0.173203 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.535
PRC on test generated data is 0.337

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.325

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.662
PRC on test generated data is 0.420

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.512
PRC on test generated data is 0.324

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.609
PRC on test generated data is 0.424

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.475
PRC on test generated data is 0.308
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.339


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68435067 0.31564933]
before perturbation, mean and variance of data mean embedding are 0.024338 and 0.114398 
after perturbation, mean and variance of data mean embedding are 0.024232 and 0.175810 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.536
PRC on test generated data is 0.356

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.531
PRC on test generated data is 0.362

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.595
PRC on test generated data is 0.393

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.550
PRC on test generated data is 0.370

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.529
PRC on test generated data is 0.351

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.527
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.339

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.525
PRC on test generated data is 0.362

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.559
PRC on test generated data is 0.369

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.484
PRC on test generated data is 0.330
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.354


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53817351 0.5        0.5        0.50939909 0.63164677 0.51694384
 0.55050924 0.51374326 0.52271653 0.50493896 0.55065209 0.50328817]
Average PRC each method:  [0.35382802 0.33136201 0.33136201 0.33898869 0.42122378 0.34149709
 0.36054362 0.33896355 0.351779   0.33666305 0.37320465 0.33436451]
Std ROC each method:  [0.01496314 0.         0.         0.01162207 0.03860648 0.01934385
 0.03019446 0.0070439  0.01656937 0.01021817 0.03639881 0.02953018]
Std PRC each method:  [0.00942854 0.01128321 0.01128321 0.01526757 0.02604161 0.02057727
 0.02426015 0.01223017 0.0129865  0.01672171 0.03368969 0.02395492]
Average over repetitions across all methods
Average ROC:  0.5285009538546264
Average PRC:  0.3511483326714155
Std ROC:  0.00044473007322705447
Variance PRC:  0.0107679926429657 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.525} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6936803 0.3063197] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69659127 0.30340873]
before perturbation, mean and variance of data mean embedding are 0.024289 and 0.115190 
after perturbation, mean and variance of data mean embedding are 0.023523 and 0.172217 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.631
PRC on test generated data is 0.399

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.632
PRC on test generated data is 0.404

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.523
PRC on test generated data is 0.336

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.611
PRC on test generated data is 0.387

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.523
PRC on test generated data is 0.338

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.331

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.630
PRC on test generated data is 0.402

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.491
PRC on test generated data is 0.322
----------------------------------------
roc mean across methods is 0.547
prc mean across methods is 0.353


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69628253 0.30371747] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6982037 0.3017963]
before perturbation, mean and variance of data mean embedding are 0.024182 and 0.114892 
after perturbation, mean and variance of data mean embedding are 0.023121 and 0.171007 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.659
PRC on test generated data is 0.430

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.539
PRC on test generated data is 0.369

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.585
PRC on test generated data is 0.374

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.597
PRC on test generated data is 0.386

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.548
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.332

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.603
PRC on test generated data is 0.418

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.553
PRC on test generated data is 0.358
----------------------------------------
roc mean across methods is 0.552
prc mean across methods is 0.365


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68736059 0.31263941] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68587685 0.31412315]
before perturbation, mean and variance of data mean embedding are 0.024305 and 0.114947 
after perturbation, mean and variance of data mean embedding are 0.021171 and 0.171105 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.639
PRC on test generated data is 0.404

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.525
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.517
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.596
PRC on test generated data is 0.392

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.316
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.328


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6866171 0.3133829] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68282636 0.31717364]
before perturbation, mean and variance of data mean embedding are 0.024317 and 0.114615 
after perturbation, mean and variance of data mean embedding are 0.023467 and 0.170672 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.309

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.599
PRC on test generated data is 0.358

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.545
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.512
PRC on test generated data is 0.319

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.491
PRC on test generated data is 0.306
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.319


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69107807 0.30892193] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69372266 0.30627734]
before perturbation, mean and variance of data mean embedding are 0.024393 and 0.115127 
after perturbation, mean and variance of data mean embedding are 0.024290 and 0.173051 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.323

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.530
PRC on test generated data is 0.335

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.516
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.629
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.320

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.564
PRC on test generated data is 0.353

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.577
PRC on test generated data is 0.363
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.334


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.55803898 0.5        0.5        0.53501851 0.57522965 0.54624464
 0.55460644 0.51118089 0.53201847 0.50054078 0.56189377 0.52461611]
Average PRC each method:  [0.35390953 0.31958406 0.31958406 0.34338859 0.36143359 0.34437852
 0.34896742 0.32700239 0.34383789 0.32065987 0.36033725 0.33306179]
Std ROC each method:  [0.0716032  0.         0.         0.0507111  0.04358771 0.03395521
 0.04897462 0.01322063 0.03634304 0.00174809 0.05029519 0.03464103]
Std PRC each method:  [0.05067957 0.00856791 0.00856791 0.03733096 0.02579221 0.0236967
 0.03241666 0.00974451 0.02790809 0.00956362 0.04296621 0.02326111]
Average over repetitions across all methods
Average ROC:  0.5332823537907768
Average PRC:  0.3396787456573981
Std ROC:  0.013569301892772515
Variance PRC:  0.016710779455147106 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.55} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69953221 0.30046779] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70412607 0.29587393]
before perturbation, mean and variance of data mean embedding are 0.024275 and 0.115560 
after perturbation, mean and variance of data mean embedding are 0.023534 and 0.169443 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.510
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.589
PRC on test generated data is 0.360

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.537
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.614
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.498
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.526
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.314

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.532
PRC on test generated data is 0.327

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.305
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.323


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70349046 0.29650954] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70293305 0.29706695]
before perturbation, mean and variance of data mean embedding are 0.024308 and 0.115990 
after perturbation, mean and variance of data mean embedding are 0.023281 and 0.168684 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.607
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.319

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.549
PRC on test generated data is 0.342

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.316

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.542
PRC on test generated data is 0.345

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.564
PRC on test generated data is 0.348
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.330


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69701331 0.30298669] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69443692 0.30556308]
before perturbation, mean and variance of data mean embedding are 0.024284 and 0.115440 
after perturbation, mean and variance of data mean embedding are 0.021251 and 0.168474 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.587
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.542
PRC on test generated data is 0.320

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.519
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.581
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.567
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.525
PRC on test generated data is 0.312
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.318


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69629363 0.30370637] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69594729 0.30405271]
before perturbation, mean and variance of data mean embedding are 0.024263 and 0.115339 
after perturbation, mean and variance of data mean embedding are 0.023440 and 0.168202 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.599
PRC on test generated data is 0.362

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.492
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.517
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.299

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.299

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.491
PRC on test generated data is 0.295
----------------------------------------
roc mean across methods is 0.508
prc mean across methods is 0.305


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.697733 0.302267] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69928928 0.30071072]
before perturbation, mean and variance of data mean embedding are 0.024155 and 0.115039 
after perturbation, mean and variance of data mean embedding are 0.024056 and 0.169952 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.532
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.304

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.307

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.555
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.591
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.308

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.304

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.308

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.583
PRC on test generated data is 0.349
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.315


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54700209 0.5        0.5        0.50173489 0.55734372 0.518507
 0.54335253 0.52247828 0.52139185 0.50187083 0.51671723 0.53222171]
Average PRC each method:  [0.33248017 0.30478589 0.30478589 0.30594289 0.33824793 0.31365904
 0.33124413 0.32317263 0.3176648  0.30679595 0.31602999 0.32196189]
Std ROC each method:  [0.04227803 0.         0.         0.0022012  0.03276055 0.02334446
 0.04969357 0.02987294 0.02436355 0.00302903 0.0172683  0.03638267]
Std PRC each method:  [0.03077506 0.00600791 0.00600791 0.00722301 0.02180878 0.01221687
 0.03140588 0.02320202 0.01505478 0.00678606 0.01761845 0.02226229]
Average over repetitions across all methods
Average ROC:  0.521885010354876
Average PRC:  0.3180642673837146
Std ROC:  0.006819599517834804
Variance PRC:  0.008081025885539871 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.575} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71154517 0.28845483] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71188401 0.28811599]
before perturbation, mean and variance of data mean embedding are 0.024275 and 0.116503 
after perturbation, mean and variance of data mean embedding are 0.023556 and 0.167375 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.582
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.569
PRC on test generated data is 0.347

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.590
PRC on test generated data is 0.350

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.308

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.615
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.626
PRC on test generated data is 0.373

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.485
PRC on test generated data is 0.298
----------------------------------------
roc mean across methods is 0.541
prc mean across methods is 0.327


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71294036 0.28705964] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71155234 0.28844766]
before perturbation, mean and variance of data mean embedding are 0.024364 and 0.116912 
after perturbation, mean and variance of data mean embedding are 0.023369 and 0.166521 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.595
PRC on test generated data is 0.354

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.547
PRC on test generated data is 0.351

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.595
PRC on test generated data is 0.358

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.585
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.312

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.307

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.621
PRC on test generated data is 0.397

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.555
PRC on test generated data is 0.333
----------------------------------------
roc mean across methods is 0.543
prc mean across methods is 0.334


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70735961 0.29264039] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70799502 0.29200498]
before perturbation, mean and variance of data mean embedding are 0.024175 and 0.115904 
after perturbation, mean and variance of data mean embedding are 0.021235 and 0.166085 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.561
PRC on test generated data is 0.329

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.294

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.299

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.295
----------------------------------------
roc mean across methods is 0.508
prc mean across methods is 0.298


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70561563 0.29438437] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70953102 0.29046898]
before perturbation, mean and variance of data mean embedding are 0.024301 and 0.116307 
after perturbation, mean and variance of data mean embedding are 0.023504 and 0.166175 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.561
PRC on test generated data is 0.317

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.648
PRC on test generated data is 0.378

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.288
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.302


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70666202 0.29333798] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70326698 0.29673302]
before perturbation, mean and variance of data mean embedding are 0.024207 and 0.115858 
after perturbation, mean and variance of data mean embedding are 0.024111 and 0.167704 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.517
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.520
PRC on test generated data is 0.310

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.533
PRC on test generated data is 0.307

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.562
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.640
PRC on test generated data is 0.407

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.585
PRC on test generated data is 0.339
----------------------------------------
roc mean across methods is 0.534
prc mean across methods is 0.316


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.55081116 0.5        0.5        0.52679954 0.55829963 0.51843687
 0.55072135 0.50322691 0.54233887 0.50016353 0.57921134 0.52469504]
Average PRC each method:  [0.32549535 0.29715216 0.29715216 0.31821649 0.32625736 0.30664162
 0.3265293  0.29968222 0.32738981 0.29755122 0.35427888 0.31067891]
Std ROC each method:  [0.03667781 0.         0.         0.02761532 0.03191766 0.01832435
 0.05750754 0.0033422  0.04118669 0.0006608  0.06127951 0.03833104]
Std PRC each method:  [0.02411389 0.00671758 0.00671758 0.02608031 0.02369642 0.00849645
 0.03421296 0.00747321 0.02966509 0.0063078  0.04779622 0.02117323]
Average over repetitions across all methods
Average ROC:  0.5295586859350148
Average PRC:  0.3155854557364757
Std ROC:  0.012984022209686369
Variance PRC:  0.013715050965345917 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.6} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72284264 0.27715736] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72564464 0.27435536]
before perturbation, mean and variance of data mean embedding are 0.024155 and 0.117121 
after perturbation, mean and variance of data mean embedding are 0.023458 and 0.165216 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.535
PRC on test generated data is 0.316

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.308

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.527
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.486
PRC on test generated data is 0.296
----------------------------------------
roc mean across methods is 0.506
prc mean across methods is 0.304


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71844332 0.28155668] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71892853 0.28107147]
before perturbation, mean and variance of data mean embedding are 0.024320 and 0.117206 
after perturbation, mean and variance of data mean embedding are 0.023355 and 0.164152 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.525
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.577
PRC on test generated data is 0.326

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.592
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.430
PRC on test generated data is 0.268
----------------------------------------
roc mean across methods is 0.511
prc mean across methods is 0.297


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71878173 0.28121827] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71578723 0.28421277]
before perturbation, mean and variance of data mean embedding are 0.024269 and 0.117010 
after perturbation, mean and variance of data mean embedding are 0.021416 and 0.164302 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.618
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.523
PRC on test generated data is 0.301

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.557
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.293

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.299
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.303


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71404399 0.28595601] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71498243 0.28501757]
before perturbation, mean and variance of data mean embedding are 0.024326 and 0.116908 
after perturbation, mean and variance of data mean embedding are 0.023552 and 0.164115 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.502
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.640
PRC on test generated data is 0.362

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.516
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.286

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.283

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.280
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.289


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.7143824 0.2856176] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71594974 0.28405026]
before perturbation, mean and variance of data mean embedding are 0.024298 and 0.117010 
after perturbation, mean and variance of data mean embedding are 0.024205 and 0.165923 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.515
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.281

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.282

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.562
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.631
PRC on test generated data is 0.351

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.286

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.515
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.584
PRC on test generated data is 0.326
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.296


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.5332075  0.5        0.5        0.49945844 0.55538596 0.51393134
 0.55640037 0.512502   0.50763358 0.500271   0.5038877  0.50343417]
Average PRC each method:  [0.30649636 0.2887135  0.2887135  0.28877232 0.31743055 0.29492944
 0.32000107 0.2983531  0.29373821 0.28909765 0.2938132  0.29391367]
Std ROC each method:  [0.04314822 0.         0.         0.00079637 0.04915774 0.02442839
 0.05104122 0.00215842 0.00983577 0.00054201 0.00598376 0.04979587]
Std PRC each method:  [0.02773984 0.00756049 0.00756049 0.00750099 0.02683512 0.01025471
 0.02525951 0.0090116  0.01161812 0.00772605 0.00721803 0.01964397]
Average over repetitions across all methods
Average ROC:  0.5155093383662439
Average PRC:  0.29783104629717533
Std ROC:  0.007175553090325997
Variance PRC:  0.005595293691412438 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.625} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.73085771 0.26914229] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73204819 0.26795181]
before perturbation, mean and variance of data mean embedding are 0.024286 and 0.118228 
after perturbation, mean and variance of data mean embedding are 0.023609 and 0.163683 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.580
PRC on test generated data is 0.331

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.293

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.545
PRC on test generated data is 0.315

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.550
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.512
PRC on test generated data is 0.298

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.471
PRC on test generated data is 0.282
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.300


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72724285 0.27275715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7234961 0.2765039]
before perturbation, mean and variance of data mean embedding are 0.024288 and 0.118074 
after perturbation, mean and variance of data mean embedding are 0.023351 and 0.162529 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.600
PRC on test generated data is 0.339

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.284

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.552
PRC on test generated data is 0.311

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.560
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.288

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.285

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.287

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.580
PRC on test generated data is 0.323
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.297


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72954321 0.27045679] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.731163 0.268837]
before perturbation, mean and variance of data mean embedding are 0.024235 and 0.117649 
after perturbation, mean and variance of data mean embedding are 0.021465 and 0.162455 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.502
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.292

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.489
PRC on test generated data is 0.288

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.291
----------------------------------------
roc mean across methods is 0.500
prc mean across methods is 0.289


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72855734 0.27144266] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72846594 0.27153406]
before perturbation, mean and variance of data mean embedding are 0.024344 and 0.118012 
after perturbation, mean and variance of data mean embedding are 0.023593 and 0.162513 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.630
PRC on test generated data is 0.358

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.539
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.532
PRC on test generated data is 0.314

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.287
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.298


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 10
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=10_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72034177 0.27965823] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71613082 0.28386918]
before perturbation, mean and variance of data mean embedding are 0.024290 and 0.117277 
after perturbation, mean and variance of data mean embedding are 0.024200 and 0.163755 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.610
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.274

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.274

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.576
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.536
PRC on test generated data is 0.285

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.527
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.268

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.538
PRC on test generated data is 0.310

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.575
PRC on test generated data is 0.307
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.286


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.55844399 0.5        0.5        0.50157454 0.54972697 0.52308854
 0.52045876 0.50783739 0.5148725  0.50173685 0.51764889 0.52607618]
Average PRC each method:  [0.31445756 0.28367816 0.28367816 0.28518121 0.30992147 0.29477828
 0.29585986 0.28776264 0.29242269 0.28584557 0.29961067 0.29779792]
Std ROC each method:  [0.04781838 0.         0.         0.00279907 0.04347645 0.03066841
 0.02449691 0.01010575 0.01868844 0.00284655 0.01471352 0.04350238]
Std PRC each method:  [0.02188995 0.00857964 0.00857964 0.00619795 0.02805056 0.00872755
 0.01139434 0.00505646 0.0171555  0.0107169  0.0109813  0.01505366]
Average over repetitions across all methods
Average ROC:  0.5184553834104519
Average PRC:  0.29424951695698737
Std ROC:  0.010704825619508989
Variance PRC:  0.005635113374251497 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.4} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63422222 0.36577778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6309617 0.3690383]
before perturbation, mean and variance of data mean embedding are 0.012361 and 0.082284 
after perturbation, mean and variance of data mean embedding are 0.010921 and 0.173085 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.520
PRC on test generated data is 0.400

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.529
PRC on test generated data is 0.415

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.572
PRC on test generated data is 0.431

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.516
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.601
PRC on test generated data is 0.463

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.404

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.543
PRC on test generated data is 0.423

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.497
PRC on test generated data is 0.391

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.531
PRC on test generated data is 0.415

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.473
PRC on test generated data is 0.379
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.409


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63377778 0.36622222] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63179765 0.36820235]
before perturbation, mean and variance of data mean embedding are 0.012397 and 0.082432 
after perturbation, mean and variance of data mean embedding are 0.011763 and 0.174137 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.537
PRC on test generated data is 0.420

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.393

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.401

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.657
PRC on test generated data is 0.502

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.523
PRC on test generated data is 0.413

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.512
PRC on test generated data is 0.395

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.396

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.485
PRC on test generated data is 0.386

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.536
PRC on test generated data is 0.427

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.583
PRC on test generated data is 0.436
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.413


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.616 0.384] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61256908 0.38743092]
before perturbation, mean and variance of data mean embedding are 0.012340 and 0.081513 
after perturbation, mean and variance of data mean embedding are 0.009193 and 0.172560 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.579
PRC on test generated data is 0.399

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.364

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.354

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.352

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.570
PRC on test generated data is 0.383

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.640
PRC on test generated data is 0.427

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.607
PRC on test generated data is 0.426

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.542
PRC on test generated data is 0.373

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.546
PRC on test generated data is 0.399

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.593
PRC on test generated data is 0.403
----------------------------------------
roc mean across methods is 0.550
prc mean across methods is 0.381


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.61822222 0.38177778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61226016 0.38773984]
before perturbation, mean and variance of data mean embedding are 0.012412 and 0.082029 
after perturbation, mean and variance of data mean embedding are 0.012737 and 0.172826 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.532
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.358

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.538
PRC on test generated data is 0.374

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.544
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.353

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.515
PRC on test generated data is 0.362

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.486
PRC on test generated data is 0.347
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.362


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63022222 0.36977778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62672756 0.37327244]
before perturbation, mean and variance of data mean embedding are 0.012303 and 0.082002 
after perturbation, mean and variance of data mean embedding are 0.013883 and 0.174765 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.629
PRC on test generated data is 0.515

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.383

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.518
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.527
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.516
PRC on test generated data is 0.396

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.384
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.397


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53353614 0.5        0.50291287 0.51091013 0.58060098 0.53123905
 0.55608919 0.53049246 0.52715496 0.49593403 0.52875134 0.52790544]
Average PRC each method:  [0.39474855 0.37264249 0.37639568 0.38207711 0.43469454 0.39214789
 0.40723149 0.39451266 0.39240236 0.37178346 0.39971969 0.38999389]
Std ROC each method:  [0.02610005 0.         0.00461243 0.00998581 0.05543765 0.02360809
 0.05426326 0.03889815 0.01378063 0.00576039 0.01183512 0.05043302]
Std PRC each method:  [0.01610891 0.01821713 0.01543728 0.02375203 0.06579876 0.01267943
 0.03516744 0.02126556 0.01956438 0.01772708 0.02185888 0.02932048]
Average over repetitions across all methods
Average ROC:  0.5271272164965901
Average PRC:  0.39236248656120626
Std ROC:  0.012892093806037754
Variance PRC:  0.018604603223338005 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.425} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6471343 0.3528657] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64462396 0.35537604]
before perturbation, mean and variance of data mean embedding are 0.012330 and 0.082929 
after perturbation, mean and variance of data mean embedding are 0.010945 and 0.168343 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.374

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.474
PRC on test generated data is 0.374

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.557
PRC on test generated data is 0.405

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.387

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.533
PRC on test generated data is 0.402

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.570
PRC on test generated data is 0.422

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.474
PRC on test generated data is 0.364
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.383


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64927288 0.35072712] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64867159 0.35132841]
before perturbation, mean and variance of data mean embedding are 0.012373 and 0.083111 
after perturbation, mean and variance of data mean embedding are 0.011763 and 0.169425 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.530
PRC on test generated data is 0.398

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.380

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.577
PRC on test generated data is 0.424

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.380

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.388

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.493
PRC on test generated data is 0.376

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.534
PRC on test generated data is 0.413

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.381
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.389


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63088109 0.36911891] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63039544 0.36960456]
before perturbation, mean and variance of data mean embedding are 0.012271 and 0.081596 
after perturbation, mean and variance of data mean embedding are 0.009243 and 0.167554 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.342

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.338

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.527
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.338

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.336

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.340

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.566
PRC on test generated data is 0.373
----------------------------------------
roc mean across methods is 0.511
prc mean across methods is 0.342


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63473054 0.36526946] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63786333 0.36213667]
before perturbation, mean and variance of data mean embedding are 0.012366 and 0.082469 
after perturbation, mean and variance of data mean embedding are 0.012678 and 0.168020 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.493
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.494
PRC on test generated data is 0.344

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.601
PRC on test generated data is 0.406

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.592
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.534
PRC on test generated data is 0.377

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.438
PRC on test generated data is 0.321
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.358


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64499572 0.35500428] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65290595 0.34709405]
before perturbation, mean and variance of data mean embedding are 0.012398 and 0.082964 
after perturbation, mean and variance of data mean embedding are 0.013918 and 0.170162 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.534
PRC on test generated data is 0.385

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.369

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.611
PRC on test generated data is 0.441

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.536
PRC on test generated data is 0.387

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.551
PRC on test generated data is 0.398

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.398

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.369

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.589
PRC on test generated data is 0.426

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.401
----------------------------------------
roc mean across methods is 0.534
prc mean across methods is 0.390


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51267464 0.5        0.5        0.49951876 0.55356811 0.52420446
 0.52471737 0.5170563  0.52717988 0.50574024 0.5396994  0.50584757]
Average PRC each method:  [0.36874501 0.36051844 0.36051844 0.36135811 0.396468   0.37418138
 0.37302635 0.37057212 0.38312649 0.36654693 0.38924093 0.36767739]
Std ROC each method:  [0.01648395 0.         0.         0.00308741 0.05430134 0.03408001
 0.02117663 0.0185584  0.01050908 0.01451581 0.03475481 0.04672958]
Std PRC each method:  [0.02215433 0.01690335 0.01690335 0.01612796 0.03670177 0.02057252
 0.02242023 0.02276132 0.01974221 0.01527234 0.03848593 0.02649902]
Average over repetitions across all methods
Average ROC:  0.5175172270970771
Average PRC:  0.3726649678031678
Std ROC:  0.008566404790900498
Variance PRC:  0.019038137601083374 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.45} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66075845 0.33924155] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6558134 0.3441866]
before perturbation, mean and variance of data mean embedding are 0.012297 and 0.083297 
after perturbation, mean and variance of data mean embedding are 0.010962 and 0.163876 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.561
PRC on test generated data is 0.398

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.540
PRC on test generated data is 0.388

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.631
PRC on test generated data is 0.448

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.611
PRC on test generated data is 0.440

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.365

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.545
PRC on test generated data is 0.392

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.478
PRC on test generated data is 0.353
----------------------------------------
roc mean across methods is 0.535
prc mean across methods is 0.385


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66158285 0.33841715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65863753 0.34136247]
before perturbation, mean and variance of data mean embedding are 0.012260 and 0.083207 
after perturbation, mean and variance of data mean embedding are 0.011672 and 0.164792 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.545
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.574
PRC on test generated data is 0.409

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.522
PRC on test generated data is 0.375

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.640
PRC on test generated data is 0.489

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.520
PRC on test generated data is 0.378

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.555
PRC on test generated data is 0.392
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.385


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65127782 0.34872218] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65676547 0.34323453]
before perturbation, mean and variance of data mean embedding are 0.012386 and 0.083144 
after perturbation, mean and variance of data mean embedding are 0.009467 and 0.163717 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.614
PRC on test generated data is 0.417

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.555
PRC on test generated data is 0.395

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.586
PRC on test generated data is 0.437

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.373

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.555
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.565
PRC on test generated data is 0.406

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.586
PRC on test generated data is 0.391
----------------------------------------
roc mean across methods is 0.542
prc mean across methods is 0.375


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64715581 0.35284419] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64533639 0.35466361]
before perturbation, mean and variance of data mean embedding are 0.012385 and 0.082983 
after perturbation, mean and variance of data mean embedding are 0.012686 and 0.163688 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.530
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.530
PRC on test generated data is 0.345

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.589
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.545
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.334

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.335

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.334
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.341


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65787304 0.34212696] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65996996 0.34003004]
before perturbation, mean and variance of data mean embedding are 0.012357 and 0.083338 
after perturbation, mean and variance of data mean embedding are 0.013822 and 0.165640 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.531
PRC on test generated data is 0.376

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.582
PRC on test generated data is 0.398

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.370

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.598
PRC on test generated data is 0.416

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.517
PRC on test generated data is 0.365

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.524
PRC on test generated data is 0.370

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.516
PRC on test generated data is 0.368

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.390
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.373


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.55635588 0.5        0.5        0.51901793 0.58071077 0.5115097
 0.57503786 0.54095767 0.51635674 0.5005814  0.53026969 0.53490687]
Average PRC each method:  [0.38500906 0.35043228 0.35043228 0.36669879 0.40743097 0.3614667
 0.39851113 0.38303571 0.36021454 0.35121082 0.37580315 0.37230955]
Std ROC each method:  [0.03100274 0.         0.         0.02373765 0.03207122 0.0115417
 0.03242997 0.0525517  0.01638571 0.00116279 0.02192219 0.03767616]
Std PRC each method:  [0.02419397 0.01307848 0.01307848 0.02337835 0.03624577 0.01526983
 0.02628831 0.05684313 0.00856724 0.01193144 0.02420648 0.02403904]
Average over repetitions across all methods
Average ROC:  0.5304753749059135
Average PRC:  0.3718795810665023
Std ROC:  0.008137986272624707
Variance PRC:  0.01617197638673378 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.475} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67157058 0.32842942] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66880214 0.33119786]
before perturbation, mean and variance of data mean embedding are 0.012437 and 0.084222 
after perturbation, mean and variance of data mean embedding are 0.011148 and 0.160049 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.530
PRC on test generated data is 0.367

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.347

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.543
PRC on test generated data is 0.374

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.622
PRC on test generated data is 0.428

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.348

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.514
PRC on test generated data is 0.358

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.350
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.360


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67673956 0.32326044] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68083831 0.31916169]
before perturbation, mean and variance of data mean embedding are 0.012349 and 0.084546 
after perturbation, mean and variance of data mean embedding are 0.011782 and 0.161203 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.567
PRC on test generated data is 0.412

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.367

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.552
PRC on test generated data is 0.393

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.568
PRC on test generated data is 0.414

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.523
PRC on test generated data is 0.370

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.371

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.367

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.513
PRC on test generated data is 0.368

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.455
PRC on test generated data is 0.340
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.374


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66202783 0.33797217] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66250709 0.33749291]
before perturbation, mean and variance of data mean embedding are 0.012268 and 0.083370 
after perturbation, mean and variance of data mean embedding are 0.009453 and 0.159528 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.537
PRC on test generated data is 0.344

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.336

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.565
PRC on test generated data is 0.376

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.624
PRC on test generated data is 0.394

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.551
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.550
PRC on test generated data is 0.373

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.543
PRC on test generated data is 0.363

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.581
PRC on test generated data is 0.371
----------------------------------------
roc mean across methods is 0.539
prc mean across methods is 0.351


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66043738 0.33956262] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65410317 0.34589683]
before perturbation, mean and variance of data mean embedding are 0.012359 and 0.083370 
after perturbation, mean and variance of data mean embedding are 0.012650 and 0.159661 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.537
PRC on test generated data is 0.339

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.495
PRC on test generated data is 0.320

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.625
PRC on test generated data is 0.403

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.530
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.496
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.540
PRC on test generated data is 0.354

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.591
PRC on test generated data is 0.370
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.338


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66878728 0.33121272] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66760602 0.33239398]
before perturbation, mean and variance of data mean embedding are 0.012394 and 0.084101 
after perturbation, mean and variance of data mean embedding are 0.013807 and 0.161697 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.513
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.584
PRC on test generated data is 0.389

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.544
PRC on test generated data is 0.363

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.546
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.516
PRC on test generated data is 0.359

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.550
PRC on test generated data is 0.380
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.354


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53693548 0.5        0.5        0.50276133 0.5737118  0.53821072
 0.55390806 0.51698716 0.51298007 0.50104732 0.52534802 0.53668842]
Average PRC each method:  [0.36195408 0.33840445 0.33840445 0.34184012 0.38705059 0.36324856
 0.37117077 0.35426172 0.34733579 0.340058   0.36038984 0.36238516]
Std ROC each method:  [0.01726394 0.         0.         0.00660721 0.02914355 0.0505165
 0.03536411 0.01741274 0.01680549 0.00398372 0.01315293 0.0503376 ]
Std PRC each method:  [0.02702225 0.01409774 0.01409774 0.01528791 0.01105209 0.03486264
 0.03021841 0.0176345  0.01993013 0.01651168 0.00468796 0.01470606]
Average over repetitions across all methods
Average ROC:  0.5248815323685213
Average PRC:  0.3555419622555143
Std ROC:  0.007361675284074573
Variance PRC:  0.011670368505462292 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.5} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68237305 0.31762695]
before perturbation, mean and variance of data mean embedding are 0.012327 and 0.084483 
after perturbation, mean and variance of data mean embedding are 0.011083 and 0.156262 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.526
PRC on test generated data is 0.354

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.550
PRC on test generated data is 0.371

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.646
PRC on test generated data is 0.429

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.539
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.521
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.543
PRC on test generated data is 0.366

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.334
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.354


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68843642 0.31156358] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69294224 0.30705776]
before perturbation, mean and variance of data mean embedding are 0.012395 and 0.085274 
after perturbation, mean and variance of data mean embedding are 0.011847 and 0.157660 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.499
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.349

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.593
PRC on test generated data is 0.401

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.620
PRC on test generated data is 0.446

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.349

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.354

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.593
PRC on test generated data is 0.401
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.369


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67652708 0.32347292] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67319931 0.32680069]
before perturbation, mean and variance of data mean embedding are 0.012415 and 0.084829 
after perturbation, mean and variance of data mean embedding are 0.009696 and 0.156385 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.528
PRC on test generated data is 0.337

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.626
PRC on test generated data is 0.396

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.578
PRC on test generated data is 0.360

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.323

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.330

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.573
PRC on test generated data is 0.361
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.336


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6749904 0.3250096] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67821518 0.32178482]
before perturbation, mean and variance of data mean embedding are 0.012358 and 0.084272 
after perturbation, mean and variance of data mean embedding are 0.012638 and 0.156225 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.531
PRC on test generated data is 0.339

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.340

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.557
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.590
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.541
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.319

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.318

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.596
PRC on test generated data is 0.393

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.430
PRC on test generated data is 0.292
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.336


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68441604 0.31558396]
before perturbation, mean and variance of data mean embedding are 0.012334 and 0.084536 
after perturbation, mean and variance of data mean embedding are 0.013699 and 0.157967 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.595
PRC on test generated data is 0.389

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.489
PRC on test generated data is 0.335

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.555
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.577
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.551
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.336

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.372
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.354


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53583836 0.5        0.5        0.50085596 0.55870247 0.53836971
 0.58651628 0.52398302 0.52464774 0.50015548 0.5321535  0.52878126]
Average PRC each method:  [0.35341213 0.33136201 0.33136201 0.33218267 0.36870078 0.35337684
 0.38936909 0.34962655 0.34951879 0.33184473 0.35606689 0.35215527]
Std ROC each method:  [0.0315528  0.         0.         0.00297971 0.0470739  0.03169847
 0.04938846 0.01773168 0.01726047 0.00092669 0.03511984 0.05835408]
Std PRC each method:  [0.01891723 0.01128321 0.01128321 0.01062781 0.02747711 0.01027567
 0.04456245 0.0155445  0.02313587 0.01081215 0.02236478 0.0370246 ]
Average over repetitions across all methods
Average ROC:  0.5275003144579059
Average PRC:  0.34991481305529076
Std ROC:  0.0019113100057242503
Variance PRC:  0.012239104737112419 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.525} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6936803 0.3063197] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69692692 0.30307308]
before perturbation, mean and variance of data mean embedding are 0.012377 and 0.085181 
after perturbation, mean and variance of data mean embedding are 0.011172 and 0.153080 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.594
PRC on test generated data is 0.394

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.328

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.583
PRC on test generated data is 0.381

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.558
PRC on test generated data is 0.360

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.530
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.328

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.329
----------------------------------------
roc mean across methods is 0.525
prc mean across methods is 0.343


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69628253 0.30371747] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70045768 0.29954232]
before perturbation, mean and variance of data mean embedding are 0.012372 and 0.085597 
after perturbation, mean and variance of data mean embedding are 0.011841 and 0.154274 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.507
PRC on test generated data is 0.337

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.339

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.545
PRC on test generated data is 0.355

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.338

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.567
PRC on test generated data is 0.372
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.340


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68736059 0.31263941] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68778367 0.31221633]
before perturbation, mean and variance of data mean embedding are 0.012423 and 0.085231 
after perturbation, mean and variance of data mean embedding are 0.009792 and 0.153036 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.623
PRC on test generated data is 0.378

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.611
PRC on test generated data is 0.374

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.614
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.644
PRC on test generated data is 0.403

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.528
PRC on test generated data is 0.330

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.582
PRC on test generated data is 0.358
----------------------------------------
roc mean across methods is 0.552
prc mean across methods is 0.341


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6866171 0.3133829] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68916937 0.31083063]
before perturbation, mean and variance of data mean embedding are 0.012395 and 0.085148 
after perturbation, mean and variance of data mean embedding are 0.012666 and 0.153128 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.520
PRC on test generated data is 0.322

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.309

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.328

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.540
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.582
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.312

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.311

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.314

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.433
PRC on test generated data is 0.285
----------------------------------------
roc mean across methods is 0.511
prc mean across methods is 0.316


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69107807 0.30892193] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68868725 0.31131275]
before perturbation, mean and variance of data mean embedding are 0.012387 and 0.085507 
after perturbation, mean and variance of data mean embedding are 0.013709 and 0.154855 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.536
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.520
PRC on test generated data is 0.329

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.559
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.547
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.520
PRC on test generated data is 0.342

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.323

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.491
PRC on test generated data is 0.317
----------------------------------------
roc mean across methods is 0.515
prc mean across methods is 0.330


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.55590931 0.5        0.5        0.50120526 0.55928058 0.53234363
 0.56849071 0.51002904 0.5151457  0.50423399 0.51034747 0.51626726]
Average PRC each method:  [0.35346507 0.31958406 0.31958406 0.3212955  0.35335825 0.33790616
 0.35936137 0.32649394 0.33289475 0.32450082 0.32670854 0.33223381]
Std ROC each method:  [0.04480168 0.         0.         0.00209999 0.03342004 0.0435237
 0.04653432 0.0114202  0.01685239 0.00778662 0.00900022 0.0538898 ]
Std PRC each method:  [0.02785093 0.00856791 0.00856791 0.01098006 0.02200819 0.01969295
 0.02390208 0.01238709 0.01852347 0.01209289 0.00792073 0.03069989]
Average over repetitions across all methods
Average ROC:  0.5227710786313057
Average PRC:  0.33394885876742497
Std ROC:  0.015279882488448788
Variance PRC:  0.010138393974327817 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.55} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69953221 0.30046779] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70371385 0.29628615]
before perturbation, mean and variance of data mean embedding are 0.012357 and 0.085516 
after perturbation, mean and variance of data mean embedding are 0.011191 and 0.149854 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.578
PRC on test generated data is 0.365

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.309

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.561
PRC on test generated data is 0.339

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.534
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.625
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.562
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.311

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.492
PRC on test generated data is 0.303
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.328


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70349046 0.29650954] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70399558 0.29600442]
before perturbation, mean and variance of data mean embedding are 0.012334 and 0.086062 
after perturbation, mean and variance of data mean embedding are 0.011821 and 0.151154 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.318

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.580
PRC on test generated data is 0.359

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.578
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.318

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.525
PRC on test generated data is 0.334

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.548
PRC on test generated data is 0.340
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.328


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69701331 0.30298669] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69900238 0.30099762]
before perturbation, mean and variance of data mean embedding are 0.012395 and 0.085473 
after perturbation, mean and variance of data mean embedding are 0.009847 and 0.149813 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.507
PRC on test generated data is 0.308

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.534
PRC on test generated data is 0.323

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.623
PRC on test generated data is 0.378

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.527
PRC on test generated data is 0.337

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.569
PRC on test generated data is 0.338
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.316


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69629363 0.30370637] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70026915 0.29973085]
before perturbation, mean and variance of data mean embedding are 0.012374 and 0.085649 
after perturbation, mean and variance of data mean embedding are 0.012636 and 0.150061 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.522
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.298

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.556
PRC on test generated data is 0.329

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.535
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.530
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.522
PRC on test generated data is 0.312

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.593
PRC on test generated data is 0.361
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.313


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.697733 0.302267] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6996959 0.3003041]
before perturbation, mean and variance of data mean embedding are 0.012266 and 0.085328 
after perturbation, mean and variance of data mean embedding are 0.013545 and 0.151380 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.531
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.528
PRC on test generated data is 0.315

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.568
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.304

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.494
PRC on test generated data is 0.300
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.310


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52808754 0.5        0.5        0.50029747 0.55195122 0.50999264
 0.58583936 0.50667099 0.52226387 0.50115539 0.51667864 0.53917731]
Average PRC each method:  [0.32296516 0.30478589 0.30478589 0.30512529 0.33318623 0.31161251
 0.36075238 0.30906596 0.32043107 0.3059429  0.3196233  0.32845588]
Std ROC each method:  [0.02729489 0.         0.         0.00237817 0.01888846 0.01315418
 0.03459664 0.00605088 0.02211634 0.00141595 0.01005957 0.040221  ]
Std PRC each method:  [0.02114528 0.00600791 0.00600791 0.0064077  0.01494407 0.01222227
 0.02539085 0.00990502 0.01774239 0.00611083 0.01317109 0.02331388]
Average over repetitions across all methods
Average ROC:  0.5218428698867008
Average PRC:  0.3188943736505613
Std ROC:  0.005995586693298378
Variance PRC:  0.007663861532268678 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.575} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71154517 0.28845483] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70795572 0.29204428]
before perturbation, mean and variance of data mean embedding are 0.012417 and 0.086530 
after perturbation, mean and variance of data mean embedding are 0.011287 and 0.147291 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.505
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.303

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.606
PRC on test generated data is 0.375

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.543
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.305

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.526
PRC on test generated data is 0.320

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.467
PRC on test generated data is 0.292
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.313


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71294036 0.28705964] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71497997 0.28502003]
before perturbation, mean and variance of data mean embedding are 0.012393 and 0.086733 
after perturbation, mean and variance of data mean embedding are 0.011895 and 0.148438 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.546
PRC on test generated data is 0.328

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.309

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.310

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.541
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.314

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.313
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.313


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70735961 0.29264039] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70720624 0.29279376]
before perturbation, mean and variance of data mean embedding are 0.012328 and 0.085918 
after perturbation, mean and variance of data mean embedding are 0.009859 and 0.146970 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.511
PRC on test generated data is 0.298

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.552
PRC on test generated data is 0.323

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.580
PRC on test generated data is 0.338
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.301


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70561563 0.29438437] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70448714 0.29551286]
before perturbation, mean and variance of data mean embedding are 0.012452 and 0.086621 
after perturbation, mean and variance of data mean embedding are 0.012707 and 0.147564 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.499
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.290

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.525
PRC on test generated data is 0.300

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.611
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.516
PRC on test generated data is 0.300

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.296

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.299

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.430
PRC on test generated data is 0.266
----------------------------------------
roc mean across methods is 0.508
prc mean across methods is 0.296


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70666202 0.29333798] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7032462 0.2967538]
before perturbation, mean and variance of data mean embedding are 0.012311 and 0.085755 
after perturbation, mean and variance of data mean embedding are 0.013551 and 0.148454 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.639
PRC on test generated data is 0.381

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.629
PRC on test generated data is 0.375

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.309
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.308


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51212818 0.5        0.5        0.5010325  0.56140306 0.51548051
 0.56451081 0.50425112 0.50469337 0.5002681  0.50861899 0.50252266]
Average PRC each method:  [0.30279046 0.29715216 0.29715216 0.29806294 0.33592933 0.30390494
 0.33432702 0.30071097 0.30108108 0.29752562 0.30383411 0.3035191 ]
Std ROC each method:  [0.01727513 0.         0.         0.00179402 0.05410493 0.00872882
 0.04861004 0.00626997 0.00302107 0.00053619 0.00949213 0.05117788]
Std PRC each method:  [0.01384889 0.00671758 0.00671758 0.00678462 0.0360692  0.00762775
 0.02689888 0.00717754 0.00716816 0.007101   0.01122735 0.02403311]
Average over repetitions across all methods
Average ROC:  0.5145757747053379
Average PRC:  0.30633249042639243
Std ROC:  0.005332866734602447
Variance PRC:  0.006783244235812386 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.6} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72284264 0.27715736] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72414406 0.27585594]
before perturbation, mean and variance of data mean embedding are 0.012402 and 0.087136 
after perturbation, mean and variance of data mean embedding are 0.011305 and 0.144783 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.566
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.306

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.592
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.578
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.308
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.314


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71844332 0.28155668] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71664498 0.28335502]
before perturbation, mean and variance of data mean embedding are 0.012354 and 0.086788 
after perturbation, mean and variance of data mean embedding are 0.011872 and 0.145584 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.530
PRC on test generated data is 0.305

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.602
PRC on test generated data is 0.349

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.530
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.546
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.566
PRC on test generated data is 0.322
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.304


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71878173 0.28121827] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72305911 0.27694089]
before perturbation, mean and variance of data mean embedding are 0.012318 and 0.086525 
after perturbation, mean and variance of data mean embedding are 0.009923 and 0.144452 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.662
PRC on test generated data is 0.393

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.566
PRC on test generated data is 0.326
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.304


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71404399 0.28595601] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71667662 0.28332338]
before perturbation, mean and variance of data mean embedding are 0.012386 and 0.086653 
after perturbation, mean and variance of data mean embedding are 0.012633 and 0.144720 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.502
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.287

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.282

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.596
PRC on test generated data is 0.330
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.287


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.7143824 0.2856176] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71450509 0.28549491]
before perturbation, mean and variance of data mean embedding are 0.012379 and 0.086721 
after perturbation, mean and variance of data mean embedding are 0.013582 and 0.146133 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.557
PRC on test generated data is 0.323

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.601
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.558
PRC on test generated data is 0.311

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.522
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.286

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.312
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.299


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51967219 0.5        0.5        0.49946689 0.5688178  0.54828094
 0.53805203 0.52142736 0.50635791 0.50043224 0.5012684  0.55821721]
Average PRC each method:  [0.29817333 0.2887135  0.2887135  0.28858558 0.33149029 0.31460731
 0.31399219 0.30191948 0.29461325 0.28912243 0.28976844 0.3197281 ]
Std ROC each method:  [0.02561183 0.         0.         0.00106622 0.05770531 0.02435494
 0.04241342 0.02523644 0.00832976 0.00086449 0.00207143 0.02636541]
Std PRC each method:  [0.01896413 0.00756049 0.00756049 0.0077076  0.03680068 0.02385549
 0.03078842 0.01541689 0.00768804 0.00769741 0.00676157 0.00851407]
Average over repetitions across all methods
Average ROC:  0.521832747443025
Average PRC:  0.301618950293581
Std ROC:  0.0048034182592668635
Variance PRC:  0.008813024803862365 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 20, 'subsampled_rate': 0.625} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.73085771 0.26914229] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7327743 0.2672257]
before perturbation, mean and variance of data mean embedding are 0.012356 and 0.087537 
after perturbation, mean and variance of data mean embedding are 0.011292 and 0.142345 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.516
PRC on test generated data is 0.300

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.293

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.523
PRC on test generated data is 0.305

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.530
PRC on test generated data is 0.308

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.600
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.475
PRC on test generated data is 0.283
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.302


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72724285 0.27275715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7280155 0.2719845]
before perturbation, mean and variance of data mean embedding are 0.012391 and 0.087638 
after perturbation, mean and variance of data mean embedding are 0.011922 and 0.143433 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.285

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.287

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.541
PRC on test generated data is 0.310

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.527
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.543
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.514
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.285
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.293


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72954321 0.27045679] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72914205 0.27085795]
before perturbation, mean and variance of data mean embedding are 0.012382 and 0.087731 
after perturbation, mean and variance of data mean embedding are 0.010055 and 0.142496 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.544
PRC on test generated data is 0.311

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.524
PRC on test generated data is 0.300

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.289

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.557
PRC on test generated data is 0.318
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.295


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72855734 0.27144266] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72817364 0.27182636]
before perturbation, mean and variance of data mean embedding are 0.012376 and 0.087559 
after perturbation, mean and variance of data mean embedding are 0.012616 and 0.142589 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.287

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.576
PRC on test generated data is 0.337

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.550
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.555
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.315

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.287

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.288

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.555
PRC on test generated data is 0.324
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.301


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 20
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=20_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72034177 0.27965823] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72023864 0.27976136]
before perturbation, mean and variance of data mean embedding are 0.012384 and 0.086989 
after perturbation, mean and variance of data mean embedding are 0.013553 and 0.143559 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.546
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.616
PRC on test generated data is 0.344

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.568
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.535
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.532
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.558
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.267
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.286


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51282581 0.5        0.5        0.50094678 0.56002603 0.53605677
 0.54840505 0.52466714 0.51598405 0.5        0.50348187 0.51798693]
Average PRC each method:  [0.28956009 0.28367816 0.28367816 0.28469763 0.32143829 0.30236061
 0.31148521 0.30444142 0.29507885 0.28367816 0.2880547  0.29562794]
Std ROC each method:  [0.01764474 0.         0.         0.00099786 0.03304621 0.02054952
 0.0279572  0.01584541 0.02138248 0.         0.00508018 0.03269223]
Std PRC each method:  [0.00515477 0.00857964 0.00857964 0.00884947 0.01575073 0.0076445
 0.02550171 0.00984586 0.00787074 0.00857964 0.01152692 0.02202809]
Average over repetitions across all methods
Average ROC:  0.5183650356787136
Average PRC:  0.2953149356253163
Std ROC:  0.006864365898480573
Variance PRC:  0.005689823897539382 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.4} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63422222 0.36577778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63501933 0.36498067]
before perturbation, mean and variance of data mean embedding are 0.006246 and 0.059865 
after perturbation, mean and variance of data mean embedding are 0.006083 and 0.164062 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.585
PRC on test generated data is 0.440

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.496
PRC on test generated data is 0.390

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.585
PRC on test generated data is 0.443

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.558
PRC on test generated data is 0.426

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.498
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.530
PRC on test generated data is 0.409

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.391

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.476
PRC on test generated data is 0.380
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.403


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63377778 0.36622222] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63164989 0.36835011]
before perturbation, mean and variance of data mean embedding are 0.006234 and 0.059829 
after perturbation, mean and variance of data mean embedding are 0.006666 and 0.164404 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.548
PRC on test generated data is 0.415

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.390

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.577
PRC on test generated data is 0.435

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.417

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.555
PRC on test generated data is 0.427

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.390

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.399
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.402


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.616 0.384] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61502704 0.38497296]
before perturbation, mean and variance of data mean embedding are 0.006188 and 0.059144 
after perturbation, mean and variance of data mean embedding are 0.004417 and 0.163668 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.515
PRC on test generated data is 0.358

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.369

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.351

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.552
PRC on test generated data is 0.375

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.527
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.652
PRC on test generated data is 0.442

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.579
PRC on test generated data is 0.403

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.528
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.349

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.600
PRC on test generated data is 0.420

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.381
PRC on test generated data is 0.310
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.371


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.61822222 0.38177778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62153723 0.37846277]
before perturbation, mean and variance of data mean embedding are 0.006248 and 0.059574 
after perturbation, mean and variance of data mean embedding are 0.006101 and 0.164181 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.541
PRC on test generated data is 0.375

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.355

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.357

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.576
PRC on test generated data is 0.395

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.575
PRC on test generated data is 0.394

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.373

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.355

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.530
PRC on test generated data is 0.375

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.574
PRC on test generated data is 0.402
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.370


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63022222 0.36977778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62577256 0.37422744]
before perturbation, mean and variance of data mean embedding are 0.006230 and 0.059882 
after perturbation, mean and variance of data mean embedding are 0.006803 and 0.164095 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.542
PRC on test generated data is 0.409

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.383

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.389

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.523
PRC on test generated data is 0.393

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.527
PRC on test generated data is 0.398

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.523
PRC on test generated data is 0.395

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.571
PRC on test generated data is 0.423

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.526
PRC on test generated data is 0.401

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.381

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.547
PRC on test generated data is 0.419

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.623
PRC on test generated data is 0.505
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.406


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54638351 0.5        0.50422688 0.50418382 0.54726918 0.51151758
 0.57701225 0.5394033  0.53144147 0.49965442 0.53548921 0.5146119 ]
Average PRC each method:  [0.39924348 0.37264249 0.37745053 0.37543083 0.39920111 0.37903759
 0.41846372 0.3972949  0.3957657  0.37302897 0.39908326 0.3990913 ]
Std ROC each method:  [0.02243831 0.         0.00649196 0.0057632  0.03184539 0.01273994
 0.04239476 0.03432291 0.01263895 0.00151868 0.03695326 0.08335782]
Std PRC each method:  [0.02955898 0.01821713 0.01358086 0.01739008 0.02275317 0.01701739
 0.02015121 0.024517   0.02214333 0.01768125 0.0178815  0.06237701]
Average over repetitions across all methods
Average ROC:  0.5259327935593642
Average PRC:  0.390477823851648
Std ROC:  0.00546493798080227
Variance PRC:  0.016118775305009027 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.425} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6471343 0.3528657] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65041604 0.34958396]
before perturbation, mean and variance of data mean embedding are 0.006188 and 0.060037 
after perturbation, mean and variance of data mean embedding are 0.006031 and 0.158802 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.534
PRC on test generated data is 0.394

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.374

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.584
PRC on test generated data is 0.423

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.527
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.375

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.465
PRC on test generated data is 0.359
----------------------------------------
roc mean across methods is 0.509
prc mean across methods is 0.380


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64927288 0.35072712] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65014684 0.34985316]
before perturbation, mean and variance of data mean embedding are 0.006243 and 0.060356 
after perturbation, mean and variance of data mean embedding are 0.006658 and 0.159254 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.517
PRC on test generated data is 0.389

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.508
PRC on test generated data is 0.384

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.604
PRC on test generated data is 0.456

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.402

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.580
PRC on test generated data is 0.426

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.560
PRC on test generated data is 0.411

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.548
PRC on test generated data is 0.422

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.380

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.380

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.589
PRC on test generated data is 0.430
----------------------------------------
roc mean across methods is 0.537
prc mean across methods is 0.403


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63088109 0.36911891] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63447585 0.36552415]
before perturbation, mean and variance of data mean embedding are 0.006216 and 0.059493 
after perturbation, mean and variance of data mean embedding are 0.004512 and 0.158480 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.520
PRC on test generated data is 0.358

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.350

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.337

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.535
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.579
PRC on test generated data is 0.398

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.604
PRC on test generated data is 0.399

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.531
PRC on test generated data is 0.367

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.494
PRC on test generated data is 0.334
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.356


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63473054 0.36526946] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63315886 0.36684114]
before perturbation, mean and variance of data mean embedding are 0.006258 and 0.059986 
after perturbation, mean and variance of data mean embedding are 0.006116 and 0.159001 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.524
PRC on test generated data is 0.358

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.359

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.613
PRC on test generated data is 0.418

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.359

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.540
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.554
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.579
PRC on test generated data is 0.390

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.518
PRC on test generated data is 0.363

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.524
PRC on test generated data is 0.361

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.585
PRC on test generated data is 0.405
----------------------------------------
roc mean across methods is 0.539
prc mean across methods is 0.371


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64499572 0.35500428] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64652207 0.35347793]
before perturbation, mean and variance of data mean embedding are 0.006235 and 0.060314 
after perturbation, mean and variance of data mean embedding are 0.006786 and 0.158904 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.544
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.371

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.518
PRC on test generated data is 0.381

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.583
PRC on test generated data is 0.415

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.574
PRC on test generated data is 0.416

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.532
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.551
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.536
PRC on test generated data is 0.406

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.569
PRC on test generated data is 0.422

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.376
----------------------------------------
roc mean across methods is 0.536
prc mean across methods is 0.392


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52807082 0.5        0.50027027 0.50978502 0.57695138 0.53116041
 0.54656513 0.55025625 0.53765509 0.51184997 0.52525116 0.52914779]
Average PRC each method:  [0.37809485 0.36051844 0.36085958 0.36945424 0.40960718 0.38376815
 0.39046129 0.39264866 0.38711355 0.37258286 0.38088074 0.38055371]
Std ROC each method:  [0.0100343  0.         0.00054054 0.00625161 0.03953187 0.02529206
 0.02887298 0.0334938  0.02873925 0.0138198  0.02506333 0.04958415]
Std PRC each method:  [0.01639146 0.01690335 0.01708516 0.01302362 0.03932124 0.02190326
 0.02106111 0.01188119 0.02422299 0.02185192 0.02179057 0.03365864]
Average over repetitions across all methods
Average ROC:  0.5289136067105289
Average PRC:  0.3805452709497363
Std ROC:  0.011126053712811591
Variance PRC:  0.016363315500351173 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.45} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66075845 0.33924155] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66326611 0.33673389]
before perturbation, mean and variance of data mean embedding are 0.006251 and 0.060772 
after perturbation, mean and variance of data mean embedding are 0.006100 and 0.154185 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.584
PRC on test generated data is 0.410

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.362

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.573
PRC on test generated data is 0.409

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.541
PRC on test generated data is 0.383

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.636
PRC on test generated data is 0.443

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.373

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.362

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.369

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.486
PRC on test generated data is 0.356
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.379


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66158285 0.33841715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66195325 0.33804675]
before perturbation, mean and variance of data mean embedding are 0.006219 and 0.060661 
after perturbation, mean and variance of data mean embedding are 0.006620 and 0.154441 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.364

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.607
PRC on test generated data is 0.426

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.606
PRC on test generated data is 0.436

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.570
PRC on test generated data is 0.406

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.522
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.490
PRC on test generated data is 0.363

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.366

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.369
----------------------------------------
roc mean across methods is 0.526
prc mean across methods is 0.381


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65127782 0.34872218] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65669315 0.34330685]
before perturbation, mean and variance of data mean embedding are 0.006263 and 0.060479 
after perturbation, mean and variance of data mean embedding are 0.004621 and 0.153959 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.562
PRC on test generated data is 0.375

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.342

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.582
PRC on test generated data is 0.388

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.528
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.547
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.539
PRC on test generated data is 0.382

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.612
PRC on test generated data is 0.415
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.360


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64715581 0.35284419] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64324123 0.35675877]
before perturbation, mean and variance of data mean embedding are 0.006262 and 0.060480 
after perturbation, mean and variance of data mean embedding are 0.006125 and 0.154266 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.579
PRC on test generated data is 0.409

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.339

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.623
PRC on test generated data is 0.408

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.542
PRC on test generated data is 0.355

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.330

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.340

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.555
PRC on test generated data is 0.357
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.349


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65787304 0.34212696] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65642044 0.34357956]
before perturbation, mean and variance of data mean embedding are 0.006197 and 0.060460 
after perturbation, mean and variance of data mean embedding are 0.006728 and 0.154035 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.556
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.357

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.520
PRC on test generated data is 0.367

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.580
PRC on test generated data is 0.414

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.580
PRC on test generated data is 0.412

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.515
PRC on test generated data is 0.363

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.514
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.539
PRC on test generated data is 0.381

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.585
PRC on test generated data is 0.420

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.622
PRC on test generated data is 0.479
----------------------------------------
roc mean across methods is 0.543
prc mean across methods is 0.388


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54041907 0.51588619 0.50027027 0.50439902 0.57195984 0.55447741
 0.56919108 0.51486764 0.51100607 0.50514133 0.5298152  0.55689384]
Average PRC each method:  [0.37406553 0.36620787 0.35078069 0.35325422 0.39513965 0.38393283
 0.39212927 0.35940447 0.3590118  0.35519036 0.37545954 0.395159  ]
Std ROC each method:  [0.03424318 0.03177238 0.00054054 0.00799763 0.02906668 0.04290895
 0.04492845 0.02747525 0.00745183 0.01732566 0.03001589 0.05371888]
Std PRC each method:  [0.02671452 0.02315397 0.01322925 0.01437501 0.03073149 0.02321412
 0.03894263 0.02620984 0.01893111 0.01810514 0.02609849 0.04685359]
Average over repetitions across all methods
Average ROC:  0.5311939134478358
Average PRC:  0.3716446030264461
Std ROC:  0.006203111907565116
Variance PRC:  0.01457852639300044 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.475} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67157058 0.32842942] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67258206 0.32741794]
before perturbation, mean and variance of data mean embedding are 0.006223 and 0.060895 
after perturbation, mean and variance of data mean embedding are 0.006078 and 0.149652 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.560
PRC on test generated data is 0.378

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.537
PRC on test generated data is 0.377

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.363

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.347

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.488
PRC on test generated data is 0.342
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.354


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67673956 0.32326044] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67581757 0.32418243]
before perturbation, mean and variance of data mean embedding are 0.006247 and 0.061222 
after perturbation, mean and variance of data mean embedding are 0.006633 and 0.150064 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.512
PRC on test generated data is 0.365

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.361

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.592
PRC on test generated data is 0.420

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.365

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.646
PRC on test generated data is 0.489

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.572
PRC on test generated data is 0.398

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.524
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.360

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.583
PRC on test generated data is 0.416

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.645
PRC on test generated data is 0.500
----------------------------------------
roc mean across methods is 0.549
prc mean across methods is 0.397


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66202783 0.33797217] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66279451 0.33720549]
before perturbation, mean and variance of data mean embedding are 0.006200 and 0.060360 
after perturbation, mean and variance of data mean embedding are 0.004616 and 0.149328 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.621
PRC on test generated data is 0.425

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.557
PRC on test generated data is 0.358

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.540
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.594
PRC on test generated data is 0.392

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.327

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.325

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.472
PRC on test generated data is 0.313
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.342


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66043738 0.33956262] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66255262 0.33744738]
before perturbation, mean and variance of data mean embedding are 0.006222 and 0.060658 
after perturbation, mean and variance of data mean embedding are 0.006090 and 0.149752 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.513
PRC on test generated data is 0.327

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.325

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.329

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.329

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.574
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.525
PRC on test generated data is 0.341

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.535
PRC on test generated data is 0.349

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.582
PRC on test generated data is 0.381
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.337


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66878728 0.33121272] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66611373 0.33388627]
before perturbation, mean and variance of data mean embedding are 0.006219 and 0.060967 
after perturbation, mean and variance of data mean embedding are 0.006731 and 0.149618 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.512
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.529
PRC on test generated data is 0.358

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.544
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.622
PRC on test generated data is 0.417

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.563
PRC on test generated data is 0.375

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.538
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.549
PRC on test generated data is 0.377

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.625
PRC on test generated data is 0.469
----------------------------------------
roc mean across methods is 0.540
prc mean across methods is 0.370


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.5435089  0.5        0.5        0.50771752 0.54018225 0.52803627
 0.58723629 0.53525083 0.51506754 0.50007892 0.53355893 0.56241044]
Average PRC each method:  [0.36841989 0.33840445 0.33840445 0.34320879 0.36474808 0.35365895
 0.40482827 0.35949592 0.3474826  0.33859534 0.3627158  0.40108172]
Std ROC each method:  [0.04307481 0.         0.         0.0110465  0.03218275 0.01395739
 0.05004629 0.02738218 0.0146456  0.00092052 0.03118446 0.07010446]
Std PRC each method:  [0.0332288  0.01409774 0.01409774 0.01553479 0.03191017 0.01511162
 0.04772908 0.02515518 0.02141523 0.01437895 0.03111778 0.07202103]
Average over repetitions across all methods
Average ROC:  0.5294206567473589
Average PRC:  0.36008702253045816
Std ROC:  0.013344849675930765
Variance PRC:  0.021698846609052455 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.5} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67938141 0.32061859]
before perturbation, mean and variance of data mean embedding are 0.006231 and 0.061576 
after perturbation, mean and variance of data mean embedding are 0.006091 and 0.145761 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.523
PRC on test generated data is 0.346

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.537
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.478
PRC on test generated data is 0.326
----------------------------------------
roc mean across methods is 0.503
prc mean across methods is 0.338


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68843642 0.31156358] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68978992 0.31021008]
before perturbation, mean and variance of data mean embedding are 0.006249 and 0.062037 
after perturbation, mean and variance of data mean embedding are 0.006623 and 0.146199 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.545
PRC on test generated data is 0.373

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.352

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.590
PRC on test generated data is 0.401

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.372

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.593
PRC on test generated data is 0.415

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.538
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.350

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.641
PRC on test generated data is 0.484
----------------------------------------
roc mean across methods is 0.541
prc mean across methods is 0.379


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67652708 0.32347292] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67968406 0.32031594]
before perturbation, mean and variance of data mean embedding are 0.006209 and 0.061071 
after perturbation, mean and variance of data mean embedding are 0.004679 and 0.145427 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.523
PRC on test generated data is 0.331

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.592
PRC on test generated data is 0.375

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.641
PRC on test generated data is 0.408

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.601
PRC on test generated data is 0.384
----------------------------------------
roc mean across methods is 0.535
prc mean across methods is 0.343


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6749904 0.3250096] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67888267 0.32111733]
before perturbation, mean and variance of data mean embedding are 0.006224 and 0.061177 
after perturbation, mean and variance of data mean embedding are 0.006097 and 0.145757 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.541
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.531
PRC on test generated data is 0.335

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.540
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.319

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.323
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.324


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68568792 0.31431208]
before perturbation, mean and variance of data mean embedding are 0.006247 and 0.061409 
after perturbation, mean and variance of data mean embedding are 0.006742 and 0.145583 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.636
PRC on test generated data is 0.421

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.337

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.528
PRC on test generated data is 0.354

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.342

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.542
PRC on test generated data is 0.365

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.517
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.338

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.542
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.530
PRC on test generated data is 0.355

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.340
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.353


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54892938 0.5        0.50026738 0.50582418 0.549952   0.52790836
 0.56566423 0.51297624 0.51851984 0.49986523 0.50663079 0.54848736]
Average PRC each method:  [0.35931461 0.33136201 0.33171756 0.33583283 0.35985946 0.34716971
 0.37284909 0.34256148 0.3474128  0.33136201 0.33613984 0.37148304]
Std ROC each method:  [0.04622375 0.         0.00053476 0.0110946  0.03366696 0.02292893
 0.04531236 0.01205169 0.01799632 0.00026954 0.01163821 0.06176896]
Std PRC each method:  [0.0343299  0.01128321 0.01142334 0.01527943 0.0245278  0.02007524
 0.032806   0.01907069 0.02313508 0.01128321 0.01480915 0.06019618]
Average over repetitions across all methods
Average ROC:  0.5237520823495097
Average PRC:  0.34725536835476284
Std ROC:  0.014227321098918087
Variance PRC:  0.01844557803849839 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.525} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6936803 0.3063197] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69763598 0.30236402]
before perturbation, mean and variance of data mean embedding are 0.006242 and 0.061817 
after perturbation, mean and variance of data mean embedding are 0.006106 and 0.142010 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.579
PRC on test generated data is 0.372

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.623
PRC on test generated data is 0.405

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.551
PRC on test generated data is 0.358

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.326

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.464
PRC on test generated data is 0.311
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.341


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69628253 0.30371747] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69922056 0.30077944]
before perturbation, mean and variance of data mean embedding are 0.006227 and 0.061961 
after perturbation, mean and variance of data mean embedding are 0.006588 and 0.142289 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.332

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.633
PRC on test generated data is 0.412

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.628
PRC on test generated data is 0.443

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.628
PRC on test generated data is 0.443
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.357


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68736059 0.31263941] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68989326 0.31010674]
before perturbation, mean and variance of data mean embedding are 0.006210 and 0.061402 
after perturbation, mean and variance of data mean embedding are 0.004729 and 0.141725 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.508
PRC on test generated data is 0.314

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.311

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.317

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.545
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.569
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.312

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.313
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.318


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6866171 0.3133829] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68843912 0.31156088]
before perturbation, mean and variance of data mean embedding are 0.006275 and 0.061886 
after perturbation, mean and variance of data mean embedding are 0.006152 and 0.142184 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.528
PRC on test generated data is 0.341

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.518
PRC on test generated data is 0.330

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.593
PRC on test generated data is 0.358

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.635
PRC on test generated data is 0.395

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.536
PRC on test generated data is 0.329

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.324

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.309

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.524
PRC on test generated data is 0.334

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.527
PRC on test generated data is 0.323
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.333


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69107807 0.30892193] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69394155 0.30605845]
before perturbation, mean and variance of data mean embedding are 0.006222 and 0.061885 
after perturbation, mean and variance of data mean embedding are 0.006701 and 0.141917 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.543
PRC on test generated data is 0.341

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.495
PRC on test generated data is 0.319

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.322

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.674
PRC on test generated data is 0.431

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.519
PRC on test generated data is 0.332

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.638
PRC on test generated data is 0.469
----------------------------------------
roc mean across methods is 0.534
prc mean across methods is 0.346


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53168535 0.5        0.5        0.50230301 0.57299667 0.51259265
 0.6114235  0.52559046 0.50389151 0.49961746 0.50855527 0.55219161]
Average PRC each method:  [0.34000153 0.31958406 0.31958406 0.323425   0.36303237 0.33009798
 0.39512617 0.33709501 0.32374456 0.31958406 0.3268003  0.3719194 ]
Std ROC each method:  [0.02828697 0.         0.         0.00790996 0.05493755 0.01770739
 0.04487531 0.01670061 0.00413319 0.00051264 0.01057265 0.06899898]
Std PRC each method:  [0.01857669 0.00856791 0.00856791 0.00759052 0.03984573 0.00785238
 0.03770119 0.01584435 0.0072739  0.00856791 0.00827729 0.06927867]
Average over repetitions across all methods
Average ROC:  0.5267372910984052
Average PRC:  0.33916620767250993
Std ROC:  0.008547728826996252
Variance PRC:  0.013173571053393026 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.55} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69953221 0.30046779] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70600881 0.29399119]
before perturbation, mean and variance of data mean embedding are 0.006230 and 0.062158 
after perturbation, mean and variance of data mean embedding are 0.006099 and 0.138512 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.542
PRC on test generated data is 0.327

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.306

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.560
PRC on test generated data is 0.339

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.486
PRC on test generated data is 0.301
----------------------------------------
roc mean across methods is 0.507
prc mean across methods is 0.310


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70349046 0.29650954] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70188051 0.29811949]
before perturbation, mean and variance of data mean embedding are 0.006237 and 0.062321 
after perturbation, mean and variance of data mean embedding are 0.006587 and 0.138790 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.512
PRC on test generated data is 0.327

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.323

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.641
PRC on test generated data is 0.399

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.551
PRC on test generated data is 0.342

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.605
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.525
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.521
PRC on test generated data is 0.332

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.642
PRC on test generated data is 0.452
----------------------------------------
roc mean across methods is 0.543
prc mean across methods is 0.347


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69701331 0.30298669] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69562157 0.30437843]
before perturbation, mean and variance of data mean embedding are 0.006252 and 0.062136 
after perturbation, mean and variance of data mean embedding are 0.004818 and 0.138405 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.514
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.548
PRC on test generated data is 0.327

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.679
PRC on test generated data is 0.409

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.564
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.514
PRC on test generated data is 0.317

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.528
PRC on test generated data is 0.313
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.319


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69629363 0.30370637] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69322706 0.30677294]
before perturbation, mean and variance of data mean embedding are 0.006275 and 0.062233 
after perturbation, mean and variance of data mean embedding are 0.006155 and 0.138676 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.579
PRC on test generated data is 0.343

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.554
PRC on test generated data is 0.325

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.584
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.522
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.580
PRC on test generated data is 0.356
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.316


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.697733 0.302267] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6936996 0.3063004]
before perturbation, mean and variance of data mean embedding are 0.006203 and 0.061951 
after perturbation, mean and variance of data mean embedding are 0.006666 and 0.138271 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.567
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.303

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.565
PRC on test generated data is 0.335

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.590
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.526
PRC on test generated data is 0.322

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.306

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.601
PRC on test generated data is 0.407
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.326


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.5428383  0.5        0.5        0.50100364 0.57354443 0.56412677
 0.55619963 0.50819074 0.50920168 0.5        0.50918242 0.56732392]
Average PRC each method:  [0.33343985 0.30478589 0.30478589 0.30628636 0.34511641 0.34257617
 0.33879665 0.30984507 0.31212238 0.30478589 0.3130457  0.36575462]
Std ROC each method:  [0.02698378 0.         0.         0.00269221 0.0339907  0.06510224
 0.03991189 0.00902932 0.00916522 0.         0.00745215 0.05476837]
Std PRC each method:  [0.018991   0.00600791 0.00600791 0.00853384 0.02730247 0.03789393
 0.02782138 0.01090766 0.01006709 0.00600791 0.01088204 0.05676948]
Average over repetitions across all methods
Average ROC:  0.527634294275396
Average PRC:  0.32344507351452007
Std ROC:  0.011522272138707318
Variance PRC:  0.012547975130268807 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.575} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71154517 0.28845483] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71314476 0.28685524]
before perturbation, mean and variance of data mean embedding are 0.006272 and 0.062747 
after perturbation, mean and variance of data mean embedding are 0.006144 and 0.135397 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.513
PRC on test generated data is 0.310

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.308

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.595
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.319
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.310


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71294036 0.28705964] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71435178 0.28564822]
before perturbation, mean and variance of data mean embedding are 0.006215 and 0.062586 
after perturbation, mean and variance of data mean embedding are 0.006554 and 0.135521 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.307

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.610
PRC on test generated data is 0.381

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.631
PRC on test generated data is 0.397

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.513
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.515
PRC on test generated data is 0.320

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.633
PRC on test generated data is 0.426
----------------------------------------
roc mean across methods is 0.534
prc mean across methods is 0.332


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70735961 0.29264039] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70570349 0.29429651]
before perturbation, mean and variance of data mean embedding are 0.006186 and 0.062336 
after perturbation, mean and variance of data mean embedding are 0.004796 and 0.135144 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.531
PRC on test generated data is 0.312

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.518
PRC on test generated data is 0.303

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.520
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.303

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.307
----------------------------------------
roc mean across methods is 0.512
prc mean across methods is 0.300


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70561563 0.29438437] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70194633 0.29805367]
before perturbation, mean and variance of data mean embedding are 0.006229 and 0.062282 
after perturbation, mean and variance of data mean embedding are 0.006113 and 0.135316 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.596
PRC on test generated data is 0.357

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.520
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.520
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.524
PRC on test generated data is 0.314

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.578
PRC on test generated data is 0.341
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.306


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70666202 0.29333798] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70440231 0.29559769]
before perturbation, mean and variance of data mean embedding are 0.006261 and 0.062539 
after perturbation, mean and variance of data mean embedding are 0.006710 and 0.135141 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.530
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.539
PRC on test generated data is 0.311

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.527
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.523
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.543
PRC on test generated data is 0.319

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.293

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.606
PRC on test generated data is 0.409
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.309


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51487485 0.5        0.5        0.50020122 0.55461112 0.53208701
 0.53510919 0.51636257 0.51401256 0.49993491 0.50810188 0.57569044]
Average PRC each method:  [0.3047512  0.29715216 0.29715216 0.29724563 0.33190979 0.31781576
 0.31552606 0.30932657 0.30562908 0.29754653 0.30472867 0.36059868]
Std ROC each method:  [0.0137169  0.         0.         0.00029616 0.04091595 0.0508591
 0.03040557 0.0173617  0.01623261 0.000987   0.01000562 0.04064627]
Std PRC each method:  [0.00786522 0.00671758 0.00671758 0.00680197 0.03118555 0.04013661
 0.02124886 0.00854981 0.00781795 0.0064629  0.0107675  0.04814396]
Average over repetitions across all methods
Average ROC:  0.5209154804987361
Average PRC:  0.31161518933039833
Std ROC:  0.008154478054503731
Variance PRC:  0.010888063846466133 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.6} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72284264 0.27715736] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72367271 0.27632729]
before perturbation, mean and variance of data mean embedding are 0.006195 and 0.062824 
after perturbation, mean and variance of data mean embedding are 0.006071 and 0.132307 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.310
----------------------------------------
roc mean across methods is 0.503
prc mean across methods is 0.302


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71844332 0.28155668] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72084461 0.27915539]
before perturbation, mean and variance of data mean embedding are 0.006240 and 0.062953 
after perturbation, mean and variance of data mean embedding are 0.006569 and 0.132529 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.530
PRC on test generated data is 0.305

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.590
PRC on test generated data is 0.349

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.613
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.528
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.508
PRC on test generated data is 0.296

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.293

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.297

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.642
PRC on test generated data is 0.423
----------------------------------------
roc mean across methods is 0.536
prc mean across methods is 0.316


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71878173 0.28121827] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71452904 0.28547096]
before perturbation, mean and variance of data mean embedding are 0.006223 and 0.062949 
after perturbation, mean and variance of data mean embedding are 0.004875 and 0.132293 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.539
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.291

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.305
----------------------------------------
roc mean across methods is 0.505
prc mean across methods is 0.294


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71404399 0.28595601] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71147438 0.28852562]
before perturbation, mean and variance of data mean embedding are 0.006204 and 0.062523 
after perturbation, mean and variance of data mean embedding are 0.006092 and 0.132278 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.558
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.288

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.282

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.559
PRC on test generated data is 0.312
----------------------------------------
roc mean across methods is 0.511
prc mean across methods is 0.286


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.7143824 0.2856176] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71457155 0.28542845]
before perturbation, mean and variance of data mean embedding are 0.006226 and 0.062940 
after perturbation, mean and variance of data mean embedding are 0.006662 and 0.132158 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.621
PRC on test generated data is 0.354

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.566
PRC on test generated data is 0.315

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.282

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.285

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.282

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.531
PRC on test generated data is 0.302

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.638
PRC on test generated data is 0.427
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.304


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53802995 0.5        0.5        0.49945385 0.5306725  0.52268044
 0.51880373 0.50211757 0.5047202  0.50152496 0.50775442 0.57765842]
Average PRC each method:  [0.3095287  0.2887135  0.2887135  0.28862587 0.30715563 0.30186927
 0.2973458  0.29069022 0.29107074 0.28975168 0.2940742  0.35543627]
Std ROC each method:  [0.04453661 0.         0.         0.00125624 0.03919168 0.04493428
 0.02226819 0.00303251 0.00657463 0.0018574  0.01209955 0.05206974]
Std PRC each method:  [0.02410211 0.00756049 0.00756049 0.0077448  0.02389359 0.02787075
 0.00974641 0.00741008 0.00657396 0.00714072 0.00785861 0.05666846]
Average over repetitions across all methods
Average ROC:  0.5169513365610312
Average PRC:  0.3002479482632515
Std ROC:  0.013369838884954745
Variance PRC:  0.010059833898668453 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 40, 'subsampled_rate': 0.625} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.73085771 0.26914229] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73211715 0.26788285]
before perturbation, mean and variance of data mean embedding are 0.006226 and 0.063476 
after perturbation, mean and variance of data mean embedding are 0.006106 and 0.129680 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.575
PRC on test generated data is 0.346

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.576
PRC on test generated data is 0.333

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.520
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.462
PRC on test generated data is 0.279
----------------------------------------
roc mean across methods is 0.511
prc mean across methods is 0.300


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72724285 0.27275715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72570278 0.27429722]
before perturbation, mean and variance of data mean embedding are 0.006262 and 0.063477 
after perturbation, mean and variance of data mean embedding are 0.006581 and 0.129828 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.286

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.548
PRC on test generated data is 0.319

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.506
PRC on test generated data is 0.286

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.293

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.647
PRC on test generated data is 0.421
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.300


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72954321 0.27045679] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72848647 0.27151353]
before perturbation, mean and variance of data mean embedding are 0.006269 and 0.063705 
after perturbation, mean and variance of data mean embedding are 0.004960 and 0.129733 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.542
PRC on test generated data is 0.308

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.535
PRC on test generated data is 0.305

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.558
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.590
PRC on test generated data is 0.344

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.537
PRC on test generated data is 0.307
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.301


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72855734 0.27144266] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72793239 0.27206761]
before perturbation, mean and variance of data mean embedding are 0.006232 and 0.063371 
after perturbation, mean and variance of data mean embedding are 0.006123 and 0.129715 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.533
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.580
PRC on test generated data is 0.347

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.648
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.561
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.288

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.518
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.292
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.303


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 40
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=40_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72034177 0.27965823] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71880642 0.28119358]
before perturbation, mean and variance of data mean embedding are 0.006266 and 0.063271 
after perturbation, mean and variance of data mean embedding are 0.006690 and 0.129351 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.515
PRC on test generated data is 0.274

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.270

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.599
PRC on test generated data is 0.321

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.622
PRC on test generated data is 0.353

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.285

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.268

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.272

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.267
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.282


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53411649 0.5        0.5        0.50046846 0.5675316  0.54244634
 0.55831517 0.50923054 0.50714013 0.5        0.50245309 0.53186125]
Average PRC each method:  [0.302758   0.28367816 0.28367816 0.28413574 0.3248709  0.30538911
 0.31972082 0.28975442 0.28921018 0.28367816 0.28675541 0.31345414]
Std ROC each method:  [0.02409678 0.         0.         0.00093693 0.02292207 0.05708686
 0.04498487 0.01057573 0.00654363 0.         0.00284096 0.06236216]
Std PRC each method:  [0.02460025 0.00857964 0.00857964 0.00771887 0.01393085 0.03351035
 0.02574757 0.00326918 0.01075044 0.00857964 0.007859   0.05551041]
Average over repetitions across all methods
Average ROC:  0.5211302573185753
Average PRC:  0.29725693397710684
Std ROC:  0.005911050433999482
Variance PRC:  0.007957833170219544 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.4} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63422222 0.36577778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6307247 0.3692753]
before perturbation, mean and variance of data mean embedding are 0.003183 and 0.043052 
after perturbation, mean and variance of data mean embedding are 0.002479 and 0.158615 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.588
PRC on test generated data is 0.451

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.391

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.569
PRC on test generated data is 0.432

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.402

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.587
PRC on test generated data is 0.437

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.396

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.527
PRC on test generated data is 0.414

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.391

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.549
PRC on test generated data is 0.421
----------------------------------------
roc mean across methods is 0.529
prc mean across methods is 0.409


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63377778 0.36622222] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63728056 0.36271944]
before perturbation, mean and variance of data mean embedding are 0.003157 and 0.042822 
after perturbation, mean and variance of data mean embedding are 0.003736 and 0.158714 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.504
PRC on test generated data is 0.394

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.390

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.391

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.619
PRC on test generated data is 0.471

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.575
PRC on test generated data is 0.429

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.641
PRC on test generated data is 0.487

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.519
PRC on test generated data is 0.401

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.391

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.390

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.393

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.403
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.411


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.616 0.384] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6142831 0.3857169]
before perturbation, mean and variance of data mean embedding are 0.003148 and 0.042479 
after perturbation, mean and variance of data mean embedding are 0.001986 and 0.158147 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.568
PRC on test generated data is 0.402

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.348

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.567
PRC on test generated data is 0.418

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.572
PRC on test generated data is 0.407

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.583
PRC on test generated data is 0.410

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.567
PRC on test generated data is 0.385

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.541
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.557
PRC on test generated data is 0.394

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.552
PRC on test generated data is 0.393

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.626
PRC on test generated data is 0.424

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.348
----------------------------------------
roc mean across methods is 0.553
prc mean across methods is 0.388


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.61822222 0.38177778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.61975413 0.38024587]
before perturbation, mean and variance of data mean embedding are 0.003169 and 0.042647 
after perturbation, mean and variance of data mean embedding are 0.003024 and 0.158481 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.528
PRC on test generated data is 0.368

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.353

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.353

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.608
PRC on test generated data is 0.420

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.558
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.557
PRC on test generated data is 0.386

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.539
PRC on test generated data is 0.382

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.532
PRC on test generated data is 0.376

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.556
PRC on test generated data is 0.409

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.524
PRC on test generated data is 0.368
----------------------------------------
roc mean across methods is 0.533
prc mean across methods is 0.376


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.4
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.4_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63022222 0.36977778] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.62913673 0.37086327]
before perturbation, mean and variance of data mean embedding are 0.003155 and 0.042835 
after perturbation, mean and variance of data mean embedding are 0.003591 and 0.159143 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.534
PRC on test generated data is 0.400

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.385

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.381

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.593
PRC on test generated data is 0.435

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.558
PRC on test generated data is 0.413

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.415

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.577
PRC on test generated data is 0.428

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.497
PRC on test generated data is 0.381

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.381

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.522
PRC on test generated data is 0.392
----------------------------------------
roc mean across methods is 0.527
prc mean across methods is 0.398


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54454484 0.5        0.50056378 0.51269464 0.59236328 0.54727015
 0.57094264 0.53410909 0.54031944 0.51605174 0.53700965 0.52413096]
Average PRC each method:  [0.40311025 0.37264249 0.37332483 0.38669894 0.43321892 0.40302224
 0.41525649 0.39609331 0.40170965 0.38610747 0.39953867 0.38636417]
Std ROC each method:  [0.02977474 0.         0.00107752 0.02720696 0.01954896 0.03237323
 0.04496266 0.01858861 0.02561241 0.02232042 0.04917952 0.01555001]
Std PRC each method:  [0.02706998 0.01821713 0.01859364 0.02110838 0.02144579 0.01633626
 0.04541    0.01177425 0.0167248  0.00628608 0.01514213 0.02550814]
Average over repetitions across all methods
Average ROC:  0.5350000169301592
Average PRC:  0.39642395100383265
Std ROC:  0.009174744969687162
Variance PRC:  0.012901557379934344 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.425} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6471343 0.3528657] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6498257 0.3501743]
before perturbation, mean and variance of data mean embedding are 0.003166 and 0.043177 
after perturbation, mean and variance of data mean embedding are 0.002489 and 0.153133 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.517
PRC on test generated data is 0.382

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.374

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.374

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.568
PRC on test generated data is 0.410

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.577
PRC on test generated data is 0.414

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.520
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.381

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.378

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.389
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.385


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64927288 0.35072712] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65128463 0.34871537]
before perturbation, mean and variance of data mean embedding are 0.003156 and 0.043155 
after perturbation, mean and variance of data mean embedding are 0.003714 and 0.153273 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.498
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.601
PRC on test generated data is 0.438

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.384

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.559
PRC on test generated data is 0.412

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.504
PRC on test generated data is 0.381

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.384

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.379

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.544
PRC on test generated data is 0.401
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.389


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63088109 0.36911891] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63291936 0.36708064]
before perturbation, mean and variance of data mean embedding are 0.003164 and 0.042877 
after perturbation, mean and variance of data mean embedding are 0.002046 and 0.152733 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.339

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.669
PRC on test generated data is 0.434

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.556
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.623
PRC on test generated data is 0.423

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.339

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.336

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.336
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.356


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.63473054 0.36526946] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.63071919 0.36928081]
before perturbation, mean and variance of data mean embedding are 0.003171 and 0.042885 
after perturbation, mean and variance of data mean embedding are 0.003031 and 0.153029 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.554
PRC on test generated data is 0.377

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.345

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.344

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.541
PRC on test generated data is 0.365

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.568
PRC on test generated data is 0.389

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.536
PRC on test generated data is 0.367

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.345

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.346

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.352
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.355


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.425
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.425_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64499572 0.35500428] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64312637 0.35687363]
before perturbation, mean and variance of data mean embedding are 0.003161 and 0.043136 
after perturbation, mean and variance of data mean embedding are 0.003580 and 0.153673 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.370

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.623
PRC on test generated data is 0.446

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.369

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.666
PRC on test generated data is 0.468

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.588
PRC on test generated data is 0.429

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.551
PRC on test generated data is 0.415

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.376

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.568
PRC on test generated data is 0.420

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.518
PRC on test generated data is 0.378
----------------------------------------
roc mean across methods is 0.544
prc mean across methods is 0.398


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51530912 0.5        0.5        0.49955342 0.60042144 0.51223266
 0.5850285  0.53512864 0.52546794 0.50380918 0.51551088 0.52031357]
Average PRC each method:  [0.36933536 0.36051844 0.36051844 0.36061422 0.41874322 0.3670352
 0.41221841 0.38428848 0.38174323 0.36383653 0.37179703 0.37108112]
Std ROC each method:  [0.02069417 0.         0.         0.00156303 0.04427406 0.02219668
 0.05681294 0.0355795  0.01573464 0.00439716 0.0263953  0.01447486]
Std PRC each method:  [0.01577519 0.01690335 0.01690335 0.01712318 0.02944115 0.01297744
 0.03942456 0.02653285 0.02274728 0.01805077 0.02964631 0.02374435]
Average over repetitions across all methods
Average ROC:  0.5260646116866001
Average PRC:  0.3768108086334785
Std ROC:  0.010427027495849717
Variance PRC:  0.017651284095353117 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.45} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66075845 0.33924155] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65909291 0.34090709]
before perturbation, mean and variance of data mean embedding are 0.003177 and 0.043535 
after perturbation, mean and variance of data mean embedding are 0.002525 and 0.148149 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.578
PRC on test generated data is 0.408

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.585
PRC on test generated data is 0.411

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.587
PRC on test generated data is 0.408

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.599
PRC on test generated data is 0.420

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.370

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.371

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.362

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.552
PRC on test generated data is 0.394
----------------------------------------
roc mean across methods is 0.535
prc mean across methods is 0.383


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66158285 0.33841715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65945214 0.34054786]
before perturbation, mean and variance of data mean embedding are 0.003145 and 0.043282 
after perturbation, mean and variance of data mean embedding are 0.003682 and 0.148195 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.503
PRC on test generated data is 0.366

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.364

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.366

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.364

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.493
PRC on test generated data is 0.363

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.363

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.519
PRC on test generated data is 0.379

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.364

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.514
PRC on test generated data is 0.378

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.540
PRC on test generated data is 0.385
----------------------------------------
roc mean across methods is 0.506
prc mean across methods is 0.368


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65127782 0.34872218] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6528873 0.3471127]
before perturbation, mean and variance of data mean embedding are 0.003186 and 0.043495 
after perturbation, mean and variance of data mean embedding are 0.002109 and 0.147805 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.506
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.580
PRC on test generated data is 0.401

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.521
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.531
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.342

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.340
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.350


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.64715581 0.35284419] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.64609248 0.35390752]
before perturbation, mean and variance of data mean embedding are 0.003178 and 0.043287 
after perturbation, mean and variance of data mean embedding are 0.003044 and 0.148028 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.541
PRC on test generated data is 0.352

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.331

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.600
PRC on test generated data is 0.396

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.578
PRC on test generated data is 0.374

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.600
PRC on test generated data is 0.396

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.533
PRC on test generated data is 0.356

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.520
PRC on test generated data is 0.352

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.331

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.330

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.336
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.351


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.45
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.45_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.65787304 0.34212696] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.65382796 0.34617204]
before perturbation, mean and variance of data mean embedding are 0.003165 and 0.043485 
after perturbation, mean and variance of data mean embedding are 0.003569 and 0.148656 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.524
PRC on test generated data is 0.368

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.355

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.497
PRC on test generated data is 0.355

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.545
PRC on test generated data is 0.379

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.568
PRC on test generated data is 0.393

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.652
PRC on test generated data is 0.472

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.530
PRC on test generated data is 0.377

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.356

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.510
PRC on test generated data is 0.361

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.558
PRC on test generated data is 0.387
----------------------------------------
roc mean across methods is 0.532
prc mean across methods is 0.376


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.53053626 0.5        0.5        0.49954727 0.56317462 0.55066035
 0.57499027 0.51061263 0.51480256 0.50175191 0.5051655  0.53239487]
Average PRC each method:  [0.36838792 0.35043228 0.35043228 0.35062943 0.39051159 0.3787696
 0.40120031 0.35938777 0.36306141 0.35249369 0.35469551 0.36844971]
Std ROC each method:  [0.02723084 0.         0.         0.00145584 0.03432686 0.0343238
 0.05611052 0.01332636 0.01038361 0.00256222 0.0058929  0.02285462]
Std PRC each method:  [0.02138232 0.01307848 0.01307848 0.01277982 0.01602839 0.01948311
 0.04192686 0.00612672 0.01381105 0.01466988 0.01662546 0.02492055]
Average over repetitions across all methods
Average ROC:  0.5236363530688231
Average PRC:  0.36570429033841767
Std ROC:  0.011840557227893352
Variance PRC:  0.01315672111882242 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.475} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67157058 0.32842942] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66913694 0.33086306]
before perturbation, mean and variance of data mean embedding are 0.003191 and 0.044097 
after perturbation, mean and variance of data mean embedding are 0.002561 and 0.143521 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.517
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.347

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.551
PRC on test generated data is 0.379

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.597
PRC on test generated data is 0.402

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.605
PRC on test generated data is 0.402

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.498
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.560
PRC on test generated data is 0.402

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.349

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.349

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.540
PRC on test generated data is 0.370
----------------------------------------
roc mean across methods is 0.531
prc mean across methods is 0.366


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67673956 0.32326044] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6750911 0.3249089]
before perturbation, mean and variance of data mean embedding are 0.003171 and 0.044054 
after perturbation, mean and variance of data mean embedding are 0.003689 and 0.143643 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.359

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.498
PRC on test generated data is 0.359

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.633
PRC on test generated data is 0.444

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.520
PRC on test generated data is 0.368

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.473
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.492
PRC on test generated data is 0.357

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.522
PRC on test generated data is 0.375

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.361

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.508
PRC on test generated data is 0.363

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.551
PRC on test generated data is 0.386
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.370


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66202783 0.33797217] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66764321 0.33235679]
before perturbation, mean and variance of data mean embedding are 0.003164 and 0.043482 
after perturbation, mean and variance of data mean embedding are 0.002125 and 0.143035 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.504
PRC on test generated data is 0.327

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.504
PRC on test generated data is 0.329

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.496
PRC on test generated data is 0.324

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.527
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.563
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.339

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.325

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.325

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.325
----------------------------------------
roc mean across methods is 0.510
prc mean across methods is 0.332


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66043738 0.33956262] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.662253 0.337747]
before perturbation, mean and variance of data mean embedding are 0.003182 and 0.043641 
after perturbation, mean and variance of data mean embedding are 0.003052 and 0.143360 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.537
PRC on test generated data is 0.341

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.511
PRC on test generated data is 0.326

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.643
PRC on test generated data is 0.427

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.611
PRC on test generated data is 0.424

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.512
PRC on test generated data is 0.331

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.519
PRC on test generated data is 0.341

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.473
PRC on test generated data is 0.310
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.343


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.475
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.475_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.66878728 0.33121272] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.66972899 0.33027101]
before perturbation, mean and variance of data mean embedding are 0.003172 and 0.043727 
after perturbation, mean and variance of data mean embedding are 0.003562 and 0.143925 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.566
PRC on test generated data is 0.376

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.341

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.628
PRC on test generated data is 0.421

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.548
PRC on test generated data is 0.363

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.642
PRC on test generated data is 0.424

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.524
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.340

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.347

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.536
PRC on test generated data is 0.359
----------------------------------------
roc mean across methods is 0.539
prc mean across methods is 0.363


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52467789 0.5        0.5        0.50053937 0.56380324 0.54331336
 0.57446822 0.53475244 0.5260788  0.50441348 0.50433019 0.52023353]
Average PRC each method:  [0.35159494 0.33840445 0.33840445 0.3392367  0.37875164 0.36178795
 0.3870253  0.36805566 0.36018835 0.34312826 0.3409076  0.34995629]
Std ROC each method:  [0.02424714 0.         0.         0.0021155  0.05747014 0.02840959
 0.0704834  0.04565077 0.01786488 0.00730788 0.00439144 0.0292932 ]
Std PRC each method:  [0.01644655 0.01409774 0.01409774 0.01341134 0.04866512 0.02401441
 0.03860043 0.02899909 0.02541829 0.01173966 0.01570582 0.02839702]
Average over repetitions across all methods
Average ROC:  0.5247175433387944
Average PRC:  0.3547867995600446
Std ROC:  0.01037240527330574
Variance PRC:  0.01462439203413193 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.5} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68154091 0.31845909]
before perturbation, mean and variance of data mean embedding are 0.003163 and 0.044013 
after perturbation, mean and variance of data mean embedding are 0.002555 and 0.139109 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.608
PRC on test generated data is 0.408

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.548
PRC on test generated data is 0.364

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.639
PRC on test generated data is 0.414

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.559
PRC on test generated data is 0.371

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.533
PRC on test generated data is 0.362

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.523
PRC on test generated data is 0.347
----------------------------------------
roc mean across methods is 0.534
prc mean across methods is 0.356


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68843642 0.31156358] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68761866 0.31238134]
before perturbation, mean and variance of data mean embedding are 0.003195 and 0.044519 
after perturbation, mean and variance of data mean embedding are 0.003696 and 0.139394 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.501
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.349

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.557
PRC on test generated data is 0.383

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.545
PRC on test generated data is 0.375

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.637
PRC on test generated data is 0.444

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.497
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.349

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.492
PRC on test generated data is 0.345
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.361


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.67652708 0.32347292] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.67375374 0.32624626]
before perturbation, mean and variance of data mean embedding are 0.003160 and 0.043854 
after perturbation, mean and variance of data mean embedding are 0.002156 and 0.138756 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.524
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.323

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.636
PRC on test generated data is 0.401

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.536
PRC on test generated data is 0.338

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.516
PRC on test generated data is 0.332

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.321

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.321
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.331


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6749904 0.3250096] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6731025 0.3268975]
before perturbation, mean and variance of data mean embedding are 0.003170 and 0.044048 
after perturbation, mean and variance of data mean embedding are 0.003045 and 0.139095 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.533
PRC on test generated data is 0.339

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.605
PRC on test generated data is 0.380

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.643
PRC on test generated data is 0.409

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.319

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.531
PRC on test generated data is 0.334

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.317

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.527
PRC on test generated data is 0.333
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.335


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.5
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.5_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68267384 0.31732616] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6865017 0.3134983]
before perturbation, mean and variance of data mean embedding are 0.003185 and 0.044297 
after perturbation, mean and variance of data mean embedding are 0.003562 and 0.139703 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.539
PRC on test generated data is 0.355

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.570
PRC on test generated data is 0.374

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.561
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.528
PRC on test generated data is 0.350

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.345

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.507
PRC on test generated data is 0.344

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.335

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.359
----------------------------------------
roc mean across methods is 0.522
prc mean across methods is 0.348


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.54082472 0.5        0.5        0.50013962 0.58294815 0.54898399
 0.58059754 0.50268016 0.51785998 0.5013369  0.5        0.51777285]
Average PRC each method:  [0.35654751 0.33136201 0.33136201 0.3317405  0.38039416 0.35855594
 0.38226493 0.33396102 0.34396733 0.33313975 0.33136201 0.34092734]
Std ROC each method:  [0.03605314 0.         0.         0.0006821  0.03262834 0.05098415
 0.04957466 0.0044859  0.01284681 0.0026738  0.         0.01971968]
Std PRC each method:  [0.02681125 0.01128321 0.01128321 0.01094788 0.01221882 0.03602331
 0.03903481 0.01228649 0.01071665 0.01238277 0.01128321 0.0130902 ]
Average over repetitions across all methods
Average ROC:  0.5244286596154535
Average PRC:  0.3462987073146721
Std ROC:  0.0062214505161165695
Variance PRC:  0.011825281612105056 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.525} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6936803 0.3063197] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69035392 0.30964608]
before perturbation, mean and variance of data mean embedding are 0.003198 and 0.044683 
after perturbation, mean and variance of data mean embedding are 0.002609 and 0.135281 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.550
PRC on test generated data is 0.353

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.333

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.326

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.541
PRC on test generated data is 0.350
----------------------------------------
roc mean across methods is 0.509
prc mean across methods is 0.331


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69628253 0.30371747] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69489161 0.30510839]
before perturbation, mean and variance of data mean embedding are 0.003167 and 0.044461 
after perturbation, mean and variance of data mean embedding are 0.003651 and 0.135324 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.522
PRC on test generated data is 0.349

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.339

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.616
PRC on test generated data is 0.395

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.341

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.511
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.605
PRC on test generated data is 0.400

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.337

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.332

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.339

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.552
PRC on test generated data is 0.359
----------------------------------------
roc mean across methods is 0.528
prc mean across methods is 0.349


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.68736059 0.31263941] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68773116 0.31226884]
before perturbation, mean and variance of data mean embedding are 0.003179 and 0.044271 
after perturbation, mean and variance of data mean embedding are 0.002207 and 0.134861 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.311

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.311

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.599
PRC on test generated data is 0.371

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.536
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.576
PRC on test generated data is 0.361

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.312

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.313

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.311

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.506
PRC on test generated data is 0.316

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.311
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.322


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.6866171 0.3133829] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68333779 0.31666221]
before perturbation, mean and variance of data mean embedding are 0.003192 and 0.044261 
after perturbation, mean and variance of data mean embedding are 0.003070 and 0.135117 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.590
PRC on test generated data is 0.354

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.309

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.622
PRC on test generated data is 0.401

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.527
PRC on test generated data is 0.335

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.516
PRC on test generated data is 0.328

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.509
PRC on test generated data is 0.317

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.505
PRC on test generated data is 0.315

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.318
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.326


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.525
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.525_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69107807 0.30892193] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.68877011 0.31122989]
before perturbation, mean and variance of data mean embedding are 0.003145 and 0.044112 
after perturbation, mean and variance of data mean embedding are 0.003510 and 0.135586 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.516
PRC on test generated data is 0.327

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.548
PRC on test generated data is 0.345

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.323

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.601
PRC on test generated data is 0.376

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.543
PRC on test generated data is 0.347

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.513
PRC on test generated data is 0.329

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.514
PRC on test generated data is 0.328

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.320

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.541
PRC on test generated data is 0.340
----------------------------------------
roc mean across methods is 0.524
prc mean across methods is 0.333


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.5075948  0.5        0.5        0.5009186  0.58075278 0.51124746
 0.56299318 0.53622995 0.50831764 0.50434431 0.50320753 0.52980265]
Average PRC each method:  [0.32461054 0.31958406 0.31958406 0.32097959 0.3636138  0.3252626
 0.3607957  0.34444331 0.3278653  0.32277784 0.32304477 0.33559541]
Std ROC each method:  [0.00948636 0.         0.         0.00216541 0.02708791 0.01336191
 0.04719485 0.03779154 0.00514057 0.00579837 0.00263409 0.0193229 ]
Std PRC each method:  [0.01442383 0.00856791 0.00856791 0.0107491  0.01809    0.00999211
 0.02649781 0.02999889 0.00804236 0.00751747 0.008794   0.01837511]
Average over repetitions across all methods
Average ROC:  0.5204507417611642
Average PRC:  0.33234641518179575
Std ROC:  0.006627533326494746
Variance PRC:  0.009243417583987487 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.55} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69953221 0.30046779] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.69817094 0.30182906]
before perturbation, mean and variance of data mean embedding are 0.003176 and 0.044689 
after perturbation, mean and variance of data mean embedding are 0.002607 and 0.131436 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.645
PRC on test generated data is 0.396

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.533
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.308

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.540
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.306

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.322
----------------------------------------
roc mean across methods is 0.521
prc mean across methods is 0.320


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70349046 0.29650954] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70481693 0.29518307]
before perturbation, mean and variance of data mean embedding are 0.003159 and 0.044636 
after perturbation, mean and variance of data mean embedding are 0.003628 and 0.131528 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.572
PRC on test generated data is 0.357

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.529
PRC on test generated data is 0.329

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.549
PRC on test generated data is 0.360

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.316

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.316

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.544
PRC on test generated data is 0.336
----------------------------------------
roc mean across methods is 0.516
prc mean across methods is 0.326


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69701331 0.30298669] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70323935 0.29676065]
before perturbation, mean and variance of data mean embedding are 0.003191 and 0.044695 
after perturbation, mean and variance of data mean embedding are 0.002250 and 0.131143 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.531
PRC on test generated data is 0.315

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.608
PRC on test generated data is 0.364

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.607
PRC on test generated data is 0.363

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.498
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.522
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.301
----------------------------------------
roc mean across methods is 0.523
prc mean across methods is 0.314


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.69629363 0.30370637] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.6976897 0.3023103]
before perturbation, mean and variance of data mean embedding are 0.003187 and 0.044673 
after perturbation, mean and variance of data mean embedding are 0.003070 and 0.131395 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.640
PRC on test generated data is 0.387

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.574
PRC on test generated data is 0.336

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.503
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.299

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.305
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.310


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.55
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.55_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.697733 0.302267] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70107771 0.29892229]
before perturbation, mean and variance of data mean embedding are 0.003157 and 0.044484 
after perturbation, mean and variance of data mean embedding are 0.003510 and 0.131844 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.516
PRC on test generated data is 0.309

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.529
PRC on test generated data is 0.320

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.541
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.573
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.511
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.509
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.302

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.526
PRC on test generated data is 0.314
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.311


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.50938467 0.5        0.5        0.4997599  0.5988282  0.51624839
 0.55748009 0.50251748 0.52451422 0.5        0.50120168 0.5223398 ]
Average PRC each method:  [0.30918597 0.30478589 0.30478589 0.30478589 0.36483962 0.31239882
 0.33697166 0.30689755 0.32470095 0.30478589 0.30549271 0.31558249]
Std ROC each method:  [0.01251348 0.         0.         0.00048019 0.04365321 0.0159072
 0.03708487 0.00448785 0.01761987 0.         0.001611   0.0154867 ]
Std PRC each method:  [0.00624487 0.00600791 0.00600791 0.00600791 0.02656551 0.01098317
 0.01548071 0.00580565 0.02080832 0.00600791 0.00598531 0.01274671]
Average over repetitions across all methods
Average ROC:  0.5193562041743941
Average PRC:  0.31626778019029667
Std ROC:  0.0025323761182157703
Variance PRC:  0.005769865836609119 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.575} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71154517 0.28845483] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.7099521 0.2900479]
before perturbation, mean and variance of data mean embedding are 0.003166 and 0.044902 
after perturbation, mean and variance of data mean embedding are 0.002614 and 0.127962 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.533
PRC on test generated data is 0.320

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.605
PRC on test generated data is 0.366

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.303

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.517
PRC on test generated data is 0.312
----------------------------------------
roc mean across methods is 0.513
prc mean across methods is 0.311


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71294036 0.28705964] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71252984 0.28747016]
before perturbation, mean and variance of data mean embedding are 0.003170 and 0.044942 
after perturbation, mean and variance of data mean embedding are 0.003624 and 0.128075 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.587
PRC on test generated data is 0.363

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.307

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.623
PRC on test generated data is 0.401
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.319


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70735961 0.29264039] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70987427 0.29012573]
before perturbation, mean and variance of data mean embedding are 0.003161 and 0.044660 
after perturbation, mean and variance of data mean embedding are 0.002249 and 0.127578 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.502
PRC on test generated data is 0.295

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.602
PRC on test generated data is 0.352

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.603
PRC on test generated data is 0.346

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.595
PRC on test generated data is 0.354

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.547
PRC on test generated data is 0.320

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.517
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.294

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.294
----------------------------------------
roc mean across methods is 0.530
prc mean across methods is 0.311


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70561563 0.29438437] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70745759 0.29254241]
before perturbation, mean and variance of data mean embedding are 0.003171 and 0.044830 
after perturbation, mean and variance of data mean embedding are 0.003057 and 0.127893 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.514
PRC on test generated data is 0.298

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.597
PRC on test generated data is 0.342

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.554
PRC on test generated data is 0.315

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.531
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.509
PRC on test generated data is 0.296

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.510
PRC on test generated data is 0.296

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.493
PRC on test generated data is 0.287
----------------------------------------
roc mean across methods is 0.517
prc mean across methods is 0.299


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.575
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.575_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.70666202 0.29333798] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.70491837 0.29508163]
before perturbation, mean and variance of data mean embedding are 0.003151 and 0.044587 
after perturbation, mean and variance of data mean embedding are 0.003493 and 0.128303 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.548
PRC on test generated data is 0.314

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.496
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.597
PRC on test generated data is 0.342

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.527
PRC on test generated data is 0.304

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.513
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.499
PRC on test generated data is 0.292

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.553
PRC on test generated data is 0.318
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.302


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.51244251 0.5        0.5        0.49953077 0.5831973  0.53725913
 0.54604283 0.51410916 0.50683078 0.49953888 0.49977011 0.53723307]
Average PRC each method:  [0.30328872 0.29715216 0.29715216 0.29717101 0.34386488 0.31530953
 0.32463107 0.30592591 0.3011097  0.29715216 0.29715216 0.3223352 ]
Std ROC each method:  [0.01850983 0.         0.         0.00177704 0.0256003  0.03813448
 0.04542334 0.01701786 0.00642484 0.0004294  0.00045977 0.04758448]
Std PRC each method:  [0.00710742 0.00671758 0.00671758 0.00679165 0.01405911 0.01564769
 0.02982935 0.00816713 0.00465096 0.00671758 0.00671758 0.04117205]
Average over repetitions across all methods
Average ROC:  0.5196628781627438
Average PRC:  0.30852038628856604
Std ROC:  0.005776516132086813
Variance PRC:  0.0072521090759262805 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.6} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72284264 0.27715736] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72388458 0.27611542]
before perturbation, mean and variance of data mean embedding are 0.003174 and 0.045292 
after perturbation, mean and variance of data mean embedding are 0.002638 and 0.124750 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.566
PRC on test generated data is 0.333

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.301

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.305

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.606
PRC on test generated data is 0.375

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.301

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.506
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.303

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.517
PRC on test generated data is 0.318

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.523
PRC on test generated data is 0.312
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.313


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71844332 0.28155668] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72106878 0.27893122]
before perturbation, mean and variance of data mean embedding are 0.003165 and 0.045039 
after perturbation, mean and variance of data mean embedding are 0.003606 and 0.124763 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.507
PRC on test generated data is 0.298

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.586
PRC on test generated data is 0.344

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.567
PRC on test generated data is 0.321

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.582
PRC on test generated data is 0.340

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.290

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.494
PRC on test generated data is 0.288
----------------------------------------
roc mean across methods is 0.520
prc mean across methods is 0.302


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71878173 0.28121827] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71849885 0.28150115]
before perturbation, mean and variance of data mean embedding are 0.003172 and 0.045060 
after perturbation, mean and variance of data mean embedding are 0.002288 and 0.124379 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.538
PRC on test generated data is 0.312

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.291

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.611
PRC on test generated data is 0.351

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.498
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.565
PRC on test generated data is 0.330

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.502
PRC on test generated data is 0.293

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.515
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.291

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.291
----------------------------------------
roc mean across methods is 0.519
prc mean across methods is 0.302


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.71404399 0.28595601] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71123026 0.28876974]
before perturbation, mean and variance of data mean embedding are 0.003174 and 0.045126 
after perturbation, mean and variance of data mean embedding are 0.003064 and 0.124664 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.280

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.526
PRC on test generated data is 0.292

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.561
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.579
PRC on test generated data is 0.318

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.503
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.527
PRC on test generated data is 0.310

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.282

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.504
PRC on test generated data is 0.283

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.515
PRC on test generated data is 0.288
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.291


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.6
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.6_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.7143824 0.2856176] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71841949 0.28158051]
before perturbation, mean and variance of data mean embedding are 0.003174 and 0.045224 
after perturbation, mean and variance of data mean embedding are 0.003505 and 0.125175 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.646
PRC on test generated data is 0.363

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.531
PRC on test generated data is 0.295

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.615
PRC on test generated data is 0.348

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.548
PRC on test generated data is 0.317

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.503
PRC on test generated data is 0.283

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.281

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.554
PRC on test generated data is 0.307
----------------------------------------
roc mean across methods is 0.534
prc mean across methods is 0.301


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.52209008 0.5        0.5        0.49988864 0.57390783 0.53348681
 0.5891812  0.50263314 0.51933478 0.50122867 0.50418459 0.51705334]
Average PRC each method:  [0.30065856 0.2887135  0.2887135  0.2887135  0.33032561 0.30448968
 0.34251679 0.29203267 0.30522985 0.28997829 0.29277177 0.29735537]
Std ROC each method:  [0.02586231 0.         0.         0.00022272 0.05379892 0.0271092
 0.01831821 0.002416   0.01715801 0.00125474 0.0064961  0.02097425]
Std PRC each method:  [0.0197691  0.00756049 0.00756049 0.00756049 0.02844347 0.01064808
 0.0192275  0.0054765  0.00884681 0.00724906 0.01343628 0.0102655 ]
Average over repetitions across all methods
Average ROC:  0.5219157577171742
Average PRC:  0.30179159007961137
Std ROC:  0.005918884281966646
Variance PRC:  0.007094570748995012 


 -------------------------------------------------------------------------------- 



{'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 80, 'subsampled_rate': 0.625} 


Repetition:  0
 • seed                     - 0
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=0_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.73085771 0.26914229] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73127367 0.26872633]
before perturbation, mean and variance of data mean embedding are 0.003165 and 0.045517 
after perturbation, mean and variance of data mean embedding are 0.002645 and 0.121726 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.541
PRC on test generated data is 0.317

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.514
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.498
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.523
PRC on test generated data is 0.314

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.501
PRC on test generated data is 0.294

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.292

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.539
PRC on test generated data is 0.312
----------------------------------------
roc mean across methods is 0.510
prc mean across methods is 0.298


Repetition:  1
 • seed                     - 1
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=1_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72724285 0.27275715] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.72134048 0.27865952]
before perturbation, mean and variance of data mean embedding are 0.003182 and 0.045500 
after perturbation, mean and variance of data mean embedding are 0.003611 and 0.121803 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.499
PRC on test generated data is 0.284

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.526
PRC on test generated data is 0.300

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.499
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.534
PRC on test generated data is 0.302

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.285

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.284

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.501
PRC on test generated data is 0.284
----------------------------------------
roc mean across methods is 0.505
prc mean across methods is 0.287


Repetition:  2
 • seed                     - 2
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=2_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72954321 0.27045679] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73122714 0.26877286]
before perturbation, mean and variance of data mean embedding are 0.003162 and 0.045314 
after perturbation, mean and variance of data mean embedding are 0.002303 and 0.121348 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.572
PRC on test generated data is 0.357

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.519
PRC on test generated data is 0.298

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.507
PRC on test generated data is 0.294

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.289

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.289
----------------------------------------
roc mean across methods is 0.508
prc mean across methods is 0.296


Repetition:  3
 • seed                     - 3
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=3_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72855734 0.27144266] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.73001626 0.26998374]
before perturbation, mean and variance of data mean embedding are 0.003171 and 0.045478 
after perturbation, mean and variance of data mean embedding are 0.003064 and 0.121681 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.608
PRC on test generated data is 0.352

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.510
PRC on test generated data is 0.291

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.537
PRC on test generated data is 0.306

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.505
PRC on test generated data is 0.289

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.287

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.512
PRC on test generated data is 0.292
----------------------------------------
roc mean across methods is 0.514
prc mean across methods is 0.295


Repetition:  4
 • seed                     - 4
 • data_name                - isolet
 • batch_rate               - 0.8
 • epochs                   - 1400
 • lr                       - 0.01
 • lr_decay                 - 0.9
 • is_private               - True
 • epsilon                  - 1.0
 • delta                    - 1e-05
 • heuristic_sigma          - True
 • kernel_length            - 0.005
 • order_hermite            - 80
 • undersampled_rate        - 0.625
 • separate_kernel_length   - True
 • normalize_data           - False
 • classifiers              - [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
 • log_name                 - isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue
 • log_dir                  - logs/gen/isolet_seed=4_order=80_private=True_epsilon=1.0_delta=1e-05_heuristic_sigma=True_kernel_length=0.005_br=0.8_lr=0.01_n_epoch=1400_undersam_rate=0.625_normalize_dataFalse_separate_kernel_lengthTrue/
-------------------------------------------
isolet dataset
testing non-standardized data
we use the median heuristic for length scale
we use a separate length scale on each coordinate of the data
computing mean embedding of data: (1) compute the weights

 weights with no privatization are [0.72034177 0.27965823] 

private
eps,delta = (1.0,1e-05) ==> Noise level sigma= 6.930431582631886
weights after privatization are [0.71610009 0.28389991]
before perturbation, mean and variance of data mean embedding are 0.003154 and 0.045102 
after perturbation, mean and variance of data mean embedding are 0.003477 and 0.121977 

 generated data


 <class 'sklearn.linear_model._logistic.LogisticRegression'>
logistic regression with balanced class weight
logistic regression with saga solver
logistic regression with liblinear solver
logistic regression with liblinear solver
ROC on test generated data is 0.503
PRC on test generated data is 0.272

 <class 'sklearn.naive_bayes.GaussianNB'>
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.naive_bayes.BernoulliNB'>
training again
training again
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.svm._classes.LinearSVC'>
training again
training again
training again
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.tree._classes.DecisionTreeClassifier'>
training again
training again
training again
ROC on test generated data is 0.518
PRC on test generated data is 0.277

 <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>
test LDA with different hyperparameters
ROC on test generated data is 0.507
PRC on test generated data is 0.270

 <class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
ROC on test generated data is 0.626
PRC on test generated data is 0.343

 <class 'sklearn.ensemble._bagging.BaggingClassifier'>
test Bagging with different hyperparameters
ROC on test generated data is 0.505
PRC on test generated data is 0.271

 <class 'sklearn.ensemble._forest.RandomForestClassifier'>
training again
training again
training again
training again
ROC on test generated data is 0.501
PRC on test generated data is 0.270

 <class 'sklearn.ensemble._gb.GradientBoostingClassifier'>
ROC on test generated data is 0.500
PRC on test generated data is 0.267

 <class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>
ROC on test generated data is 0.502
PRC on test generated data is 0.270

 <class 'xgboost.sklearn.XGBClassifier'>
test XGB with different hyperparameters
ROC on test generated data is 0.552
PRC on test generated data is 0.292
----------------------------------------
roc mean across methods is 0.518
prc mean across methods is 0.278


 ---------------------------------------- 


For each of the methods
Average ROC each method:  [0.50057307 0.5        0.5        0.49989305 0.55296209 0.50606998
 0.54267964 0.50109158 0.50741327 0.50026247 0.50046846 0.52076787]
Average PRC each method:  [0.28451778 0.28367816 0.28367816 0.28367816 0.32047601 0.28624485
 0.30802637 0.28447782 0.29041498 0.28404984 0.28413574 0.29368941]
Std ROC each method:  [0.00114613 0.         0.         0.0002139  0.03296825 0.00556654
 0.04400357 0.00218317 0.00802018 0.00052493 0.00093693 0.02112206]
Std PRC each method:  [0.00701074 0.00857964 0.00857964 0.00857964 0.03061392 0.00912511
 0.01817805 0.00708426 0.01422792 0.00896185 0.00771887 0.00968646]
Average over repetitions across all methods
Average ROC:  0.5110151226255726
Average PRC:  0.2905889383945929
Std ROC:  0.0045959824780722365
Variance PRC:  0.0074643704692011455 


 -------------------------------------------------------------------------------- 





 ******************************
isolet
Max ROC!  0.5445750735099819
Max PRC!  0.40413005055967116
Setup:  {'batch_rate': 0.8, 'kernel_length': 0.005, 'n_epochs': 1400, 'order_hermite': 10, 'subsampled_rate': 0.4}
****************************************************************************************************
